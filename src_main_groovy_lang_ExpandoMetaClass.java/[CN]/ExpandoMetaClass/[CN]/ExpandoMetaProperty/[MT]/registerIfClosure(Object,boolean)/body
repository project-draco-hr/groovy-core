{
  if (arg instanceof Closure) {
    Closure callable=(Closure)arg;
    final List<ClosureMetaMethod> list=ClosureMetaMethod.createMethodList(propertyName,theClass,callable);
    for (    MetaMethod method : list) {
      Class[] paramTypes=method.getNativeParameterTypes();
      if (!this.isStatic) {
        Method foundMethod=checkIfMethodExists(theClass,propertyName,paramTypes,false);
        if (foundMethod != null && !replace)         throw new GroovyRuntimeException("Cannot add new method [" + propertyName + "] for arguments ["+ DefaultGroovyMethods.inspect(paramTypes)+ "]. It already exists!");
        registerInstanceMethod(method);
      }
 else {
        Method foundMethod=checkIfMethodExists(theClass,propertyName,paramTypes,true);
        if (foundMethod != null && !replace)         throw new GroovyRuntimeException("Cannot add new static method [" + propertyName + "] for arguments ["+ DefaultGroovyMethods.inspect(paramTypes)+ "]. It already exists!");
        registerStaticMethod(propertyName,callable);
      }
    }
  }
}
