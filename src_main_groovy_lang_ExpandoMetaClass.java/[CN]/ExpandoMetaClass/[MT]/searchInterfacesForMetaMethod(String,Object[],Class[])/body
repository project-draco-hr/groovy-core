{
  MetaMethod method=null;
  for (int i=0; i < interfaces.length; i++) {
    Class anInterface=interfaces[i];
    MetaClass metaClass=this.registry.getMetaClass(anInterface);
    if (metaClass instanceof MutableMetaClass) {
      method=getMetaMethodFromMutableMetaClass(methodName,arguments,metaClass);
      if (method != null)       break;
    }
    Class[] superInterfaces=anInterface.getInterfaces();
    if (superInterfaces.length > 0) {
      method=searchInterfacesForMetaMethod(methodName,arguments,superInterfaces);
      if (method != null)       break;
    }
  }
  return method;
}
