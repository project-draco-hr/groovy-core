{
  performOperationOnMetaClass(new Callable(){
    public void call(){
      ClosureStaticMetaMethod metaMethod=new ClosureStaticMetaMethod(methodName,theClass,callable);
      if (methodName.equals(INVOKE_METHOD_METHOD) && callable.getParameterTypes().length == 2) {
        invokeStaticMethodMethod=metaMethod;
      }
 else {
        MethodKey key=new DefaultMethodKey(theClass,methodName,metaMethod.getParameterTypes(),false);
        addMetaMethod(metaMethod);
        if (isGetter(methodName,metaMethod.getParameterTypes())) {
          String propertyName=getPropertyForGetter(methodName);
          registerBeanPropertyForMethod(metaMethod,propertyName,true,true);
        }
 else         if (isSetter(methodName,metaMethod.getParameterTypes())) {
          String propertyName=getPropertyForSetter(methodName);
          registerBeanPropertyForMethod(metaMethod,propertyName,false,true);
        }
        expandoMethods.put(key,metaMethod);
        cacheStaticMethod(key,metaMethod);
      }
    }
  }
);
}
