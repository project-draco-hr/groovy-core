{
  final boolean inited=this.initCalled;
  performOperationOnMetaClass(new Callable(){
    public void call(){
      ClosureMetaMethod metaMethod=new ClosureMetaMethod(methodName,theClass,callable);
      MethodKey key=new DefaultMethodKey(theClass,methodName,metaMethod.getParameterTypes(),false);
      addMetaMethod(metaMethod);
      expandoMethods.add(metaMethod);
      cacheInstanceMethod(key,metaMethod);
      if (inited && isGetter(methodName,metaMethod.getParameterTypes())) {
        String propertyName=getPropertyForGetter(methodName);
        registerBeanPropertyForMethod(metaMethod,propertyName,true);
      }
 else       if (inited && isSetter(methodName,metaMethod.getParameterTypes())) {
        String propertyName=getPropertyForSetter(methodName);
        registerBeanPropertyForMethod(metaMethod,propertyName,false);
      }
      performRegistryCallbacks();
      if (!hasCreationHandle) {
        registerWithInheritenceManager(theClass,metaMethod);
      }
    }
  }
);
}
