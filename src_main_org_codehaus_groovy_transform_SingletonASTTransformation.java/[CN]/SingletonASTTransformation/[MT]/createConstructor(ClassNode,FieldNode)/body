{
  final List list=classNode.getDeclaredConstructors();
  MethodNode found=null;
  for (Iterator it=list.iterator(); it.hasNext(); ) {
    MethodNode mn=(MethodNode)it.next();
    final Parameter[] parameters=mn.getParameters();
    if (parameters == null || parameters.length == 0) {
      found=mn;
      break;
    }
  }
  if (found == null) {
    final BlockStatement body=new BlockStatement();
    body.addStatement(new IfStatement(new BooleanExpression(new BinaryExpression(new FieldExpression(field),Token.newSymbol("!=",-1,-1),ConstantExpression.NULL)),new ThrowStatement(new ConstructorCallExpression(ClassHelper.make(RuntimeException.class),new ArgumentListExpression(new ConstantExpression("Can't instantiate singleton " + classNode.getName() + ". Use "+ classNode.getName()+ ".instance")))),new EmptyStatement()));
    classNode.addConstructor(new ConstructorNode(ACC_PRIVATE,body));
  }
}
