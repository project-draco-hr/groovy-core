{
  if (exp instanceof VariableExpression && ((VariableExpression)exp).isClosureSharedVariable() && isPrimitiveType(cn)) {
    cn=getWrapper(cn);
  }
 else   if (exp instanceof MethodCallExpression && ((MethodCallExpression)exp).isSafe() && isPrimitiveType(cn)) {
    cn=getWrapper(cn);
  }
  if (cn == UNKNOWN_PARAMETER_TYPE) {
    storeType(exp,getOriginalDeclarationType(exp));
    return;
  }
  ClassNode oldValue=(ClassNode)exp.putNodeMetaData(StaticTypesMarker.INFERRED_TYPE,cn);
  if (oldValue != null) {
    ClassNode oldDIT=(ClassNode)exp.getNodeMetaData(StaticTypesMarker.DECLARATION_INFERRED_TYPE);
    if (oldDIT != null) {
      exp.putNodeMetaData(StaticTypesMarker.DECLARATION_INFERRED_TYPE,cn == null ? oldDIT : lowestUpperBound(oldDIT,cn));
    }
 else {
      exp.putNodeMetaData(StaticTypesMarker.DECLARATION_INFERRED_TYPE,cn == null ? oldValue : lowestUpperBound(oldValue,cn));
    }
  }
  if (exp instanceof VariableExpression) {
    VariableExpression var=(VariableExpression)exp;
    final Variable accessedVariable=var.getAccessedVariable();
    if (accessedVariable != null && accessedVariable != exp && accessedVariable instanceof VariableExpression) {
      storeType((Expression)accessedVariable,cn);
    }
    if (var.isClosureSharedVariable() && cn != null) {
      List<ClassNode> assignedTypes=typeCheckingContext.closureSharedVariablesAssignmentTypes.get(var);
      if (assignedTypes == null) {
        assignedTypes=new LinkedList<ClassNode>();
        typeCheckingContext.closureSharedVariablesAssignmentTypes.put(var,assignedTypes);
      }
      assignedTypes.add(cn);
    }
    if (!typeCheckingContext.temporaryIfBranchTypeInformation.empty()) {
      List<ClassNode> temporaryTypesForExpression=getTemporaryTypesForExpression(exp);
      if (temporaryTypesForExpression != null && !temporaryTypesForExpression.isEmpty()) {
        temporaryTypesForExpression.clear();
      }
    }
  }
}
