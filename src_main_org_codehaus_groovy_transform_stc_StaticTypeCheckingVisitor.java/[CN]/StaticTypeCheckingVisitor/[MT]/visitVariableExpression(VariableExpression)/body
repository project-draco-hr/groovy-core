{
  super.visitVariableExpression(vexp);
  if (storeTypeForThis(vexp))   return;
  if (storeTypeForSuper(vexp))   return;
  if (vexp.getAccessedVariable() instanceof PropertyNode) {
    if (tryVariableExpressionAsProperty(vexp,vexp.getName())) {
      BinaryExpression enclosingBinaryExpression=typeCheckingContext.getEnclosingBinaryExpression();
      if (enclosingBinaryExpression != null) {
        Expression leftExpression=enclosingBinaryExpression.getLeftExpression();
        Expression rightExpression=enclosingBinaryExpression.getRightExpression();
        SetterInfo setterInfo=removeSetterInfo(leftExpression);
        if (setterInfo != null) {
          if (!ensureValidSetter(vexp,leftExpression,rightExpression,setterInfo)) {
            return;
          }
        }
      }
    }
  }
  TypeCheckingContext.EnclosingClosure enclosingClosure=typeCheckingContext.getEnclosingClosure();
  if (enclosingClosure != null) {
    String name=vexp.getName();
    if (name.equals("owner") || name.equals("thisObject")) {
      storeType(vexp,typeCheckingContext.getEnclosingClassNode());
      return;
    }
 else     if ("delegate".equals(name)) {
      DelegationMetadata md=getDelegationMetadata(enclosingClosure.getClosureExpression());
      ClassNode type=typeCheckingContext.getEnclosingClassNode();
      if (md != null)       type=md.getType();
      storeType(vexp,type);
      return;
    }
  }
  if (!(vexp.getAccessedVariable() instanceof DynamicVariable))   return;
  DynamicVariable dyn=(DynamicVariable)vexp.getAccessedVariable();
  String dynName=dyn.getName();
  if (tryVariableExpressionAsProperty(vexp,dynName))   return;
  if (!extension.handleUnresolvedVariableExpression(vexp)) {
    addStaticTypeError("The variable [" + vexp.getName() + "] is undeclared.",vexp);
  }
}
