{
  Parameter[] params=selectedMethod != null ? selectedMethod.getParameters() : Parameter.EMPTY_ARRAY;
  List<Expression> expressions=new LinkedList<Expression>(arguments.getExpressions());
  if (selectedMethod instanceof ExtensionMethodNode) {
    params=((ExtensionMethodNode)selectedMethod).getExtensionMethodNode().getParameters();
    expressions.add(0,new VariableExpression("$self",receiver));
  }
  ArgumentListExpression newArgs=new ArgumentListExpression(expressions);
  for (int i=0, expressionsSize=expressions.size(); i < expressionsSize; i++) {
    final Expression expression=expressions.get(i);
    if (visitClosures && expression instanceof ClosureExpression || !visitClosures && !(expression instanceof ClosureExpression)) {
      if (i < params.length && visitClosures) {
        Parameter param=params[i];
        checkClosureWithDelegatesTo(newArgs,params,expression,param);
        if (selectedMethod instanceof ExtensionMethodNode) {
          if (i > 0) {
            inferClosureParameterTypes(receiver,arguments,(ClosureExpression)expression,param,selectedMethod);
          }
        }
 else {
          inferClosureParameterTypes(receiver,newArgs,(ClosureExpression)expression,param,selectedMethod);
        }
      }
      expression.visit(this);
      if (expression.getNodeMetaData(StaticTypesMarker.DELEGATION_METADATA) != null) {
        expression.removeNodeMetaData(StaticTypesMarker.DELEGATION_METADATA);
      }
    }
  }
}
