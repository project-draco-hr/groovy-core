{
  super.visitConstructorCallExpression(call);
  ClassNode receiver=call.isThisCall() ? classNode : call.isSuperCall() ? classNode.getSuperClass() : call.getType();
  Expression arguments=call.getArguments();
  ClassNode[] args=getArgumentTypes(InvocationWriter.makeArgumentList(arguments));
  MethodNode node=null;
  if (args.length == 1 && implementsInterfaceOrIsSubclassOf(args[0],MAP_TYPE) && findMethod(receiver,"<init>",ClassNode.EMPTY_ARRAY).size() == 1) {
    node=typeCheckMapConstructor(call,receiver,arguments);
    if (node != null) {
      storeTargetMethod(call,node);
      return;
    }
  }
  node=findMethodOrFail(call,receiver,"<init>",args);
  if (node != null) {
    if (node.getParameters().length == 0 && args.length == 1 && implementsInterfaceOrIsSubclassOf(args[0],MAP_TYPE)) {
      node=typeCheckMapConstructor(call,receiver,arguments);
    }
    if (node != null)     storeTargetMethod(call,node);
  }
}
