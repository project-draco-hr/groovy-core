{
  if (isSkipMode(node))   return;
  if (!typeCheckingContext.methodsToBeVisited.isEmpty() && !typeCheckingContext.methodsToBeVisited.contains(node))   return;
  if (typeCheckingContext.alreadyVisitedMethods.contains(node))   return;
  typeCheckingContext.alreadyVisitedMethods.add(node);
  ErrorCollector oldCollector=typeCheckingContext.errorCollector;
  typeCheckingContext.errorCollector=collector;
  final boolean osc=typeCheckingContext.isInStaticContext;
  try {
    typeCheckingContext.isInStaticContext=node.isStatic();
    super.visitMethod(node);
    ClassNode rtype=(ClassNode)node.getNodeMetaData(StaticTypesMarker.INFERRED_RETURN_TYPE);
    if (rtype == null) {
      node.putNodeMetaData(StaticTypesMarker.INFERRED_RETURN_TYPE,node.getReturnType());
    }
    addTypeCheckingInfoAnnotation(node);
  }
  finally {
    typeCheckingContext.isInStaticContext=osc;
  }
  typeCheckingContext.errorCollector=oldCollector;
  node.putNodeMetaData(ERROR_COLLECTOR,collector);
}
