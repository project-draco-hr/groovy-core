{
  List<MethodNode> methods;
  if ("<init>".equals(name)) {
    methods=new ArrayList<MethodNode>(receiver.getDeclaredConstructors());
    if (methods.isEmpty()) {
      MethodNode node=new MethodNode("<init>",Opcodes.ACC_PUBLIC,receiver,Parameter.EMPTY_ARRAY,ClassNode.EMPTY_ARRAY,EmptyStatement.INSTANCE);
      node.setDeclaringClass(receiver);
      return Collections.singletonList(node);
    }
  }
 else {
    methods=receiver.getMethods(name);
  }
  List<MethodNode> chosen=chooseBestBethod(receiver,methods,args);
  if (!chosen.isEmpty())   return chosen;
  methods.clear();
  Set<MethodNode> fromDGM=findDGMMethodsForClassNode(receiver);
  for (  MethodNode methodNode : fromDGM) {
    if (methodNode.getName().equals(name))     methods.add(methodNode);
  }
  chosen=chooseBestBethod(receiver,methods,args);
  if (!chosen.isEmpty()) {
    return chosen;
  }
  if (receiver == ClassHelper.GSTRING_TYPE)   return findMethod(ClassHelper.STRING_TYPE,name,args);
  return EMPTY_METHODNODE_LIST;
}
