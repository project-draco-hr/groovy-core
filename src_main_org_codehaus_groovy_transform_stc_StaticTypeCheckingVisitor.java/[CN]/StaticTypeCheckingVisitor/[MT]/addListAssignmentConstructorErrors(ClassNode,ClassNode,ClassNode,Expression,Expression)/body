{
  if (rightExpression instanceof ListExpression && !implementsInterfaceOrIsSubclassOf(LIST_TYPE,leftRedirect)) {
    ArgumentListExpression argList=new ArgumentListExpression(((ListExpression)rightExpression).getExpressions());
    ClassNode[] args=getArgumentTypes(argList);
    MethodNode methodNode=checkGroovyStyleConstructor(leftRedirect,args,assignmentExpression);
    if (methodNode != null) {
      rightExpression.putNodeMetaData(StaticTypesMarker.DIRECT_METHOD_CALL_TARGET,methodNode);
    }
  }
 else   if (!implementsInterfaceOrIsSubclassOf(inferredRightExpressionType,leftRedirect) && implementsInterfaceOrIsSubclassOf(inferredRightExpressionType,LIST_TYPE) && !isWildcardLeftHandSide(leftExpressionType)) {
    if (!extension.handleIncompatibleAssignment(leftExpressionType,inferredRightExpressionType,assignmentExpression)) {
      addAssignmentError(leftExpressionType,inferredRightExpressionType,assignmentExpression);
    }
  }
}
