{
  String propertyName=pexp.getPropertyAsString();
  if (propertyName == null)   return null;
  Expression objectExpression=pexp.getObjectExpression();
  List<Receiver<String>> receivers=new LinkedList<Receiver<String>>();
  List<Receiver<String>> owners=makeOwnerList(objectExpression);
  addReceivers(receivers,owners,pexp.isImplicitThis());
  String capName=MetaClassHelper.capitalize(propertyName);
  boolean isAttributeExpression=pexp instanceof AttributeExpression;
  for (  Receiver<String> receiver : receivers) {
    ClassNode testClass=receiver.getType();
    LinkedList<ClassNode> queue=new LinkedList<ClassNode>();
    queue.add(testClass);
    if (testClass.isInterface()) {
      queue.addAll(testClass.getAllInterfaces());
    }
    while (!queue.isEmpty()) {
      ClassNode current=queue.removeFirst();
      current=current.redirect();
      String setterName="set" + capName;
      List<MethodNode> setterMethods=findSetters(current,setterName,false);
      if (!setterMethods.isEmpty()) {
        return new SetterInfo(current,setterName,setterMethods);
      }
      if (!isAttributeExpression && current.getSuperClass() != null) {
        queue.add(current.getSuperClass());
      }
    }
  }
  return null;
}
