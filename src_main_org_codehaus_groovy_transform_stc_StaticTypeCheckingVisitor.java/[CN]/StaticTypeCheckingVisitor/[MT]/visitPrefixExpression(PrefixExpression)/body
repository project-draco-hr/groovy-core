{
  super.visitPrefixExpression(expression);
  Expression inner=expression.getExpression();
  ClassNode exprType=getType(inner);
  int type=expression.getOperation().getType();
  if (isPrimitiveType(exprType) || isPrimitiveType(getUnwrapper(exprType))) {
    if (type == PLUS_PLUS || type == MINUS_MINUS)     return;
    addStaticTypeError("Unsupported prefix operation type [" + expression.getOperation() + "]",expression);
    return;
  }
  String name=type == PLUS_PLUS ? "next" : type == MINUS_MINUS ? "previous" : null;
  if (name == null) {
    addStaticTypeError("Unsupported prefix operation type [" + expression.getOperation() + "]",expression);
    return;
  }
  MethodNode node=findMethodOrFail(inner,exprType,name);
  if (node != null) {
    storeTargetMethod(expression,node);
  }
}
