{
  if (type.isUsingGenerics() && !type.isGenericsPlaceHolder()) {
    GenericsType[] gts=type.getGenericsTypes();
    if (gts != null) {
      GenericsType[] copy=new GenericsType[gts.length];
      for (int i=0; i < gts.length; i++) {
        GenericsType genericsType=gts[i];
        copy[i]=fullyResolve(genericsType,placeholders);
      }
      gts=copy;
    }
    ClassNode result=type.getPlainNodeReference();
    result.setGenericsTypes(gts);
    return result;
  }
 else   if (type.isArray()) {
    return fullyResolveType(type.getComponentType(),placeholders).makeArray();
  }
  return type;
}
