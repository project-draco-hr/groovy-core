{
  Parameter[] params=selectedMethod != null ? selectedMethod.getParameters() : Parameter.EMPTY_ARRAY;
  final List<Expression> expressions=arguments.getExpressions();
  for (int i=0, expressionsSize=expressions.size(); i < expressionsSize; i++) {
    final Expression expression=expressions.get(i);
    if (visitClosures && expression instanceof ClosureExpression || !visitClosures && !(expression instanceof ClosureExpression)) {
      if (i < params.length && visitClosures) {
        Parameter param=params[i];
        List<AnnotationNode> annotations=param.getAnnotations(DELEGATES_TO);
        if (annotations != null && !annotations.isEmpty()) {
          for (          AnnotationNode annotation : annotations) {
            Expression value=annotation.getMember("value");
            if (value instanceof ClassExpression) {
              Expression strategy=annotation.getMember("strategy");
              Integer stInt=Closure.OWNER_FIRST;
              if (strategy != null) {
                stInt=(Integer)evaluateExpression(new CastExpression(ClassHelper.Integer_TYPE,strategy));
              }
              expression.putNodeMetaData(StaticTypesMarker.DELEGATION_METADATA,new DelegationMetadata(value.getType(),stInt,delegationMetadata));
            }
          }
        }
      }
      expression.visit(this);
      if (expression.getNodeMetaData(StaticTypesMarker.DELEGATION_METADATA) != null) {
        expression.removeNodeMetaData(StaticTypesMarker.DELEGATION_METADATA);
      }
    }
  }
}
