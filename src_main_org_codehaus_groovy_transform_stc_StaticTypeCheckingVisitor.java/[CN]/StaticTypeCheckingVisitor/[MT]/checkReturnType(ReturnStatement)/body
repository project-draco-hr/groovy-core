{
  ClassNode type=getType(statement.getExpression());
  if (methodNode != null) {
    if (!methodNode.isVoidMethod() && !type.equals(void_WRAPPER_TYPE) && !type.equals(VOID_TYPE)&& !checkCompatibleAssignmentTypes(methodNode.getReturnType(),type)) {
      addStaticTypeError("Cannot return value of type " + type + " on method returning type "+ methodNode.getReturnType(),statement.getExpression());
    }
 else     if (!methodNode.isVoidMethod()) {
      ClassNode previousType=(ClassNode)methodNode.getNodeMetaData(StaticTypesMarker.INFERRED_RETURN_TYPE);
      ClassNode inferred=previousType == null ? type : lowestUpperBound(type,previousType);
      if (implementsInterfaceOrIsSubclassOf(inferred,methodNode.getReturnType())) {
        methodNode.putNodeMetaData(StaticTypesMarker.INFERRED_RETURN_TYPE,inferred);
      }
 else {
        methodNode.putNodeMetaData(StaticTypesMarker.INFERRED_RETURN_TYPE,methodNode.getReturnType());
      }
    }
  }
  return type;
}
