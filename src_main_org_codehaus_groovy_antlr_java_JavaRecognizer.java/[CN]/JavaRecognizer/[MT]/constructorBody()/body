{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST constructorBody_AST=null;
  Token lc=null;
  AST lc_AST=null;
  lc=LT(1);
  lc_AST=astFactory.create(lc);
  astFactory.makeASTRoot(currentAST,lc_AST);
  match(LCURLY);
  if (inputState.guessing == 0) {
    lc_AST.setType(SLIST);
  }
{
    if ((_tokenSet_22.member(LA(1))) && (_tokenSet_23.member(LA(2)))) {
      explicitConstructorInvocation();
      astFactory.addASTChild(currentAST,returnAST);
    }
 else     if ((_tokenSet_24.member(LA(1))) && (_tokenSet_25.member(LA(2)))) {
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
{
    _loop149:     do {
      if ((_tokenSet_21.member(LA(1)))) {
        statement();
        astFactory.addASTChild(currentAST,returnAST);
      }
 else {
        break _loop149;
      }
    }
 while (true);
  }
  match(RCURLY);
  constructorBody_AST=(AST)currentAST.root;
  returnAST=constructorBody_AST;
}
