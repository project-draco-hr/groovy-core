{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST parameterDeclarationList_AST=null;
  Token first=LT(1);
{
    boolean synPredMatched171=false;
    if (((_tokenSet_18.member(LA(1))) && (_tokenSet_19.member(LA(2))))) {
      int _m171=mark();
      synPredMatched171=true;
      inputState.guessing++;
      try {
{
          parameterDeclaration();
        }
      }
 catch (      RecognitionException pe) {
        synPredMatched171=false;
      }
      rewind(_m171);
      inputState.guessing--;
    }
    if (synPredMatched171) {
      parameterDeclaration();
      astFactory.addASTChild(currentAST,returnAST);
{
        _loop175:         do {
          boolean synPredMatched174=false;
          if (((LA(1) == COMMA) && (_tokenSet_18.member(LA(2))))) {
            int _m174=mark();
            synPredMatched174=true;
            inputState.guessing++;
            try {
{
                match(COMMA);
                parameterDeclaration();
              }
            }
 catch (            RecognitionException pe) {
              synPredMatched174=false;
            }
            rewind(_m174);
            inputState.guessing--;
          }
          if (synPredMatched174) {
            match(COMMA);
            parameterDeclaration();
            astFactory.addASTChild(currentAST,returnAST);
          }
 else {
            break _loop175;
          }
        }
 while (true);
      }
{
switch (LA(1)) {
case COMMA:
{
            match(COMMA);
            variableLengthParameterDeclaration();
            astFactory.addASTChild(currentAST,returnAST);
            break;
          }
case RPAREN:
{
          break;
        }
default :
{
        throw new NoViableAltException(LT(1),getFilename());
      }
  }
}
}
 else if ((_tokenSet_18.member(LA(1))) && (_tokenSet_20.member(LA(2)))) {
variableLengthParameterDeclaration();
astFactory.addASTChild(currentAST,returnAST);
}
 else if ((LA(1) == RPAREN)) {
}
 else {
throw new NoViableAltException(LT(1),getFilename());
}
}
if (inputState.guessing == 0) {
parameterDeclarationList_AST=(AST)currentAST.root;
parameterDeclarationList_AST=(AST)astFactory.make((new ASTArray(2)).add(create(PARAMETERS,"PARAMETERS",first,LT(1))).add(parameterDeclarationList_AST));
currentAST.root=parameterDeclarationList_AST;
currentAST.child=parameterDeclarationList_AST != null && parameterDeclarationList_AST.getFirstChild() != null ? parameterDeclarationList_AST.getFirstChild() : parameterDeclarationList_AST;
currentAST.advanceChildToEnd();
}
parameterDeclarationList_AST=(AST)currentAST.root;
returnAST=parameterDeclarationList_AST;
}
