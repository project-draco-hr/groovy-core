{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST typeArgument_AST=null;
  Token first=LT(1);
{
switch (LA(1)) {
case IDENT:
case LITERAL_void:
case LITERAL_boolean:
case LITERAL_byte:
case LITERAL_char:
case LITERAL_short:
case LITERAL_int:
case LITERAL_float:
case LITERAL_long:
case LITERAL_double:
{
        typeArgumentSpec();
        astFactory.addASTChild(currentAST,returnAST);
        break;
      }
case QUESTION:
{
      wildcardType();
      astFactory.addASTChild(currentAST,returnAST);
      break;
    }
default :
{
    throw new NoViableAltException(LT(1),getFilename());
  }
}
}
if (inputState.guessing == 0) {
typeArgument_AST=(AST)currentAST.root;
typeArgument_AST=(AST)astFactory.make((new ASTArray(2)).add(create(TYPE_ARGUMENT,"TYPE_ARGUMENT",first,LT(1))).add(typeArgument_AST));
currentAST.root=typeArgument_AST;
currentAST.child=typeArgument_AST != null && typeArgument_AST.getFirstChild() != null ? typeArgument_AST.getFirstChild() : typeArgument_AST;
currentAST.advanceChildToEnd();
}
typeArgument_AST=(AST)currentAST.root;
returnAST=typeArgument_AST;
}
