{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST interfaceField_AST=null;
  AST mods_AST=null;
  AST td_AST=null;
  AST tp_AST=null;
  AST t_AST=null;
  AST param_AST=null;
  AST rt_AST=null;
  AST tc_AST=null;
  AST v_AST=null;
  Token first=LT(1);
  modifiers();
  mods_AST=(AST)returnAST;
{
switch (LA(1)) {
case AT:
case LITERAL_class:
case LITERAL_interface:
case LITERAL_enum:
{
        typeDefinitionInternal(mods_AST);
        td_AST=(AST)returnAST;
        if (inputState.guessing == 0) {
          interfaceField_AST=(AST)currentAST.root;
          interfaceField_AST=td_AST;
          currentAST.root=interfaceField_AST;
          currentAST.child=interfaceField_AST != null && interfaceField_AST.getFirstChild() != null ? interfaceField_AST.getFirstChild() : interfaceField_AST;
          currentAST.advanceChildToEnd();
        }
        break;
      }
case IDENT:
case LT:
case LITERAL_void:
case LITERAL_boolean:
case LITERAL_byte:
case LITERAL_char:
case LITERAL_short:
case LITERAL_int:
case LITERAL_float:
case LITERAL_long:
case LITERAL_double:
{
{
switch (LA(1)) {
case LT:
{
            typeParameters();
            tp_AST=(AST)returnAST;
            break;
          }
case IDENT:
case LITERAL_void:
case LITERAL_boolean:
case LITERAL_byte:
case LITERAL_char:
case LITERAL_short:
case LITERAL_int:
case LITERAL_float:
case LITERAL_long:
case LITERAL_double:
{
          break;
        }
default :
{
        throw new NoViableAltException(LT(1),getFilename());
      }
  }
}
typeSpec(false);
t_AST=(AST)returnAST;
{
  if ((LA(1) == IDENT) && (LA(2) == LPAREN)) {
    AST tmp96_AST=null;
    tmp96_AST=astFactory.create(LT(1));
    match(IDENT);
    match(LPAREN);
    parameterDeclarationList();
    param_AST=(AST)returnAST;
    match(RPAREN);
    declaratorBrackets(t_AST);
    rt_AST=(AST)returnAST;
{
switch (LA(1)) {
case LITERAL_throws:
{
          throwsClause();
          tc_AST=(AST)returnAST;
          break;
        }
case SEMI:
{
        break;
      }
default :
{
      throw new NoViableAltException(LT(1),getFilename());
    }
}
}
AST tmp99_AST=null;
tmp99_AST=astFactory.create(LT(1));
match(SEMI);
if (inputState.guessing == 0) {
interfaceField_AST=(AST)currentAST.root;
interfaceField_AST=(AST)astFactory.make((new ASTArray(7)).add(create(METHOD_DEF,"METHOD_DEF",first,LT(1))).add(mods_AST).add(tp_AST).add((AST)astFactory.make((new ASTArray(2)).add(create(TYPE,"TYPE",first,LT(1))).add(rt_AST))).add(tmp96_AST).add(param_AST).add(tc_AST));
currentAST.root=interfaceField_AST;
currentAST.child=interfaceField_AST != null && interfaceField_AST.getFirstChild() != null ? interfaceField_AST.getFirstChild() : interfaceField_AST;
currentAST.advanceChildToEnd();
}
}
 else if ((LA(1) == IDENT) && (_tokenSet_19.member(LA(2)))) {
variableDefinitions(mods_AST,t_AST);
v_AST=(AST)returnAST;
AST tmp100_AST=null;
tmp100_AST=astFactory.create(LT(1));
match(SEMI);
if (inputState.guessing == 0) {
interfaceField_AST=(AST)currentAST.root;
interfaceField_AST=v_AST;
currentAST.root=interfaceField_AST;
currentAST.child=interfaceField_AST != null && interfaceField_AST.getFirstChild() != null ? interfaceField_AST.getFirstChild() : interfaceField_AST;
currentAST.advanceChildToEnd();
}
}
 else {
throw new NoViableAltException(LT(1),getFilename());
}
}
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
returnAST=interfaceField_AST;
}
