{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST forStatement_AST=null;
  Token f=null;
  AST f_AST=null;
  f=LT(1);
  f_AST=astFactory.create(f);
  astFactory.makeASTRoot(currentAST,f_AST);
  match(LITERAL_for);
  match(LPAREN);
{
    boolean synPredMatched201=false;
    if (((_tokenSet_34.member(LA(1))) && (_tokenSet_35.member(LA(2))))) {
      int _m201=mark();
      synPredMatched201=true;
      inputState.guessing++;
      try {
{
          forInit();
          match(SEMI);
        }
      }
 catch (      RecognitionException pe) {
        synPredMatched201=false;
      }
      rewind(_m201);
      inputState.guessing--;
    }
    if (synPredMatched201) {
      traditionalForClause();
      astFactory.addASTChild(currentAST,returnAST);
    }
 else     if ((_tokenSet_18.member(LA(1))) && (_tokenSet_19.member(LA(2)))) {
      forEachClause();
      astFactory.addASTChild(currentAST,returnAST);
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
  match(RPAREN);
  statement();
  astFactory.addASTChild(currentAST,returnAST);
  forStatement_AST=(AST)currentAST.root;
  returnAST=forStatement_AST;
}
