{
  Object obj=cachedClasses.get(type);
  if (obj == NO_CLASS) {
    throw new ClassNotFoundException(type);
  }
  if (obj != null) {
    return (Class)obj;
  }
  Class answer=null;
  NoClassDefFoundError noClassErr=null;
  ClassLoader lastLoader=getClassLoader();
  try {
    answer=lastLoader.loadClass(type);
  }
 catch (  ClassNotFoundException e) {
    Throwable cause=e.getCause();
    if (cause != null && cause instanceof CompilationFailedException) {
      throw new ClassGeneratorException("Error when compiling class: " + type + ". Reason: "+ cause,cause);
    }
  }
catch (  NoClassDefFoundError e) {
    noClassErr=e;
  }
  try {
    ClassLoader loader=Thread.currentThread().getContextClassLoader();
    if (answer == null && loader != lastLoader) {
      lastLoader=loader;
      answer=loader.loadClass(type);
    }
  }
 catch (  ClassNotFoundException e1) {
    Throwable cause=e1.getCause();
    if (cause != null && cause instanceof CompilationFailedException) {
      throw new ClassGeneratorException("Error when compiling class: " + type + ". Reason: "+ cause,cause);
    }
  }
catch (  NoClassDefFoundError e) {
    noClassErr=e;
  }
  try {
    ClassLoader loader=getClass().getClassLoader();
    if (answer == null && loader != lastLoader) {
      lastLoader=loader;
      answer=loader.loadClass(type);
    }
  }
 catch (  ClassNotFoundException e2) {
    Throwable cause=e2.getCause();
    if (cause != null && cause instanceof CompilationFailedException) {
      throw new ClassGeneratorException("Error when compiling class: " + type + ". Reason: "+ cause,cause);
    }
  }
catch (  NoClassDefFoundError e) {
    noClassErr=e;
  }
  try {
    if (answer == null) {
      answer=Class.forName(type);
    }
  }
 catch (  ClassNotFoundException e2) {
    Throwable cause=e2.getCause();
    if (cause != null && cause instanceof CompilationFailedException) {
      throw new ClassGeneratorException("Error when compiling class: " + type + ". Reason: "+ cause,cause);
    }
  }
catch (  NoClassDefFoundError e) {
    noClassErr=e;
  }
  if (answer == null) {
    cachedClasses.put(type,NO_CLASS);
    if (noClassErr != null) {
      throw new ClassGeneratorException("Error when compiling class: " + type + ". Reason: "+ noClassErr,noClassErr);
    }
    throw new ClassNotFoundException(type);
  }
 else   if (answer == GroovyClassLoader.PARSING.class) {
  }
 else {
    if (!type.equals(answer.getName())) {
      cachedClasses.put(type,NO_CLASS);
      System.out.println("Mismatch: answer.getName() = " + answer.getName() + ", type = "+ type);
      throw new ClassNotFoundException(type);
    }
    cachedClasses.put(type,answer);
  }
  return answer;
}
