{
  if (arguments == null)   return true;
  final int size=arguments.length;
  CachedClass[] paramTypes=getParameterTypes();
  final int paramMinus1=paramTypes.length - 1;
  if (size >= paramMinus1 && paramTypes.length > 0 && paramTypes[(paramMinus1)].isArray) {
    for (int i=0; i < paramMinus1; i++) {
      if (paramTypes[i].isAssignableFrom(getArgClass(arguments[i])))       continue;
      return false;
    }
    CachedClass varg=paramTypes[paramMinus1];
    Class clazz=varg.getCachedClass().getComponentType();
    if (size == paramTypes.length && (varg.isAssignableFrom(getArgClass(arguments[paramMinus1])) || MetaClassHelper.isAssignableFrom(clazz,getArgClass(arguments[paramMinus1]).getComponentType()))) {
      return true;
    }
    for (int i=paramMinus1; i < size; i++) {
      if (MetaClassHelper.isAssignableFrom(clazz,getArgClass(arguments[i])))       continue;
      return false;
    }
    return true;
  }
 else   if (paramTypes.length == size) {
    for (int i=0; i < size; i++) {
      if (paramTypes[i].isAssignableFrom(getArgClass(arguments[i])))       continue;
      return false;
    }
    return true;
  }
 else   if (paramTypes.length == 1 && size == 0) {
    return true;
  }
  return false;
}
