{
  ClassNode cn=(ClassNode)exp.getNodeMetaData(StaticTypesMarker.class);
  if (cn != null)   return cn;
  if (exp instanceof VariableExpression) {
    VariableExpression vexp=(VariableExpression)exp;
    if (vexp == VariableExpression.THIS_EXPRESSION)     return current;
    if (vexp == VariableExpression.SUPER_EXPRESSION)     return current.getSuperClass();
    final Variable variable=vexp.getAccessedVariable();
    if (variable != null && variable != vexp && variable instanceof VariableExpression) {
      return getType((Expression)variable,current);
    }
  }
 else   if (exp instanceof PropertyExpression) {
    PropertyExpression pexp=(PropertyExpression)exp;
    if (pexp.getObjectExpression().getType().isEnum()) {
      return pexp.getObjectExpression().getType();
    }
 else {
      ClassNode clazz=pexp.getObjectExpression().getType().redirect();
      String propertyName=pexp.getPropertyAsString();
      PropertyNode propertyNode=clazz.getProperty(propertyName);
      if (propertyNode == null) {
        FieldNode field=clazz.getDeclaredField(propertyName);
        if (field != null)         return field.getType();
        return ClassHelper.OBJECT_TYPE;
      }
      return propertyNode.getType();
    }
  }
  return exp.getType();
}
