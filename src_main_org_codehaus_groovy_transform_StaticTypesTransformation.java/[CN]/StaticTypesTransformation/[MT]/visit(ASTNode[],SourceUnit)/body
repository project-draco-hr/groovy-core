{
  AnnotationNode annotationInformation=(AnnotationNode)nodes[0];
  Map<String,Expression> members=annotationInformation.getMembers();
  Expression extensions=members.get("extensions");
  AnnotatedNode node=(AnnotatedNode)nodes[1];
  StaticTypeCheckingVisitor visitor=null;
  if (node instanceof ClassNode) {
    ClassNode classNode=(ClassNode)node;
    visitor=newVisitor(source,classNode);
    addTypeCheckingExtensions(visitor,extensions);
    visitor.initialize();
    visitor.visitClass(classNode);
  }
 else   if (node instanceof MethodNode) {
    MethodNode methodNode=(MethodNode)node;
    visitor=newVisitor(source,methodNode.getDeclaringClass());
    addTypeCheckingExtensions(visitor,extensions);
    visitor.setMethodsToBeVisited(Collections.singleton(methodNode));
    visitor.initialize();
    visitor.visitMethod(methodNode);
  }
 else {
    source.addError(new SyntaxException(STATIC_ERROR_PREFIX + "Unimplemented node type",node.getLineNumber(),node.getColumnNumber(),node.getLastLineNumber(),node.getLastColumnNumber()));
  }
  if (visitor != null) {
    visitor.performSecondPass();
  }
}
