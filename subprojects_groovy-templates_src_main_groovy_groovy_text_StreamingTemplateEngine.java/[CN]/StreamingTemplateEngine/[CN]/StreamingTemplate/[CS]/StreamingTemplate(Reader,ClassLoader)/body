{
  final StringBuilder target=new StringBuilder();
  List<StringSection> sections=new ArrayList<StringSection>();
  Position sourcePosition=new Position(1,1);
  Position targetPosition=new Position(1,1);
  Position lastSourcePosition=new Position(1,1);
  StringSection currentSection=new StringSection(sourcePosition);
  templateSource=new StringBuilder();
  StringBuilder lookAhead=new StringBuilder(10);
  append(target,targetPosition,SCRIPT_HEAD);
  try {
    int skipRead=-1;
    while (true) {
      lastSourcePosition.set(sourcePosition);
      int c=(skipRead != -1) ? skipRead : read(source,sourcePosition,lookAhead);
      skipRead=-1;
      if (c == '\\') {
        handleEscaping(source,sourcePosition,currentSection,lookAhead);
        continue;
      }
 else       if (c == '<') {
        c=read(source,sourcePosition,lookAhead);
        if (c == '%') {
          c=read(source,sourcePosition);
          clear(lookAhead);
          if (c == '=') {
            finishStringSection(sections,currentSection,target,lastSourcePosition,targetPosition);
            parseExpression(source,target,sourcePosition,targetPosition);
            currentSection=new StringSection(sourcePosition);
            continue;
          }
 else {
            finishStringSection(sections,currentSection,target,lastSourcePosition,targetPosition);
            parseSection(c,source,target,sourcePosition,targetPosition);
            currentSection=new StringSection(sourcePosition);
            continue;
          }
        }
 else {
          currentSection.data.append('<');
        }
      }
 else       if (c == '$') {
        c=read(source,sourcePosition);
        clear(lookAhead);
        if (c == '{') {
          finishStringSection(sections,currentSection,target,lastSourcePosition,targetPosition);
          parseDollarCurlyIdentifier(source,target,sourcePosition,targetPosition);
          currentSection=new StringSection(sourcePosition);
          continue;
        }
 else         if (Character.isJavaIdentifierStart(c)) {
          finishStringSection(sections,currentSection,target,lastSourcePosition,targetPosition);
          skipRead=parseDollarIdentifier(c,source,target,sourcePosition,targetPosition);
          currentSection=new StringSection(sourcePosition);
          continue;
        }
 else {
          currentSection.data.append('$');
        }
      }
      currentSection.data.append((char)c);
      clear(lookAhead);
    }
  }
 catch (  FinishedReadingException e) {
    if (lookAhead.length() > 0) {
      currentSection.data.append(lookAhead);
    }
  }
  finishStringSection(sections,currentSection,target,sourcePosition,targetPosition);
  append(target,targetPosition,SCRIPT_TAIL);
  scriptSource=target.toString();
  this.template=createTemplateClosure(sections,parentLoader,target);
}
