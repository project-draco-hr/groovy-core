{
  int num=digitChars[offset] - '0';
  int to=len + offset;
  if (++offset < to) {
    num=digitChars[offset] != '.' ? (num * 10) + (digitChars[offset] - '0') : num;
    if (++offset < to) {
      num=digitChars[offset] != '.' ? (num * 10) + (digitChars[offset] - '0') : num;
      if (++offset < to) {
        num=digitChars[offset] != '.' ? (num * 10) + (digitChars[offset] - '0') : num;
        if (++offset < to) {
          num=digitChars[offset] != '.' ? (num * 10) + (digitChars[offset] - '0') : num;
          if (++offset < to) {
            num=digitChars[offset] != '.' ? (num * 10) + (digitChars[offset] - '0') : num;
            if (++offset < to) {
              num=digitChars[offset] != '.' ? (num * 10) + (digitChars[offset] - '0') : num;
              if (++offset < to) {
                num=digitChars[offset] != '.' ? (num * 10) + (digitChars[offset] - '0') : num;
                if (++offset < to) {
                  num=digitChars[offset] != '.' ? (num * 10) + (digitChars[offset] - '0') : num;
                  if (++offset < to) {
                    num=digitChars[offset] != '.' ? (num * 10) + (digitChars[offset] - '0') : num;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return num;
}
