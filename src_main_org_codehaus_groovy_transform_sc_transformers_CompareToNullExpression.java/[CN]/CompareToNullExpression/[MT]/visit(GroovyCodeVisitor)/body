{
  if (visitor instanceof AsmClassGenerator) {
    AsmClassGenerator acg=(AsmClassGenerator)visitor;
    WriterController controller=acg.getController();
    MethodVisitor mv=controller.getMethodVisitor();
    objectExpression.visit(acg);
    ClassNode top=controller.getOperandStack().getTopOperand();
    if (ClassHelper.isPrimitiveType(top)) {
      controller.getOperandStack().pop();
      mv.visitInsn(ICONST_0);
      controller.getOperandStack().push(ClassHelper.boolean_TYPE);
      return;
    }
    Label zero=new Label();
    mv.visitJumpInsn(equalsNull ? IFNONNULL : IFNULL,zero);
    mv.visitInsn(ICONST_1);
    Label end=new Label();
    mv.visitJumpInsn(GOTO,end);
    mv.visitLabel(zero);
    mv.visitInsn(ICONST_0);
    mv.visitLabel(end);
    controller.getOperandStack().replace(ClassHelper.boolean_TYPE);
  }
 else {
    super.visit(visitor);
  }
}
