{
  String tagName=name.toString();
  Object answer=null;
  Object parentObject=getCurrent();
  Object parentTask=getParentTask();
  Object nested=null;
  if (parentObject != null && !(parentTask instanceof TaskContainer)) {
    nested=createNestedObject(parentObject,tagName);
  }
  Task task=null;
  if (nested == null) {
    task=createTask(tagName);
    if (task != null) {
      if (log.isDebugEnabled()) {
        log.debug("Creating an ant Task for name: " + tagName);
      }
      if (task instanceof TaskAdapter) {
        answer=((TaskAdapter)task).getProxy();
      }
 else {
        answer=task;
      }
      Object id=attributes.remove("id");
      if (id != null) {
        project.addReference((String)id,task);
      }
      task.init();
      setBeanProperties(task,attributes);
    }
  }
  if (task == null) {
    if (nested == null) {
      if (log.isDebugEnabled()) {
        log.debug("Trying to create a data type for tag: " + tagName);
      }
      nested=createDataType(tagName);
    }
 else {
      if (log.isDebugEnabled()) {
        log.debug("Created nested property tag: " + tagName);
      }
    }
    if (nested != null) {
      answer=nested;
      Object id=attributes.remove("id");
      if (id != null) {
        project.addReference((String)id,nested);
      }
      try {
        InvokerHelper.setProperty(nested,"name",tagName);
      }
 catch (      Exception e) {
      }
      setBeanProperties(nested,attributes);
      if (parentObject != null) {
        IntrospectionHelper ih=IntrospectionHelper.getHelper(parentObject.getClass());
        try {
          if (log.isDebugEnabled()) {
            log.debug("About to set the: " + tagName + " property on: "+ parentObject+ " to value: "+ nested+ " with type: "+ nested.getClass());
          }
          ih.storeElement(project,parentObject,nested,(String)tagName);
        }
 catch (        Exception e) {
          log.warn("Caught exception setting nested: " + tagName,e);
        }
        try {
          InvokerHelper.setProperty(parentObject,tagName,nested);
        }
 catch (        Exception e) {
          log.debug("Caught exception trying to set property: " + tagName + " on: "+ parentObject);
        }
      }
    }
 else {
      log.warn("Could not convert tag: " + tagName + " into an Ant task, data type or property");
    }
  }
  return answer;
}
