{
  int visibility=(controller.getClassNode() instanceof InterfaceHelperClassNode) ? MOD_PUBSS : MOD_PRIVSS;
  MethodVisitor mv=controller.getClassVisitor().visitMethod(visibility,GET_CALLSITE_METHOD,GET_CALLSITE_DESC,null,null);
  controller.setMethodVisitor(mv);
  mv.visitCode();
  mv.visitFieldInsn(GETSTATIC,controller.getInternalClassName(),"$callSiteArray","Ljava/lang/ref/SoftReference;");
  Label l0=new Label();
  mv.visitJumpInsn(IFNULL,l0);
  mv.visitFieldInsn(GETSTATIC,controller.getInternalClassName(),"$callSiteArray","Ljava/lang/ref/SoftReference;");
  mv.visitMethodInsn(INVOKEVIRTUAL,"java/lang/ref/SoftReference","get","()Ljava/lang/Object;",false);
  mv.visitTypeInsn(CHECKCAST,"org/codehaus/groovy/runtime/callsite/CallSiteArray");
  mv.visitInsn(DUP);
  mv.visitVarInsn(ASTORE,0);
  Label l1=new Label();
  mv.visitJumpInsn(IFNONNULL,l1);
  mv.visitLabel(l0);
  mv.visitMethodInsn(INVOKESTATIC,controller.getInternalClassName(),"$createCallSiteArray","()Lorg/codehaus/groovy/runtime/callsite/CallSiteArray;",false);
  mv.visitVarInsn(ASTORE,0);
  mv.visitTypeInsn(NEW,"java/lang/ref/SoftReference");
  mv.visitInsn(DUP);
  mv.visitVarInsn(ALOAD,0);
  mv.visitMethodInsn(INVOKESPECIAL,"java/lang/ref/SoftReference","<init>","(Ljava/lang/Object;)V",false);
  mv.visitFieldInsn(PUTSTATIC,controller.getInternalClassName(),"$callSiteArray","Ljava/lang/ref/SoftReference;");
  mv.visitLabel(l1);
  mv.visitVarInsn(ALOAD,0);
  mv.visitFieldInsn(GETFIELD,"org/codehaus/groovy/runtime/callsite/CallSiteArray","array","[Lorg/codehaus/groovy/runtime/callsite/CallSite;");
  mv.visitInsn(ARETURN);
  mv.visitMaxs(0,0);
  mv.visitEnd();
}
