{
  final Object goalValue=DefaultTypeTransformation.castToType(newValue,field.getType());
  try {
    AccessController.doPrivileged(new PrivilegedExceptionAction(){
      public Object run() throws IllegalAccessException, GroovyRuntimeException {
        field.setAccessible(true);
        field.set(object,goalValue);
        return null;
      }
    }
);
  }
 catch (  PrivilegedActionException ex) {
    throw new GroovyRuntimeException("Cannot set the property '" + name + "'.",ex.getException());
  }
}
