{
  final Object goalValue=DefaultTypeTransformation.castToType(newValue,field.getType());
  if (!alreadySetAccessible) {
    AccessController.doPrivileged(new PrivilegedAction(){
      public Object run(){
        field.setAccessible(true);
        return null;
      }
    }
);
    alreadySetAccessible=true;
  }
  try {
    field.set(object,goalValue);
  }
 catch (  IllegalAccessException ex) {
    throw new GroovyRuntimeException("Cannot set the property '" + name + "'.",ex);
  }
}
