{
  String text=null;
  int numeric=0;
  numeric=WarningMessage.LIKELY_ERRORS;
  try {
    text=configuration.getProperty("groovy.warnings","likely errors");
    numeric=Integer.parseInt(text);
  }
 catch (  NumberFormatException e) {
    if (text.equals("none")) {
      numeric=WarningMessage.NONE;
    }
 else     if (text.startsWith("likely")) {
      numeric=WarningMessage.LIKELY_ERRORS;
    }
 else     if (text.startsWith("possible")) {
      numeric=WarningMessage.POSSIBLE_ERRORS;
    }
 else     if (text.startsWith("paranoia")) {
      numeric=WarningMessage.PARANOIA;
    }
 else {
      throw new ConfigurationException("unrecogized groovy.warnings: " + text);
    }
  }
  setWarningLevel(numeric);
  text=configuration.getProperty("groovy.source.encoding",System.getProperty("file.encoding"));
  setSourceEncoding(text);
  setOutput(null);
  text=configuration.getProperty("groovy.target.directory",System.getProperty("user.dir"));
  setTargetDirectory(text);
  text=configuration.getProperty("groovy.classpath",System.getProperty("java.class.path"));
  setClasspath(text);
  text=configuration.getProperty("groovy.output.verbose","false");
  if (text.equals("true")) {
    setVerbose(true);
  }
 else {
    setVerbose(false);
  }
  text=configuration.getProperty("groovy.output.debug","false");
  if (text.equals("true")) {
    setDebug(true);
  }
 else {
    setDebug(false);
  }
  numeric=10;
  try {
    text=configuration.getProperty("groovy.errors.tolerance","10");
    numeric=Integer.parseInt(text);
  }
 catch (  NumberFormatException e) {
    throw new ConfigurationException(e);
  }
  setTolerance(numeric);
  text=configuration.getProperty("groovy.script.base",null);
  setScriptBaseClass(text);
}
