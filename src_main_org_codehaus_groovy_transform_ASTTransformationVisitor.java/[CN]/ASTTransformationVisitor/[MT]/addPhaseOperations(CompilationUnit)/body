{
  final ASTTransformationsContext context=compilationUnit.getASTTransformationsContext();
  addGlobalTransforms(context);
  compilationUnit.addPhaseOperation(new CompilationUnit.PrimaryClassNodeOperation(){
    public void call(    SourceUnit source,    GeneratorContext context,    ClassNode classNode) throws CompilationFailedException {
      ASTTransformationCollectorCodeVisitor collector=new ASTTransformationCollectorCodeVisitor(source,compilationUnit.getTransformLoader());
      collector.visitClass(classNode);
    }
  }
,Phases.SEMANTIC_ANALYSIS);
  for (  CompilePhase phase : CompilePhase.values()) {
    final ASTTransformationVisitor visitor=new ASTTransformationVisitor(phase,context);
switch (phase) {
case INITIALIZATION:
case PARSING:
case CONVERSION:
      break;
default :
    compilationUnit.addPhaseOperation(new CompilationUnit.PrimaryClassNodeOperation(){
      public void call(      SourceUnit source,      GeneratorContext context,      ClassNode classNode) throws CompilationFailedException {
        visitor.source=source;
        visitor.visitClass(classNode);
      }
    }
,phase.getPhaseNumber());
  break;
}
}
}
