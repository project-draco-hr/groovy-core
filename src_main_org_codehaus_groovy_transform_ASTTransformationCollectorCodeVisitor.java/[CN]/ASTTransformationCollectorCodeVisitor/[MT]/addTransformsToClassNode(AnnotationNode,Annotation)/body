{
  List<String> transformClassNames=getTransformClassNames(annotation,transformClassAnnotation);
  if (transformClassNames.isEmpty()) {
    source.getErrorCollector().addError(new SimpleMessage("@GroovyASTTransformationClass in " + annotation.getClassNode().getName() + " does not specify any transform class names/classes",source));
  }
  for (  String transformClass : transformClassNames) {
    try {
      Class klass=transformLoader.loadClass(transformClass,false,true,false);
      verifyAndAddTransform(annotation,klass);
    }
 catch (    ClassNotFoundException e) {
      source.getErrorCollector().addErrorAndContinue(new SimpleMessage("Could not find class for Transformation Processor " + transformClass + " declared by "+ annotation.getClassNode().getName(),source));
    }
  }
}
