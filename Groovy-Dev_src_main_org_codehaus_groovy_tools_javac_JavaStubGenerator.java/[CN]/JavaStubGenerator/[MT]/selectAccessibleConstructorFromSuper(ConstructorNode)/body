{
  ClassNode type=node.getDeclaringClass();
  ClassNode superType=type.getSuperClass();
  boolean hadPrivateConstructor=false;
  for (Iterator iter=superType.getDeclaredConstructors().iterator(); iter.hasNext(); ) {
    ConstructorNode c=(ConstructorNode)iter.next();
    if (c.isPublic() || c.isProtected()) {
      return c.getParameters();
    }
  }
  if (superType.isPrimaryClassNode()) {
    return Parameter.EMPTY_ARRAY;
  }
  return null;
}
