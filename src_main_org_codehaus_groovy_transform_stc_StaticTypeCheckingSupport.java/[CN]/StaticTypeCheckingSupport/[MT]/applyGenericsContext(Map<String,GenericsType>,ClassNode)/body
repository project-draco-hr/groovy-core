{
  if (bound == null)   return null;
  if (bound.isArray()) {
    return applyGenericsContext(spec,bound.getComponentType()).makeArray();
  }
  if (!bound.isUsingGenerics())   return bound;
  ClassNode newBound=bound.getPlainNodeReference();
  newBound.setGenericsTypes(applyGenericsContext(spec,bound.getGenericsTypes()));
  if (bound.isGenericsPlaceHolder()) {
    GenericsType[] gt=newBound.getGenericsTypes();
    boolean hasBounds=gt[0].getLowerBound() != null || gt[0].getUpperBounds() != null;
    if (hasBounds || !gt[0].isPlaceholder())     return getCombinedBoundType(gt[0]);
    String placeHolderName=newBound.getGenericsTypes()[0].getName();
    if (!placeHolderName.equals(newBound.getUnresolvedName())) {
      ClassNode clean=ClassHelper.make(placeHolderName);
      clean.setGenericsTypes(newBound.getGenericsTypes());
      clean.setRedirect(newBound);
      newBound=clean;
    }
    newBound.setGenericsPlaceHolder(true);
  }
  return newBound;
}
