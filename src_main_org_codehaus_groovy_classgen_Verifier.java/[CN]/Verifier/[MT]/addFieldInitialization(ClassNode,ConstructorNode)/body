{
  ConstructorCallExpression first=getFirstIfSpecialConstructorCall(constructorNode);
  if (first != null && first.isThisCall())   return;
  List statements=new ArrayList();
  List staticStatements=new ArrayList();
  for (Iterator iter=node.getFields().iterator(); iter.hasNext(); ) {
    addFieldInitialization(statements,staticStatements,(FieldNode)iter.next());
  }
  if (!statements.isEmpty()) {
    Statement code=constructorNode.getCode();
    BlockStatement block=new BlockStatement();
    List otherStatements=block.getStatements();
    if (code instanceof BlockStatement) {
      block=(BlockStatement)code;
      otherStatements=block.getStatements();
    }
 else     if (code != null) {
      otherStatements.add(code);
    }
    if (!otherStatements.isEmpty()) {
      if (first != null) {
        otherStatements.remove(0);
        statements.add(0,first);
      }
      statements.addAll(otherStatements);
    }
    constructorNode.setCode(new BlockStatement(statements,block.getVariableScope()));
  }
  if (!staticStatements.isEmpty()) {
    node.addStaticInitializerStatements(staticStatements,true);
  }
}
