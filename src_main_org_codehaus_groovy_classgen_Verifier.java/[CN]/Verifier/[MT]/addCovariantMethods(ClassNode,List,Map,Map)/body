{
  ClassNode sn=classNode.getUnresolvedSuperClass(false);
  if (sn != null) {
    Map genericsSpec=createGenericsSpec(sn,oldGenericsSpec);
    for (Iterator it=declaredMethods.iterator(); it.hasNext(); ) {
      MethodNode method=(MethodNode)it.next();
      if (method.isStatic())       continue;
      storeMissingCovariantMethods(sn,method,methodsToAdd,genericsSpec);
    }
    addCovariantMethods(sn.redirect(),declaredMethods,methodsToAdd,genericsSpec);
  }
  ClassNode[] interfaces=classNode.getInterfaces();
  for (int i=0; i < interfaces.length; i++) {
    Map genericsSpec=createGenericsSpec(interfaces[i],oldGenericsSpec);
    for (Iterator it=declaredMethods.iterator(); it.hasNext(); ) {
      MethodNode method=(MethodNode)it.next();
      if (method.isStatic())       continue;
      storeMissingCovariantMethods(interfaces[i],method,methodsToAdd,genericsSpec);
    }
    addCovariantMethods(interfaces[i],declaredMethods,methodsToAdd,genericsSpec);
  }
}
