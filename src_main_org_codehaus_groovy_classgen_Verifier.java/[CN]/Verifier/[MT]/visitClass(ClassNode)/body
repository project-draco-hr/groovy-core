{
  node.addInterface(GroovyObject.class.getName());
  FieldNode metaClassField=node.addField("metaClass",ACC_PUBLIC | ACC_FINAL,MetaClass.class.getName(),new StaticMethodCallExpression(InvokerHelper.class.getName(),"getMetaClass",new VariableExpression("this")));
  boolean addDelegateObject=node instanceof InnerClassNode && node.getSuperClass().equals("groovy/lang/Closure");
  if (addDelegateObject) {
  }
 else {
    node.addMethod("invokeMethod",ACC_PUBLIC,Object.class.getName(),new Parameter[]{new Parameter(String.class.getName(),"name"),new Parameter(Object.class.getName(),"arguments")},new ReturnStatement(new MethodCallExpression(new FieldExpression(metaClassField),"invokeMethod",new ArgumentListExpression(new Expression[]{new VariableExpression("this"),new VariableExpression("name"),new VariableExpression("arguments")}))));
  }
  if (node.getConstructors().isEmpty()) {
    node.addConstructor(new ConstructorNode(ACC_PUBLIC,null));
  }
  node.addMethod("getMetaClass",ACC_PUBLIC,MetaClass.class.getName(),Parameter.EMPTY_ARRAY,new ReturnStatement(new FieldExpression(metaClassField)));
  addFieldInitialization(node);
}
