{
  this.classNode=node;
  if ((classNode.getModifiers() & Opcodes.ACC_INTERFACE) > 0) {
    ConstructorNode dummy=new ConstructorNode(0,null);
    addInitialization(node,dummy);
    node.visitContents(this);
    return;
  }
  addDefaultParameterMethods(node);
  addDefaultParameterConstructors(node);
  if (!node.isDerivedFromGroovyObject()) {
    node.addInterface(ClassHelper.make(GroovyObject.class));
    StaticMethodCallExpression initMetaClassCall=new StaticMethodCallExpression(ClassHelper.make(ScriptBytecodeAdapter.class),"initMetaClass",VariableExpression.THIS_EXPRESSION);
    PropertyNode metaClassProperty=node.addProperty("metaClass",ACC_PUBLIC,ClassHelper.make(MetaClass.class),initMetaClassCall,null,null);
    metaClassProperty.setSynthetic(true);
    FieldNode metaClassField=metaClassProperty.getField();
    metaClassField.setModifiers(metaClassField.getModifiers() | ACC_TRANSIENT);
    FieldExpression metaClassVar=new FieldExpression(metaClassField);
    IfStatement initMetaClassField=new IfStatement(new BooleanExpression(new BinaryExpression(metaClassVar,Token.newSymbol(Types.COMPARE_EQUAL,-1,-1),ConstantExpression.NULL)),new ExpressionStatement(new BinaryExpression(metaClassVar,Token.newSymbol(Types.EQUAL,-1,-1),initMetaClassCall)),EmptyStatement.INSTANCE);
    node.addSyntheticMethod("getMetaClass",ACC_PUBLIC,ClassHelper.make(MetaClass.class),Parameter.EMPTY_ARRAY,ClassNode.EMPTY_ARRAY,new BlockStatement(new Statement[]{initMetaClassField,new ReturnStatement(metaClassVar)},new VariableScope()));
    ClassNode superClass=node.getSuperClass();
    boolean addDelegateObject=(node instanceof InnerClassNode && superClass.equals(ClassHelper.CLOSURE_TYPE)) || superClass.equals(ClassHelper.GSTRING_TYPE);
    if (!addDelegateObject) {
      VariableExpression vMethods=new VariableExpression("method");
      VariableExpression vArguments=new VariableExpression("arguments");
      VariableScope blockScope=new VariableScope();
      blockScope.getReferencedLocalVariables().put("method",vMethods);
      blockScope.getReferencedLocalVariables().put("arguments",vArguments);
      node.addSyntheticMethod("invokeMethod",ACC_PUBLIC,ClassHelper.OBJECT_TYPE,new Parameter[]{new Parameter(ClassHelper.STRING_TYPE,"method"),new Parameter(ClassHelper.OBJECT_TYPE,"arguments")},ClassNode.EMPTY_ARRAY,new BlockStatement(new Statement[]{initMetaClassField,new ReturnStatement(new MethodCallExpression(metaClassVar,"invokeMethod",new ArgumentListExpression(new Expression[]{VariableExpression.THIS_EXPRESSION,vMethods,vArguments})))},blockScope));
      if (!node.isScript()) {
        node.addSyntheticMethod("getProperty",ACC_PUBLIC,ClassHelper.OBJECT_TYPE,new Parameter[]{new Parameter(ClassHelper.STRING_TYPE,"property")},ClassNode.EMPTY_ARRAY,new BlockStatement(new Statement[]{initMetaClassField,new ReturnStatement(new MethodCallExpression(metaClassVar,"getProperty",new ArgumentListExpression(new Expression[]{VariableExpression.THIS_EXPRESSION,new VariableExpression("property")})))},new VariableScope()));
        VariableExpression vProp=new VariableExpression("property");
        VariableExpression vValue=new VariableExpression("value");
        blockScope=new VariableScope();
        blockScope.getReferencedLocalVariables().put("property",vProp);
        blockScope.getReferencedLocalVariables().put("value",vValue);
        node.addSyntheticMethod("setProperty",ACC_PUBLIC,ClassHelper.VOID_TYPE,new Parameter[]{new Parameter(ClassHelper.STRING_TYPE,"property"),new Parameter(ClassHelper.OBJECT_TYPE,"value")},ClassNode.EMPTY_ARRAY,new BlockStatement(new Statement[]{initMetaClassField,new ExpressionStatement(new MethodCallExpression(metaClassVar,"setProperty",new ArgumentListExpression(new Expression[]{VariableExpression.THIS_EXPRESSION,vProp,vValue})))},blockScope));
      }
    }
  }
  if (node.getDeclaredConstructors().isEmpty()) {
    ConstructorNode constructor=new ConstructorNode(ACC_PUBLIC,null);
    constructor.setSynthetic(true);
    node.addConstructor(constructor);
  }
  if (!(node instanceof InnerClassNode)) {
    FieldNode timeTagField=new FieldNode(Verifier.__TIMESTAMP,Modifier.PUBLIC | Modifier.STATIC,ClassHelper.Long_TYPE,node,new ConstantExpression(new Long(System.currentTimeMillis())));
    timeTagField.setSynthetic(true);
    node.addField(timeTagField);
  }
  addInitialization(node);
  checkReturnInObjectInitializer(node.getObjectInitializerStatements());
  node.getObjectInitializerStatements().clear();
  node.visitContents(this);
}
