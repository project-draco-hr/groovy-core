{
  List methods=new ArrayList(node.getMethods());
  addDefaultParameters(methods,new DefaultArgsAction(){
    public void call(    ArgumentListExpression arguments,    Parameter[] newParams,    MethodNode method){
      MethodCallExpression expression=new MethodCallExpression(VariableExpression.THIS_EXPRESSION,method.getName(),arguments);
      expression.setImplicitThis(true);
      Statement code=null;
      if (method.isVoidMethod()) {
        code=new ExpressionStatement(expression);
      }
 else {
        code=new ReturnStatement(expression);
      }
      MethodNode newMethod=new MethodNode(method.getName(),method.getModifiers(),method.getReturnType(),newParams,method.getExceptions(),code);
      MethodNode oldMethod=node.getDeclaredMethod(method.getName(),newParams);
      if (oldMethod != null) {
        throw new RuntimeParserException("The method with default parameters \"" + method.getTypeDescriptor() + "\" defines a method \""+ newMethod.getTypeDescriptor()+ "\" that is already defined.",method);
      }
      addPropertyMethod(newMethod);
      newMethod.setGenericsTypes(method.getGenericsTypes());
    }
  }
);
}
