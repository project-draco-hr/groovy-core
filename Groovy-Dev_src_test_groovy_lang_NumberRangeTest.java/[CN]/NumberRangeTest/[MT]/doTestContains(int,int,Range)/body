{
  assertTrue("missing 'from' value",range.contains(createValue(from)));
  assertTrue("missing 'to' value",range.contains(createValue(to)));
  assertTrue("missing mid point",range.contains(createValue((from + to) / 2)));
  assertFalse("contains out of range value",range.contains(createValue(from - 1)));
  assertFalse("contains out of range value",range.contains(createValue(to + 1)));
  assertTrue("missing same range",range.containsAll(createRange(from,to)));
  assertTrue("missing same range",range.containsAll(createRange(to,from)));
  assertTrue("missing strict subset",range.containsAll(createRange(from + 1,to - 1)));
  assertTrue("missing subset",range.containsAll(createRange(from,to - 1)));
  assertTrue("missing subset",range.containsAll(createRange(from + 1,to)));
  assertFalse("contains non-subset",range.containsAll(createRange(from - 1,to)));
  assertFalse("contains non-subset",range.containsAll(createRange(from,to + 1)));
  assertFalse("contains non-subset",range.containsAll(createRange(from - 2,from - 1)));
  assertFalse("range contains sub-range",range.contains(createRange(from + 1,to - 1)));
  final List list=new ArrayList();
  list.add(createValue(from));
  list.add(createValue(to));
  assertTrue("missing strict subset",range.containsAll(list));
  assertFalse("contains Float",range.contains(new Float((to + from) / 2.0 + 0.3)));
}
