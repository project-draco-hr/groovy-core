{
  char[] _buffer=buffer;
  int _location=this.location;
  int ensureThisMuch=charArray.length * 2;
  int sizeNeeded=(ensureThisMuch) + _location;
  if (sizeNeeded > capacity) {
    int growBy=(_buffer.length * 2) < sizeNeeded ? sizeNeeded : (_buffer.length * 2);
    _buffer=Chr.grow(buffer,growBy);
    capacity=_buffer.length;
  }
  _buffer[_location]='"';
  _location++;
  int index=0;
  while (true) {
    char c=charArray[index];
    if (isJSONControl(c)) {
switch (c) {
case '\"':
        _buffer[_location]='\\';
      _location++;
    _buffer[_location]='"';
  _location++;
break;
case '\\':
_buffer[_location]='\\';
_location++;
_buffer[_location]='\\';
_location++;
break;
case '\b':
_buffer[_location]='\\';
_location++;
_buffer[_location]='b';
_location++;
break;
case '\f':
_buffer[_location]='\\';
_location++;
_buffer[_location]='f';
_location++;
break;
case '\n':
_buffer[_location]='\\';
_location++;
_buffer[_location]='n';
_location++;
break;
case '\r':
_buffer[_location]='\\';
_location++;
_buffer[_location]='r';
_location++;
break;
case '\t':
_buffer[_location]='\\';
_location++;
_buffer[_location]='t';
_location++;
break;
}
}
 else {
_buffer[_location]=c;
_location++;
}
if (++index >= charArray.length) break;
}
_buffer[_location]='"';
_location++;
buffer=_buffer;
location=_location;
return this;
}
