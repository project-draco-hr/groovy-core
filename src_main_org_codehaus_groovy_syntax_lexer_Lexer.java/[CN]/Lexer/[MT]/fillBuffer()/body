{
  this.cur=0;
  do {
    if (this.eosRead) {
      this.buf[this.charsInBuffer]=CharStream.EOS;
    }
 else {
      char c=this.escapeLookahead ? this.escapeLookaheadChar : charStream.consume();
      this.escapeLookahead=false;
      this.charWidth[this.charsInBuffer]=1;
      this.isEol[this.charsInBuffer]=false;
      if (c == CharStream.EOS)       this.eosRead=true;
      if (c == '\\') {
        c=charStream.consume();
        if (c == '\n' || c == '\r') {
          if (c == '\r') {
            c=charStream.consume();
            if (c == '\n')             c=charStream.consume();
          }
 else {
            c=charStream.consume();
          }
          this.isEol[this.charsInBuffer]=true;
        }
 else         if (c == 'u') {
          do {
            this.charWidth[this.charsInBuffer]++;
            c=charStream.consume();
          }
 while (c == 'u');
          try {
            c=(char)Integer.parseInt(new String(new char[]{c,charStream.consume(),charStream.consume(),charStream.consume()}),16);
            this.charWidth[this.charsInBuffer]+=4;
          }
 catch (          NumberFormatException e) {
            throw new UnexpectedCharacterException(getStartLine(),getStartColumn() + 1,c,new char[]{});
          }
        }
 else {
          this.escapeLookahead=true;
          this.escapeLookaheadChar=c;
          c='\\';
        }
      }
      this.buf[this.charsInBuffer]=c;
    }
  }
 while (++this.charsInBuffer != this.buf.length);
}
