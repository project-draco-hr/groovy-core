{
  if (a == null || b == null)   return OBJECT_TYPE;
  if (a == b || a.equals(b))   return a;
  if (OBJECT_TYPE.equals(a) || OBJECT_TYPE.equals(b))   return OBJECT_TYPE;
  if (isPrimitiveType(a) && !isPrimitiveType(b)) {
    if (isNumberType(a) && isNumberType(b)) {
      return firstCommonSuperType(ClassHelper.getWrapper(a),b);
    }
 else {
      return OBJECT_TYPE;
    }
  }
 else   if (isPrimitiveType(b) && !isPrimitiveType(a)) {
    if (isNumberType(b) && isNumberType(a)) {
      return firstCommonSuperType(ClassHelper.getWrapper(b),a);
    }
 else {
      return OBJECT_TYPE;
    }
  }
 else   if (isPrimitiveType(a) && isPrimitiveType(b)) {
    return firstCommonSuperType(ClassHelper.getWrapper(a),ClassHelper.getWrapper(b));
  }
  ClassNode superA=a.getSuperClass();
  ClassNode superB=b.getSuperClass();
  if (a == superB || a.equals(superB))   return superB;
  if (b == superA || b.equals(superA))   return superA;
  return firstCommonSuperType(superA,superB);
}
