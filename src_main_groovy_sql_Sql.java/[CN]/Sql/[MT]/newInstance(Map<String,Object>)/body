{
  if (!args.containsKey("url"))   throw new IllegalArgumentException("Argument 'url' is required");
  if (args.get("url") == null)   throw new IllegalArgumentException("Argument 'url' must not be null");
  if (args.containsKey("driverClassName") && args.containsKey("driver"))   throw new IllegalArgumentException("Only one of 'driverClassName' and 'driver' should be provided");
  Map<String,Object> sqlArgs=new HashMap<String,Object>(args);
  Object driverClassName=sqlArgs.remove("driverClassName");
  if (driverClassName == null)   driverClassName=sqlArgs.remove("driver");
  if (driverClassName != null)   loadDriver(driverClassName.toString());
  Properties props=(Properties)sqlArgs.remove("properties");
  if (props != null && sqlArgs.containsKey("user"))   throw new IllegalArgumentException("Only one of 'properties' and 'user' should be supplied");
  if (props != null && sqlArgs.containsKey("password"))   throw new IllegalArgumentException("Only one of 'properties' and 'password' should be supplied");
  if (sqlArgs.containsKey("user") ^ sqlArgs.containsKey("password"))   throw new IllegalArgumentException("Found one but not both of 'user' and 'password'");
  Object url=sqlArgs.remove("url");
  Connection connection;
  if (props != null)   connection=DriverManager.getConnection(url.toString(),new Properties(props));
 else   if (sqlArgs.containsKey("user")) {
    Object user=sqlArgs.remove("user");
    Object password=sqlArgs.remove("password");
    connection=DriverManager.getConnection(url.toString(),(user == null ? null : user.toString()),(password == null ? null : password.toString()));
  }
 else   connection=DriverManager.getConnection(url.toString());
  Sql result=(Sql)InvokerHelper.invokeConstructorOf(Sql.class,sqlArgs);
  result.setConnection(connection);
  return result;
}
