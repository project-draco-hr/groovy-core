{
  final HttpServletRequest httpRequest=(HttpServletRequest)request;
  final HttpServletResponse httpResponse=(HttpServletResponse)response;
  int contextLength=httpRequest.getContextPath().length();
  final String scriptFilename=httpRequest.getRequestURI().substring(contextLength).substring(1);
  final Binding binding=new Binding();
  binding.setVariable("request",httpRequest);
  binding.setVariable("response",httpResponse);
  binding.setVariable("application",sc);
  binding.setVariable("session",httpRequest.getSession(true));
  binding.setVariable("out",httpResponse.getWriter());
  for (Enumeration paramEnum=request.getParameterNames(); paramEnum.hasMoreElements(); ) {
    String key=(String)paramEnum.nextElement();
    if (!binding.getVariables().containsKey(key)) {
      String[] values=request.getParameterValues(key);
      if (values.length == 1) {
        binding.setVariable(key,values[0]);
      }
 else {
        binding.setVariable(key,values);
      }
    }
  }
  response.setContentType("text/html");
  try {
    Closure closure=new Closure(gse){
      public Object call(){
        try {
          return ((GroovyScriptEngine)getDelegate()).run(scriptFilename,binding);
        }
 catch (        ResourceException e) {
          throw new RuntimeException(e);
        }
catch (        ScriptException e) {
          throw new RuntimeException(e);
        }
      }
    }
;
    GroovyCategorySupport.use(ServletCategory.class,closure);
  }
 catch (  RuntimeException re) {
    Throwable e=re.getCause();
    if (e instanceof ResourceException) {
      httpResponse.sendError(404);
    }
 else {
      if (e != null) {
        sc.log("An error occurred processing the request",e);
      }
 else {
        sc.log("An error occurred processing the request",re);
      }
      httpResponse.sendError(500);
    }
  }
}
