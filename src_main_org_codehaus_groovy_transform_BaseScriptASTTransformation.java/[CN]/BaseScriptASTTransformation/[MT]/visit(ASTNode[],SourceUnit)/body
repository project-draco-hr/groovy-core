{
  sourceUnit=source;
  if (nodes.length != 2 || !(nodes[0] instanceof AnnotationNode) || !(nodes[1] instanceof AnnotatedNode)) {
    throw new GroovyBugError("Internal error: expecting [AnnotationNode, AnnotatedNode] but got: " + Arrays.asList(nodes));
  }
  AnnotatedNode parent=(AnnotatedNode)nodes[1];
  AnnotationNode node=(AnnotationNode)nodes[0];
  if (!MY_TYPE.equals(node.getClassNode()))   return;
  if (parent instanceof DeclarationExpression) {
    changeBaseScriptTypeFromDeclaration((DeclarationExpression)parent,node);
  }
 else   if (parent instanceof ImportNode || parent instanceof PackageNode) {
    changeBaseScriptTypeFromPackageOrImport(source,parent,node);
  }
}
