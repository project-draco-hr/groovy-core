{
  if (!cNode.isScriptBody()) {
    addError("Annotation " + MY_TYPE_NAME + " can only be used within a Script.",parent);
    return;
  }
  if (!baseScriptType.isScript()) {
    addError("Declared type " + baseScriptType + " does not extend groovy.lang.Script class!",parent);
    return;
  }
  cNode.setSuperClass(baseScriptType);
  MethodNode runScriptMethod=ClassHelper.findSAM(baseScriptType);
  if (isSuitableAbstractMethod(runScriptMethod)) {
    MethodNode defaultMethod=cNode.getDeclaredMethod("run",Parameter.EMPTY_ARRAY);
    cNode.removeMethod(defaultMethod);
    MethodNode methodNode=new MethodNode(runScriptMethod.getName(),runScriptMethod.getModifiers() & ~ACC_ABSTRACT,runScriptMethod.getReturnType(),runScriptMethod.getParameters(),runScriptMethod.getExceptions(),defaultMethod.getCode());
    methodNode.copyNodeMetaData(defaultMethod);
    cNode.addMethod(methodNode);
  }
}
