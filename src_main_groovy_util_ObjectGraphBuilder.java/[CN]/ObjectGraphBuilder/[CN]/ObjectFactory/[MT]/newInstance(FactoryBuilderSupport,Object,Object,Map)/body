{
  ObjectGraphBuilder ogbuilder=(ObjectGraphBuilder)builder;
  String classname=ogbuilder.classNameResolver.resolveClassname((String)name);
  Class klass=ogbuilder.resolvedClasses.get(classname);
  if (klass == null) {
    klass=loadClass(ogbuilder.classLoader,classname);
    if (klass == null) {
      klass=loadClass(ogbuilder.getClass().getClassLoader(),classname);
    }
    if (klass == null) {
      try {
        klass=Class.forName(classname);
      }
 catch (      ClassNotFoundException e) {
      }
    }
    if (klass == null) {
      klass=loadClass(Thread.currentThread().getContextClassLoader(),classname);
    }
    if (klass == null) {
      throw new RuntimeException(new ClassNotFoundException(classname));
    }
    ogbuilder.resolvedClasses.put(classname,klass);
  }
  Map context=ogbuilder.getContext();
  context.put(ObjectGraphBuilder.NODE_NAME,name);
  context.put(ObjectGraphBuilder.NODE_CLASS,klass);
  if (value != null && klass.isAssignableFrom(value.getClass())) {
    return value;
  }
  return ogbuilder.newInstanceResolver.newInstance(klass,properties);
}
