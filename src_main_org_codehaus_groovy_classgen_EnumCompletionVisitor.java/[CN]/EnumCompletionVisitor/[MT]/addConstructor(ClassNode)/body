{
  List<ConstructorNode> ctors=new ArrayList<ConstructorNode>(enumClass.getDeclaredConstructors());
  boolean isAic=isAnonymousInnerClass(enumClass);
  if (ctors.size() == 0) {
    if (isAic) {
      ClassNode sn=enumClass.getSuperClass();
      List<ConstructorNode> sctors=new ArrayList<ConstructorNode>(sn.getDeclaredConstructors());
      if (sctors.size() == 0) {
        ctors.add(defaultConstructor(enumClass));
      }
 else {
        for (        ConstructorNode constructorNode : sctors) {
          ConstructorNode init=new ConstructorNode(Opcodes.ACC_PUBLIC,constructorNode.getParameters(),ClassNode.EMPTY_ARRAY,new BlockStatement());
          enumClass.addConstructor(init);
          ctors.add(init);
        }
      }
    }
 else {
      ctors.add(defaultConstructor(enumClass));
    }
  }
  for (  ConstructorNode ctor : ctors) {
    transformConstructor(ctor,isAic);
  }
}
