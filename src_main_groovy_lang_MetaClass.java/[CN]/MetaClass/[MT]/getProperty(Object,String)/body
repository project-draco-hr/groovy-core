{
  MetaMethod metaMethod=null;
  PropertyDescriptor descriptor=(PropertyDescriptor)propertyDescriptors.get(property);
  if (descriptor != null) {
    Method method=descriptor.getReadMethod();
    if (method == null) {
      throw new GroovyRuntimeException("Cannot read property: " + property);
    }
    metaMethod=findMethod(method);
    if (metaMethod == null) {
      metaMethod=findGetter(object,"get" + capitalize(property));
    }
  }
  if (metaMethod != null) {
    return doMethodInvoke(object,metaMethod,EMPTY_ARRAY);
  }
  if (genericGetMethod != null) {
    Object[] arguments={property};
    Object answer=doMethodInvoke(object,genericGetMethod,arguments);
    if (answer != null) {
      return answer;
    }
  }
  List methods=getMethods(property);
  if (!methods.isEmpty()) {
    return new MethodClosure(object,property);
  }
  Exception lastException=null;
  try {
    MetaMethod method=findGetter(object,"get" + capitalize(property));
    if (method != null) {
      return doMethodInvoke(object,method,EMPTY_ARRAY);
    }
  }
 catch (  GroovyRuntimeException e) {
    lastException=e;
  }
  if (genericGetMethod != null) {
    return null;
  }
 else {
    if (object instanceof Class) {
      return getStaticProperty((Class)object,property);
    }
    if (object instanceof Collection) {
      return DefaultGroovyMethods.getAt((Collection)object,property);
    }
    if (object instanceof Object[]) {
      return DefaultGroovyMethods.getAt(Arrays.asList((Object[])object),property);
    }
    if (object instanceof Object) {
      try {
        Field field=object.getClass().getDeclaredField(property);
        return field.get(object);
      }
 catch (      Exception e1) {
      }
    }
    MetaMethod addListenerMethod=(MetaMethod)listeners.get(property);
    if (addListenerMethod != null) {
      return null;
    }
    if (lastException == null) {
      throw new MissingPropertyException(property,theClass);
    }
 else {
      throw new MissingPropertyException(property,theClass,lastException);
    }
  }
}
