{
  Class[] wrappedArguments=new Class[classes.length];
  for (int i=0; i < wrappedArguments.length; i++) {
    Class c=classes[i];
    if (c == null)     continue;
    if (c.isPrimitive()) {
      if (c == Integer.TYPE) {
        c=Integer.class;
      }
 else       if (c == Byte.TYPE) {
        c=Byte.class;
      }
 else       if (c == Long.TYPE) {
        c=Long.class;
      }
 else       if (c == Double.TYPE) {
        c=Double.class;
      }
 else       if (c == Float.TYPE) {
        c=Float.class;
      }
    }
 else     if (isSuperclass(c,GString.class)) {
      c=String.class;
    }
    wrappedArguments[i]=c;
  }
  return wrappedArguments;
}
