{
  try {
    final Class clazz=theClass;
    try {
      Field field=(Field)AccessController.doPrivileged(new PrivilegedExceptionAction(){
        public Object run() throws NoSuchFieldException {
          return clazz.getDeclaredField(attribute);
        }
      }
);
      field.setAccessible(true);
      return field.get(object);
    }
 catch (    PrivilegedActionException pae) {
      if (pae.getException() instanceof NoSuchFieldException) {
        throw (NoSuchFieldException)pae.getException();
      }
 else {
        throw new RuntimeException(pae.getException());
      }
    }
  }
 catch (  NoSuchFieldException e) {
    throw new MissingFieldException(attribute,theClass);
  }
catch (  IllegalAccessException e) {
    throw new MissingFieldException(attribute,theClass,e);
  }
}
