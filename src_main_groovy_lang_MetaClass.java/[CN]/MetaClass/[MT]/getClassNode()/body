{
  if (classNode == null && GroovyObject.class.isAssignableFrom(theClass)) {
    String className=theClass.getName();
    String groovyFile=className;
    int idx=groovyFile.indexOf('$');
    if (idx > 0) {
      groovyFile=groovyFile.substring(0,idx);
    }
    groovyFile=groovyFile.replace('.','/') + ".groovy";
    URL url=theClass.getClassLoader().getResource(groovyFile);
    if (url == null) {
      url=Thread.currentThread().getContextClassLoader().getResource(groovyFile);
    }
    if (url != null) {
      try {
        InputStream in=url.openStream();
        CompilerFacade compiler=new CompilerFacade(theClass.getClassLoader(),new CompileUnit(getClass().getClassLoader(),new CompilerConfig())){
          protected void onClass(          ClassWriter classWriter,          ClassNode classNode){
            if (classNode.getName().equals(theClass.getName())) {
              MetaClass.this.classNode=classNode;
            }
          }
        }
;
        compiler.parseClass(in,groovyFile);
      }
 catch (      Exception e) {
        throw new GroovyRuntimeException("Exception thrown parsing: " + groovyFile + ". Reason: "+ e,e);
      }
    }
  }
  return classNode;
}
