{
  ClassNode classNode=new ClassNode(Type.makeType("Foo"),ACC_PUBLIC,Type.OBJECT_TYPE);
  classNode.addConstructor(new ConstructorNode(ACC_PUBLIC,null));
  classNode.addProperty(new PropertyNode("bar",ACC_PUBLIC,Type.STRING_TYPE,Type.makeType("Foo"),null,null,null));
  Statement loopStatement=createPrintlnStatement(new VariableExpression("i"));
  BlockStatement block=new BlockStatement();
  block.addStatement(new ExpressionStatement(new BinaryExpression(new VariableExpression("list"),Token.newSymbol("=",0,0),listExpression)));
  block.addStatement(new ForStatement("i",Type.DYNAMIC_TYPE,new VariableExpression("list"),loopStatement));
  classNode.addMethod(new MethodNode(methodName,ACC_PUBLIC,Type.VOID_TYPE,Parameter.EMPTY_ARRAY,block));
  Class fooClass=loadClass(classNode);
  assertTrue("Loaded a new class",fooClass != null);
  Object bean=fooClass.newInstance();
  assertTrue("Managed to create bean",bean != null);
  System.out.println("################ Now about to invoke method");
  try {
    InvokerHelper.invokeMethod(bean,methodName,null);
  }
 catch (  InvokerInvocationException e) {
    System.out.println("Caught: " + e.getCause());
    e.getCause().printStackTrace();
    fail("Should not have thrown an exception");
  }
  System.out.println("################ Done");
}
