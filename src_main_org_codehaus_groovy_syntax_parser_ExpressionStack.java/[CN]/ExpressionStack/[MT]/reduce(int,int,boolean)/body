{
  if (count <= rootOffset || rootOffset < 0 || count > size()) {
    throw new GroovyBugError("error in call to ExpressionStack.reduce(): count=" + count + ", rootOffset="+ rootOffset);
  }
  CSTNode root=null;
  CSTNode[] children=new CSTNode[count - 1];
  for (int child=count - 2, element=0; element < count; element++) {
    if (element == rootOffset) {
      root=pop();
    }
 else {
      children[child--]=pop();
    }
  }
  root=root.asReduction();
  for (int i=0; i < children.length; i++) {
    root.add(children[i]);
  }
  if (mark) {
    root.markAsExpression();
  }
  push(root);
}
