{
  if (expression == null)   throw new IllegalArgumentException("Null: expression");
  StringBuilder result=new StringBuilder();
  for (int x=expression.getLineNumber(); x <= expression.getLastLineNumber(); x++) {
    String line=source.getLine(x,null);
    if (line == null) {
      addError("Error calculating source code for expression. Trying to read line " + x + " from "+ source.getClass(),expression);
    }
    if (x == expression.getLastLineNumber()) {
      line=line.substring(0,expression.getLastColumnNumber() - 1);
    }
    if (x == expression.getLineNumber()) {
      line=line.substring(expression.getColumnNumber() - 1);
    }
    result.append(line).append('\n');
  }
  String source=result.toString().trim();
  if (!source.startsWith("{")) {
    addError("Error converting ClosureExpression into source code. Closures must start with {. Found: " + source,expression);
  }
  return source;
}
