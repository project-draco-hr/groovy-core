{
  Parameter[] initialParams=methodNode.getParameters();
  Parameter[] newParams=new Parameter[initialParams.length + 1];
  newParams[0]=createSelfParameter(traitClass,methodNode.isStatic());
  System.arraycopy(initialParams,0,newParams,1,initialParams.length);
  final int mod=methodNode.isPrivate() ? ACC_PRIVATE : ACC_PUBLIC;
  MethodNode mNode=new MethodNode(methodNode.getName(),mod | ACC_STATIC,methodNode.getReturnType(),newParams,methodNode.getExceptions(),processBody(new VariableExpression(newParams[0]),methodNode.getCode(),traitClass,fieldHelper,knownFields));
  mNode.setSourcePosition(methodNode);
  mNode.addAnnotations(methodNode.getAnnotations());
  if (methodNode.isAbstract()) {
    mNode.setModifiers(ACC_PUBLIC | ACC_ABSTRACT);
  }
 else {
    methodNode.addAnnotation(new AnnotationNode(Traits.IMPLEMENTED_CLASSNODE));
  }
  methodNode.setCode(null);
  if (!methodNode.isPrivate() && !methodNode.isStatic()) {
    methodNode.setModifiers(ACC_PUBLIC | ACC_ABSTRACT);
  }
  return mNode;
}
