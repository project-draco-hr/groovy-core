{
  Expression right=expression.getRightExpression();
  right.visit(this);
  boolean rightInt=BinaryIntExpressionHelper.isIntOperand(right,node);
  boolean leftInt=BinaryIntExpressionHelper.isIntOperand(expression.getLeftExpression(),node);
  boolean maybeOptimize=leftInt && rightInt;
  if (maybeOptimize) {
    if (right instanceof ConstantExpression) {
      opt.chainCanOptimize(maybeOptimize);
    }
 else {
      opt.chainShouldOptimize(maybeOptimize);
    }
  }
  if (opt.shouldOptimize()) {
    StatementMeta meta=addMeta(expression);
    if (leftInt && rightInt)     meta.type=ClassHelper.int_TYPE;
  }
}
