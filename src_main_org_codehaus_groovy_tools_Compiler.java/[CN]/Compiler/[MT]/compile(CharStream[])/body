{
  CSTNode[] compilationUnits=new CSTNode[sources.length];
  for (int i=0; i < sources.length; ++i) {
    try {
      compilationUnits[i]=stageOneCompile(sources[i]);
    }
 catch (    Exception e) {
      if (e instanceof SyntaxException) {
        ((SyntaxException)e).setSourceLocator(sources[i].getDescription());
      }
      this.errors.add(e);
    }
 finally {
      try {
        sources[i].close();
      }
 catch (      IOException e) {
      }
    }
  }
  if (!this.errors.isEmpty()) {
    MultiException exception=new MultiException((Exception[])this.errors.toArray(EMPTY_EXCEPTION_ARRAY));
    this.errors.clear();
    throw exception;
  }
  List results=new ArrayList();
  CompileUnit unit=new CompileUnit();
  for (int i=0; i < compilationUnits.length; ++i) {
    stageThreeCompile(unit,compilationUnits[i],sources[i]);
  }
  stageFourCompile(results,unit);
  return (GroovyClass[])results.toArray(GroovyClass.EMPTY_ARRAY);
}
