{
  Options options=new Options();
  options.addOption(OptionBuilder.withLongOpt("classpath").hasArg().withArgName("classpath").create());
  options.addOption(OptionBuilder.withLongOpt("sourcepath").hasArg().withArgName("sourcepath").create());
  options.addOption(OptionBuilder.hasArg().create('d'));
  options.addOption(OptionBuilder.withLongOpt("strict").create('s'));
  options.addOption(OptionBuilder.withLongOpt("help").create('h'));
  options.addOption(OptionBuilder.withLongOpt("version").create('v'));
  PosixParser cliParser=new PosixParser();
  CommandLine cli=cliParser.parse(options,args);
  if (cli.hasOption('h')) {
    displayHelp();
    return;
  }
  if (cli.hasOption('v')) {
    displayVersion();
  }
  Compiler compiler=new Compiler();
  if (cli.hasOption("classpath")) {
    compiler.setClasspath(cli.getOptionValue("classpath"));
  }
 else {
    compiler.setClasspath(System.getProperty("java.class.path"));
  }
  if (cli.hasOption("sourcepath")) {
    compiler.setSourcePath(cli.getOptionValue("sourcepath"));
  }
 else {
    compiler.setSourcePath(System.getProperty("user.dir"));
  }
  if (cli.hasOption('d')) {
    compiler.setOutputDir(cli.getOptionValue('d'));
  }
 else {
    compiler.setOutputDir(System.getProperty("user.dir"));
  }
  String[] filenames=cli.getArgs();
  if (filenames.length == 0) {
    displayHelp();
    return;
  }
  int errors=checkFiles(filenames);
  if (errors == 0) {
    compiler.compile(filenames);
  }
 else {
    if (errors == 1) {
      System.err.println("1 error");
    }
 else {
      System.err.println(errors + " errors");
    }
  }
}
