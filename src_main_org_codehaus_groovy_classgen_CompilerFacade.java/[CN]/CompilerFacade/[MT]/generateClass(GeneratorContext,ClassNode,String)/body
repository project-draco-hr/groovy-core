{
  verifier.visitClass(classNode);
  ClassWriter classWriter=new ClassWriter(true);
  ClassGenerator generator=new ClassGenerator(context,classWriter,classLoader,file);
  generator.visitClass(classNode);
  if (DEBUGGING) {
    try {
      onClass(classWriter,classNode);
    }
 catch (    Throwable t) {
      System.out.println("Caught: " + t);
      t.printStackTrace();
    }
  }
 else {
    onClass(classWriter,classNode);
  }
  LinkedList innerClasses=new LinkedList(generator.getInnerClasses());
  generator.getInnerClasses().clear();
  while (!innerClasses.isEmpty()) {
    ClassNode innerNode=(ClassNode)innerClasses.removeFirst();
    generateClass(context,innerNode,file);
  }
}
