{
  String name=getPackageName();
  if (name == null) {
    name="";
  }
 else {
    name=name + ".";
  }
  if (description == null) {
    throw new RuntimeException("Cannot generate main(String[]) class for statements when we have no file description");
  }
  name+=extractClassFromFileDescription();
  ClassNode classNode=new ClassNode(name,ACC_PUBLIC,"java.lang.Object");
  if (!statementBlock.isEmpty()) {
    classNode.addMethod(new MethodNode("main",ACC_PUBLIC | ACC_STATIC,"java.lang.Object",new Parameter[]{new Parameter("java.lang.String[]","args")},statementBlock));
  }
  for (Iterator iter=methods.iterator(); iter.hasNext(); ) {
    MethodNode node=(MethodNode)iter.next();
    int modifiers=node.getModifiers();
    if ((modifiers & ACC_ABSTRACT) == 0) {
      throw new RuntimeException("Cannot use abstract methods in a script, they are only available inside classes. Method: " + node.getName());
    }
    node.setModifiers(modifiers | ACC_STATIC);
    classNode.addMethod(node);
  }
  return classNode;
}
