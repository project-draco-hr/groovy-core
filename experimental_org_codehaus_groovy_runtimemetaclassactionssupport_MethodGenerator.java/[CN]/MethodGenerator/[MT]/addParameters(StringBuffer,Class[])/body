{
  if (parameterTypes.length != 0) {
    for (int i=0; i != parameterTypes.length; i++) {
      final Class parameterType=parameterTypes[i];
      if (parameterType.isPrimitive()) {
        if (parameterType == int.class) {
          code.append("((Number)").append("args[");
          code.append(i).append("]).intValue(), ");
        }
 else         if (parameterType == long.class) {
          code.append("((Number)").append("args[");
          code.append(i).append("]).longValue(), ");
        }
 else         if (parameterType == short.class) {
          code.append("((Number)").append("args[");
          code.append(i).append("]).shortValue(), ");
        }
 else         if (parameterType == char.class) {
          code.append("((Character)").append("args[");
          code.append(i).append("]).charValue(), ");
        }
 else         if (parameterType == byte.class) {
          code.append("((Number)").append("args[");
          code.append(i).append("]).byteValue(), ");
        }
 else         if (parameterType == boolean.class) {
          code.append("((Boolean)").append("args[");
          code.append(i).append("]).booleanValue(), ");
        }
 else         if (parameterType == float.class) {
          code.append("((Number)").append("args[");
          code.append(i).append("]).floatValue(), ");
        }
 else         if (parameterType == double.class) {
          code.append("((Number)").append("args[");
          code.append(i).append("]).doubleValue(), ");
        }
 else {
          code.append("**** ERROR ***** found primative parameter type: " + parameterType.getName());
        }
      }
 else       if (parameterType == String.class) {
        code.append("args[").append(i).append("].toString(), ");
      }
 else       if (parameterType == GString.class) {
        code.append("(groovy.lang.GString)((args[").append(i).append("] instanceof groovy.lang.GString) ? ");
        code.append("args[").append(i).append("] : ");
        code.append("new groovy.lang.GString(args[").append(i).append("].toString()){public String[] getStrings() {return (String [])this.getValues();}}), ");
      }
 else {
        code.append('(');
        getFullName(parameterType,code);
        code.append(")args[").append(i).append("], ");
      }
    }
    code.setLength(code.length() - 2);
  }
  return code;
}
