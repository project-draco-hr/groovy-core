{
  List<String> excludes=new ArrayList<String>();
  List<String> includes=new ArrayList<String>();
  if (!getIncludeExclude(transform,anno,buildee,excludes,includes))   return;
  ClassNode builder=createBuilder(anno,buildee);
  createBuilderFactoryMethod(anno,buildee,builder);
  List<FieldNode> fields=getInstancePropertyFields(buildee);
  List<FieldNode> filteredFields=selectFieldsFromExistingClass(fields,includes,excludes);
  for (  FieldNode fieldNode : filteredFields) {
    ClassNode correctedType=getCorrectedType(buildee,fieldNode);
    String fieldName=fieldNode.getName();
    builder.addField(createFieldCopy(buildee,fieldName,correctedType));
    builder.addMethod(createBuilderMethodForProp(builder,new PropertyInfo(fieldName,correctedType),getPrefix(anno)));
  }
  builder.addMethod(createBuildMethod(anno,buildee,filteredFields));
}
