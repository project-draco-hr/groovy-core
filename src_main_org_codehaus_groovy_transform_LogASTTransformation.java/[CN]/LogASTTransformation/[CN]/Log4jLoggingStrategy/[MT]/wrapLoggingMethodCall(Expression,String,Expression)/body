{
  final MethodCallExpression condition;
  if (!"trace".equals(methodName)) {
    ClassNode levelClass=new ClassNode("org.apache.log4j.Priority",0,ClassHelper.OBJECT_TYPE);
    AttributeExpression logLevelExpression=new AttributeExpression(new ClassExpression(levelClass),new ConstantExpression(methodName.toUpperCase()));
    ArgumentListExpression args=new ArgumentListExpression();
    args.addExpression(logLevelExpression);
    condition=new MethodCallExpression(logVariable,"isEnabledFor",args);
  }
 else {
    condition=new MethodCallExpression(logVariable,"is" + methodName.substring(0,1).toUpperCase() + methodName.substring(1,methodName.length())+ "Enabled",ArgumentListExpression.EMPTY_ARGUMENTS);
  }
  return new TernaryExpression(new BooleanExpression(condition),originalExpression,ConstantExpression.NULL);
}
