{
  if (isPrimitiveType(name))   return null;
  GroovyClassDoc doc=((SimpleGroovyRootDoc)rootDoc).classNamedExact(name);
  if (doc != null)   return doc;
  int slashIndex=name.lastIndexOf("/");
  if (slashIndex < 1) {
    doc=resolveInternalClassDocFromImport(rootDoc,name);
    if (doc != null)     return doc;
    for (    GroovyClassDoc nestedDoc : nested) {
      if (nestedDoc.name().endsWith("." + name))       return nestedDoc;
    }
    doc=rootDoc.classNamed(name);
    if (doc != null)     return doc;
  }
  String shortname=name;
  Class c=null;
  if (slashIndex > 0) {
    shortname=name.substring(slashIndex + 1);
    c=resolveExternalFullyQualifiedClass(name);
  }
 else {
    c=resolveExternalClassFromImport(name);
  }
  if (c != null) {
    return new ExternalGroovyClassDoc(c);
  }
  SimpleGroovyClassDoc placeholder=new SimpleGroovyClassDoc(null,shortname);
  placeholder.setFullPathName(name);
  return placeholder;
}
