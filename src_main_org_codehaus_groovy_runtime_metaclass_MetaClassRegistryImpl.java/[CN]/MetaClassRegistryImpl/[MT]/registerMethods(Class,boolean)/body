{
  CachedMethod[] methods=ReflectionCache.getCachedClass(theClass).getMethods();
  for (int i=0; i < methods.length; i++) {
    CachedMethod method=methods[i];
    final int mod=method.getModifiers();
    if (Modifier.isStatic(mod) && Modifier.isPublic(mod)) {
      CachedClass[] paramTypes=method.getParameterTypes();
      if (paramTypes.length > 0) {
        if (useInstanceMethods) {
          instanceMethods.add(new NewInstanceMetaMethod(method));
        }
 else {
          staticMethods.add(new NewStaticMetaMethod(method));
        }
      }
    }
  }
}
