{
  if (moduleRegistry.hasModule(module.getName())) {
    ExtensionModule loadedModule=moduleRegistry.getModule(module.getName());
    if (loadedModule.getVersion().equals(module.getVersion())) {
      return;
    }
 else {
      throw new GroovyRuntimeException("Conflicting module versions. Module [" + module.getName() + " is loaded in version "+ loadedModule.getVersion()+ " and you are trying to load version "+ module.getVersion());
    }
  }
  moduleRegistry.addModule(module);
  List<MetaMethod> metaMethods=module.getMetaMethods();
  for (  MetaMethod metaMethod : metaMethods) {
    CachedClass cachedClass=metaMethod.getDeclaringClass();
    List<MetaMethod> methods=map.get(cachedClass);
    if (methods == null) {
      methods=new ArrayList<MetaMethod>(4);
      map.put(cachedClass,methods);
    }
    methods.add(metaMethod);
    if (metaMethod.isStatic()) {
      staticMethods.add(metaMethod);
    }
 else {
      instanceMethods.add(metaMethod);
    }
  }
}
