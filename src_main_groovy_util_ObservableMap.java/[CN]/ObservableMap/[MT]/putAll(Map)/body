{
  if (map != null) {
    List events=new ArrayList();
    for (Iterator entries=map.entrySet().iterator(); entries.hasNext(); ) {
      Map.Entry entry=(Map.Entry)entries.next();
      String key=String.valueOf(entry.getKey());
      Object newValue=entry.getValue();
      Object oldValue=null;
      boolean newKey=!delegate.containsKey(key);
      if (test != null) {
        oldValue=delegate.put(key,newValue);
        Object result=null;
        if (test.getMaximumNumberOfParameters() == 2) {
          result=test.call(new Object[]{key,newValue});
        }
 else {
          result=test.call(newValue);
        }
        if (result != null && result instanceof Boolean && ((Boolean)result).booleanValue()) {
          if (newKey) {
            events.add(new PropertyAddedEvent(this,key,newValue));
          }
 else           if (oldValue != newValue) {
            events.add(new PropertyUpdatedEvent(this,key,oldValue,newValue));
          }
        }
      }
 else {
        oldValue=delegate.put(key,newValue);
        if (newKey) {
          events.add(new PropertyAddedEvent(this,key,newValue));
        }
 else         if (oldValue != newValue) {
          events.add(new PropertyUpdatedEvent(this,key,oldValue,newValue));
        }
      }
    }
    if (events.size() > 0) {
      pcs.firePropertyChange(new MultiPropertyEvent(this,(PropertyEvent[])events.toArray(new PropertyEvent[events.size()])));
    }
  }
}
