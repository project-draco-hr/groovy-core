{
  this.registry=registry;
  this.theClass=theClass;
  Method[] methodArray=theClass.getDeclaredMethods();
  for (int i=0; i < methodArray.length; i++) {
    Method method=methodArray[i];
    String name=method.getName();
    if (MethodHelper.isPublic(method)) {
      if (isGenericGetMethod(method)) {
        genericGetMethod=method;
      }
 else       if (isGenericSetMethod(method)) {
        genericSetMethod=method;
      }
    }
    List list=(List)methodIndex.get(name);
    if (list == null) {
      list=new ArrayList();
      methodIndex.put(name,list);
    }
    list.add(method);
  }
  BeanInfo info=Introspector.getBeanInfo(theClass);
  PropertyDescriptor[] descriptors=info.getPropertyDescriptors();
  for (int i=0; i < descriptors.length; i++) {
    PropertyDescriptor descriptor=descriptors[i];
    propertyDescriptors.put(descriptor.getName(),descriptor);
  }
}
