{
  if (type == null)   return type;
  type=type.trim();
  if (type.startsWith("#"))   return "<a href='" + type + "'>"+ type+ "</a>";
  if (type.indexOf('.') == -1)   return type;
  final String[] target=type.split("#");
  String shortClassName=target[0].replaceAll(".*\\.","");
  shortClassName+=(target.length > 1 ? "#" + target[1].split("\\(")[0] : "");
  if (shortClassName.startsWith("groovy.") || shortClassName.startsWith("org.codehaus.groovy.")) {
  }
  for (  Groovydoc.LinkArgument link : links) {
    final StringTokenizer tokenizer=new StringTokenizer(link.getPackages(),", ");
    while (tokenizer.hasMoreTokens()) {
      final String token=tokenizer.nextToken();
      if (type.startsWith(token)) {
        String apiBaseUrl=link.getHref();
        if (!apiBaseUrl.endsWith("/")) {
          apiBaseUrl+="/";
        }
        String url=apiBaseUrl + target[0].replace('.','/') + ".html"+ (target.length > 1 ? "#" + target[1] : "");
        return "<a href='" + url + "' title='"+ shortClassName+ "'>"+ shortClassName+ "</a>";
      }
    }
  }
  return type;
}
