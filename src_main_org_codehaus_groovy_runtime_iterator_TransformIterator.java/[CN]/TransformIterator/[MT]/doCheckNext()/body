{
  while (true) {
    if (!isQueueEmpty()) {
      hasNext=true;
      lastAcquired=get();
      break;
    }
    if (stopped) {
      hasNext=false;
      break;
    }
    hasNext=delegate.hasNext();
    if (!hasNext) {
      break;
    }
    try {
      Object res;
      res=transformer.transform(prepareParams(delegate,transformer.getParamCount()),this);
      if (!isQueueEmpty())       lastAcquired=get();
 else       lastAcquired=res;
      break;
    }
 catch (    GroovyRuntimeException g) {
      GroovyRuntimeException orig=g;
      while (g instanceof GroovyRuntimeException && g.getCause() != null && g.getCause() != g && g.getCause() instanceof GroovyRuntimeException)       g=(GroovyRuntimeException)g.getCause();
      if (g instanceof BreakIterationException) {
        break;
      }
      if (g instanceof ContinueIterationException) {
        continue;
      }
      throw orig;
    }
catch (    Throwable t) {
      if (!(t instanceof GroovyRuntimeException)) {
        throw new GroovyRuntimeException(t);
      }
      throw (GroovyRuntimeException)t;
    }
  }
}
