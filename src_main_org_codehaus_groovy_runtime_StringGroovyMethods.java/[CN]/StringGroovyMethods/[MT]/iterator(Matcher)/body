{
  matcher.reset();
  return new Iterator(){
    private boolean found;
    private boolean done;
    public boolean hasNext(){
      if (done) {
        return false;
      }
      if (!found) {
        found=matcher.find();
        if (!found) {
          done=true;
        }
      }
      return found;
    }
    public Object next(){
      if (!found) {
        if (!hasNext()) {
          throw new NoSuchElementException();
        }
      }
      found=false;
      if (hasGroup(matcher)) {
        List<String> list=new ArrayList<String>(matcher.groupCount());
        for (int i=0; i <= matcher.groupCount(); i++) {
          list.add(matcher.group(i));
        }
        return list;
      }
 else {
        return matcher.group();
      }
    }
    public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
