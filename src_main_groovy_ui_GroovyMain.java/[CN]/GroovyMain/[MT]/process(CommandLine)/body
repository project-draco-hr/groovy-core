{
  GroovyMain main=new GroovyMain();
  List args=line.getArgList();
  if (line.hasOption('D')) {
    String[] values=line.getOptionValues('D');
    for (int i=0; i < values.length; i++) {
      setSystemPropertyFrom(values[i]);
    }
  }
  main.conf.setSourceEncoding(line.getOptionValue('c',main.conf.getSourceEncoding()));
  main.isScriptFile=!line.hasOption('e');
  main.debug=line.hasOption('d');
  main.conf.setDebug(main.debug);
  main.processFiles=line.hasOption('p') || line.hasOption('n');
  main.autoOutput=line.hasOption('p');
  main.editFiles=line.hasOption('i');
  if (main.editFiles) {
    main.backupExtension=line.getOptionValue('i');
  }
  main.autoSplit=line.hasOption('a');
  String sp=line.getOptionValue('a');
  if (sp != null)   main.splitPattern=sp;
  if (main.isScriptFile) {
    if (args.isEmpty())     throw new ParseException("neither -e or filename provided");
    main.script=(String)args.remove(0);
    if (main.script.endsWith(".java"))     throw new ParseException("error: cannot compile file with .java extension: " + main.script);
  }
 else {
    main.script=line.getOptionValue('e');
  }
  main.processSockets=line.hasOption('l');
  if (main.processSockets) {
    String p=line.getOptionValue('l',"1960");
    main.port=Integer.parseInt(p);
  }
  String disabled=line.getOptionValue("disableopt",",");
  String[] deopts=disabled.split(",");
  for (  String deopt_i : deopts) {
    main.conf.getOptimizationOptions().put(deopt_i,false);
  }
  main.args=args;
  return main.run();
}
