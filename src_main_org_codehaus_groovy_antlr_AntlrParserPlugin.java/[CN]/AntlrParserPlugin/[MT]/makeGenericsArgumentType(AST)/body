{
  GenericsType gt;
  AST rootNode=typeArgument.getFirstChild();
  if (isType(WILDCARD_TYPE,rootNode)) {
    ClassNode base=ClassHelper.makeWithoutCaching("?");
    if (rootNode.getNextSibling() != null) {
      int boundType=getBoundType(rootNode.getNextSibling());
      ClassNode[] gts=makeGenericsBounds(rootNode,boundType);
      if (boundType == TYPE_UPPER_BOUNDS) {
        gt=new GenericsType(base,gts,null);
      }
 else {
        gt=new GenericsType(base,null,gts[0]);
      }
    }
 else {
      gt=new GenericsType(base,null,null);
    }
    gt.setName("?");
    gt.setWildcard(true);
  }
 else {
    ClassNode argument=makeTypeWithArguments(rootNode);
    gt=new GenericsType(argument);
  }
  configureAST(gt,typeArgument);
  return gt;
}
