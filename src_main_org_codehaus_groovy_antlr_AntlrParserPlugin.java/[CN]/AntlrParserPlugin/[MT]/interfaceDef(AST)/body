{
  List annotations=new ArrayList();
  AST node=classDef.getFirstChild();
  int modifiers=Opcodes.ACC_PUBLIC;
  if (isType(MODIFIERS,node)) {
    modifiers=modifiers(node,annotations,modifiers);
    node=node.getNextSibling();
  }
  modifiers|=Opcodes.ACC_ABSTRACT | Opcodes.ACC_INTERFACE;
  String name=identifier(node);
  node=node.getNextSibling();
  Type superClass=Type.OBJECT_TYPE;
  String[] interfaces={};
  if (isType(EXTENDS_CLAUSE,node)) {
    interfaces=interfaces(node);
    node=node.getNextSibling();
  }
  addNewClassName(name);
  Type classType=Type.makeType(dot(getPackageName(),name));
  classNode=new ClassNode(classType,modifiers,superClass,interfaces,null);
  classNode.addAnnotations(annotations);
  configureAST(classNode,classDef);
  assertNodeType(OBJBLOCK,node);
  objectBlock(node);
  output.addClass(classNode);
  classNode=null;
}
