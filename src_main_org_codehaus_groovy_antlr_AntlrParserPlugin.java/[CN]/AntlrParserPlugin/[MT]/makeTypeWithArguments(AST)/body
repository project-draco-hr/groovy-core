{
  ClassNode basicType=makeType(rootNode);
  List<GenericsType> typeArgumentList=new LinkedList<GenericsType>();
  AST node=rootNode.getFirstChild();
  if (node == null || isType(INDEX_OP,node) || isType(ARRAY_DECLARATOR,node))   return basicType;
  if (isType(DOT,node))   return basicType;
  node=node.getFirstChild();
  if (node == null)   return basicType;
  assertNodeType(TYPE_ARGUMENTS,node);
  AST typeArgument=node.getFirstChild();
  while (typeArgument != null) {
    assertNodeType(TYPE_ARGUMENT,typeArgument);
    GenericsType gt=makeGenericsArgumentType(typeArgument);
    typeArgumentList.add(gt);
    typeArgument=typeArgument.getNextSibling();
  }
  if (typeArgumentList.size() > 0) {
    basicType.setGenericsTypes(typeArgumentList.toArray(new GenericsType[typeArgumentList.size()]));
  }
  return basicType;
}
