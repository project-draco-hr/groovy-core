{
  List annotations=new ArrayList();
  boolean variableParameterDef=isType(VARIABLE_PARAMETER_DEF,paramNode);
  AST node=paramNode.getFirstChild();
  int modifiers=0;
  if (isType(MODIFIERS,node)) {
    modifiers=modifiers(node,annotations,modifiers);
    node=node.getNextSibling();
  }
  ClassNode type=ClassHelper.DYNAMIC_TYPE;
  if (isType(TYPE,node)) {
    type=makeTypeWithArguments(node);
    if (variableParameterDef)     type=type.makeArray();
    node=node.getNextSibling();
  }
  String name=identifier(node);
  node=node.getNextSibling();
  VariableExpression leftExpression=new VariableExpression(name,type);
  configureAST(leftExpression,paramNode);
  Parameter parameter=null;
  if (node != null) {
    assertNodeType(ASSIGN,node);
    Expression rightExpression=expression(node.getFirstChild());
    parameter=new Parameter(type,name,rightExpression);
  }
 else   parameter=new Parameter(type,name);
  return parameter;
}
