{
  Expression args=transform(mce.getArguments());
  Expression method=transform(mce.getMethod());
  if (mce.isImplicitThis()) {
    Expression ret=findStaticMethodImportFromModule(method,args);
    if (ret != null) {
      return ret;
    }
    if (inSpecialConstructorCall && method instanceof ConstantExpression) {
      ConstantExpression ce=(ConstantExpression)method;
      Object value=ce.getValue();
      if (value instanceof String) {
        return new StaticMethodCallExpression(currentClass,(String)value,args);
      }
    }
  }
  Expression object=transform(mce.getObjectExpression());
  MethodCallExpression result=new MethodCallExpression(object,method,args);
  result.setSafe(mce.isSafe());
  result.setImplicitThis(mce.isImplicitThis());
  result.setSpreadSafe(mce.isSpreadSafe());
  result.setSourcePosition(mce);
  return result;
}
