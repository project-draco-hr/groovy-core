{
  if (currentMethod != null && currentMethod.isStatic() && pe.getObjectExpression() instanceof VariableExpression && ((VariableExpression)pe.getObjectExpression()).isSuperExpression()) {
    PropertyExpression pexp=new PropertyExpression(new ClassExpression(currentClass.getSuperClass()),transform(pe.getProperty()));
    pexp.setSourcePosition(pe);
    return pexp;
  }
  boolean oldInPropertyExpression=inPropertyExpression;
  Expression oldFoundArgs=foundArgs;
  Expression oldFoundConstant=foundConstant;
  inPropertyExpression=true;
  foundArgs=null;
  foundConstant=null;
  Expression objectExpression=transform(pe.getObjectExpression());
  boolean candidate=false;
  if (objectExpression instanceof MethodCallExpression) {
    candidate=((MethodCallExpression)objectExpression).isImplicitThis();
  }
  if (foundArgs != null && foundConstant != null && candidate) {
    Expression result=findStaticMethodImportFromModule(foundConstant,foundArgs);
    if (result != null) {
      objectExpression=result;
      objectExpression.setSourcePosition(pe);
    }
  }
  inPropertyExpression=oldInPropertyExpression;
  foundArgs=oldFoundArgs;
  foundConstant=oldFoundConstant;
  pe.setObjectExpression(objectExpression);
  return pe;
}
