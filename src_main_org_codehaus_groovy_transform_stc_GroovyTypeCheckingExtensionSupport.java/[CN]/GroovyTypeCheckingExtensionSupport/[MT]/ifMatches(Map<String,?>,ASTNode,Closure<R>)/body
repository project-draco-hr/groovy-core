{
  boolean match=true;
  Map properties=DefaultGroovyMethods.getProperties(node);
  for (  Map.Entry<String,?> entry : predicates.entrySet()) {
    String propertyName=entry.getKey();
    if (!properties.containsKey(propertyName)) {
      match=false;
    }
 else {
      Object value=properties.get(propertyName);
      Object predicate=entry.getValue();
      if (predicate instanceof Closure) {
        Closure clone=((Closure)predicate).rehydrate(value,this,this);
        clone.setResolveStrategy(Closure.DELEGATE_FIRST);
        Object result=clone.call(value);
        if (result instanceof Boolean) {
          match=(Boolean)result;
        }
 else {
          match=result == null ? false : DefaultGroovyMethods.asType(result,Boolean.class);
        }
      }
 else {
        match=nullSafeEqualsClassNodeAware(value,predicate);
      }
    }
    if (!match)     break;
  }
  if (match) {
    return code.call();
  }
  return null;
}
