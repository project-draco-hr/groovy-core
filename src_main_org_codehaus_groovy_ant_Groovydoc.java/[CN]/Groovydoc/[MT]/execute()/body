{
  List<String> packagesToDoc=new ArrayList<String>();
  Path sourceDirs=new Path(getProject());
  Properties properties=new Properties();
  properties.put("windowTitle",windowTitle);
  properties.put("docTitle",docTitle);
  properties.put("footer",footer);
  properties.put("header",header);
  properties.put("privateScope",privateScope);
  properties.put("protectedScope",protectedScope);
  properties.put("publicScope",publicScope);
  properties.put("packageScope",packageScope);
  properties.put("author",author);
  properties.put("overviewFile",overviewFile != null ? overviewFile.getAbsolutePath() : "");
  if (sourcePath != null) {
    sourceDirs.addExisting(sourcePath);
  }
  parsePackages(packagesToDoc,sourceDirs);
  GroovyDocTool htmlTool=new GroovyDocTool(new ClasspathResourceManager(),sourcePath.list(),new String[]{TEMPLATE_BASEDIR + "topLevel/index.html",TEMPLATE_BASEDIR + "topLevel/overview-frame.html",TEMPLATE_BASEDIR + "topLevel/allclasses-frame.html",TEMPLATE_BASEDIR + "topLevel/overview-summary.html",TEMPLATE_BASEDIR + "topLevel/help-doc.html",TEMPLATE_BASEDIR + "topLevel/index-all.html",TEMPLATE_BASEDIR + "topLevel/deprecated-list.html",TEMPLATE_BASEDIR + "topLevel/stylesheet.css",TEMPLATE_BASEDIR + "topLevel/inherit.gif",DOCGEN_BASEDIR + "groovy.ico"},new String[]{TEMPLATE_BASEDIR + "packageLevel/package-frame.html",TEMPLATE_BASEDIR + "packageLevel/package-summary.html"},new String[]{TEMPLATE_BASEDIR + "classLevel/classDocName.html"},links,properties);
  try {
    htmlTool.add(sourceFilesToDoc);
    FileOutputTool output=new FileOutputTool();
    htmlTool.renderToOutput(output,destDir.getCanonicalPath());
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  if (styleSheetFile != null) {
    try {
      String css=DefaultGroovyMethods.getText(styleSheetFile);
      File outfile=new File(destDir,"stylesheet.css");
      DefaultGroovyMethods.setText(outfile,css);
    }
 catch (    IOException e) {
      System.out.println("Warning: Unable to copy specified stylesheet '" + styleSheetFile.getAbsolutePath() + "'. Using default stylesheet instead. Due to: "+ e.getMessage());
    }
  }
}
