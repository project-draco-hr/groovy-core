{
  if (type == null)   return null;
  Class cls=type.getClass();
  Class ans=cls;
  if (ans == null)   return null;
  if (cls.isPrimitive() && cls != void.class) {
    if (cls == int.class) {
      ans=Integer.class;
    }
 else     if (cls == byte.class) {
      ans=Byte.class;
    }
 else     if (cls == char.class) {
      ans=Character.class;
    }
 else     if (cls == short.class) {
      ans=Short.class;
    }
 else     if (cls == boolean.class) {
      ans=Boolean.class;
    }
 else     if (cls == float.class) {
      ans=Float.class;
    }
 else     if (cls == long.class) {
      ans=Long.class;
    }
 else     if (cls == double.class) {
      ans=Double.class;
    }
  }
 else   if (cls.isArray()) {
    int dimension=0;
    Class elemType=null;
    do {
      ++dimension;
      elemType=cls.getComponentType();
    }
 while (elemType.isArray());
    if (elemType.isPrimitive()) {
      Class boxElem=null;
      if (elemType == int.class) {
        boxElem=Integer.class;
      }
 else       if (elemType == byte.class) {
        boxElem=Byte.class;
      }
 else       if (elemType == char.class) {
        boxElem=Character.class;
      }
 else       if (elemType == short.class) {
        boxElem=Short.class;
      }
 else       if (elemType == boolean.class) {
        boxElem=Boolean.class;
      }
 else       if (elemType == float.class) {
        boxElem=Float.class;
      }
 else       if (elemType == long.class) {
        boxElem=Long.class;
      }
 else       if (elemType == double.class) {
        boxElem=Double.class;
      }
      String typeName="";
      for (int i=0; i < dimension; i++) {
        typeName+="[";
      }
      typeName+="L" + boxElem.getName() + ";";
      try {
        return Type.makeType(Class.forName(typeName));
      }
 catch (      ClassNotFoundException e) {
        throw new RuntimeException(e);
      }
    }
  }
  return Type.makeType(ans);
}
