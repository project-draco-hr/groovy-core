{
  ClassNode componentType=(ClassNode)receiver.getNodeMetaData(StaticCompilationMetadataKeys.COMPONENT_TYPE);
  if (componentType == null) {
    componentType=OBJECT_TYPE;
  }
  CompileStack compileStack=controller.getCompileStack();
  Variable tmpList=new VariableExpression("tmpList",make(ArrayList.class));
  int var=compileStack.defineTemporaryVariable(tmpList,false);
  Variable iterator=new VariableExpression("iterator",Iterator_TYPE);
  int it=compileStack.defineTemporaryVariable(iterator,false);
  Variable nextVar=new VariableExpression("next",componentType);
  final int next=compileStack.defineTemporaryVariable(nextVar,false);
  mv.visitTypeInsn(NEW,"java/util/ArrayList");
  mv.visitInsn(DUP);
  receiver.visit(controller.getAcg());
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/List","size","()I");
  controller.getOperandStack().remove(1);
  mv.visitMethodInsn(INVOKESPECIAL,"java/util/ArrayList","<init>","(I)V");
  mv.visitVarInsn(ASTORE,var);
  Label l1=new Label();
  mv.visitLabel(l1);
  receiver.visit(controller.getAcg());
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/List","iterator","()Ljava/util/Iterator;");
  controller.getOperandStack().remove(1);
  mv.visitVarInsn(ASTORE,it);
  Label l2=new Label();
  mv.visitLabel(l2);
  mv.visitVarInsn(ALOAD,it);
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Iterator","hasNext","()Z");
  Label l3=new Label();
  mv.visitJumpInsn(IFEQ,l3);
  mv.visitVarInsn(ALOAD,it);
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/Iterator","next","()Ljava/lang/Object;");
  mv.visitTypeInsn(CHECKCAST,BytecodeHelper.getClassInternalName(componentType));
  mv.visitVarInsn(ASTORE,next);
  Label l4=new Label();
  mv.visitLabel(l4);
  mv.visitVarInsn(ALOAD,var);
  final ClassNode finalComponentType=componentType;
  PropertyExpression pexp=new PropertyExpression(new BytecodeExpression(){
    @Override public void visit(    final MethodVisitor mv){
      mv.visitVarInsn(ALOAD,next);
    }
    @Override public ClassNode getType(){
      return finalComponentType;
    }
  }
,methodName);
  pexp.visit(controller.getAcg());
  controller.getOperandStack().box();
  controller.getOperandStack().remove(1);
  mv.visitMethodInsn(INVOKEINTERFACE,"java/util/List","add","(Ljava/lang/Object;)Z");
  mv.visitInsn(POP);
  Label l5=new Label();
  mv.visitLabel(l5);
  mv.visitJumpInsn(GOTO,l2);
  mv.visitLabel(l3);
  mv.visitVarInsn(ALOAD,var);
  controller.getOperandStack().push(make(ArrayList.class));
  controller.getCompileStack().removeVar(next);
  controller.getCompileStack().removeVar(it);
  controller.getCompileStack().removeVar(var);
}
