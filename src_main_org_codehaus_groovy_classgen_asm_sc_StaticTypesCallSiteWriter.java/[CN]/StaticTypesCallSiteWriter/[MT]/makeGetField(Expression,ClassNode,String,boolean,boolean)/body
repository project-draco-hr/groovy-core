{
  FieldNode field=receiverType.getField(fieldName);
  if (field != null && isDirectAccessAllowed(field,controller.getClassNode(),samePackage)) {
    CompileStack compileStack=controller.getCompileStack();
    MethodVisitor mv=controller.getMethodVisitor();
    if (field.isStatic()) {
      mv.visitFieldInsn(GETSTATIC,BytecodeHelper.getClassInternalName(field.getOwner()),fieldName,BytecodeHelper.getTypeDescription(field.getOriginType()));
      controller.getOperandStack().push(field.getOriginType());
    }
 else {
      if (implicitThis) {
        compileStack.pushImplicitThis(implicitThis);
      }
      receiver.visit(controller.getAcg());
      if (implicitThis)       compileStack.popImplicitThis();
      mv.visitFieldInsn(GETFIELD,BytecodeHelper.getClassInternalName(field.getOwner()),fieldName,BytecodeHelper.getTypeDescription(field.getOriginType()));
    }
    controller.getOperandStack().replace(field.getOriginType());
    return true;
  }
  ClassNode superClass=receiverType.getSuperClass();
  if (superClass != null) {
    return makeGetField(receiver,superClass,fieldName,implicitThis,false);
  }
  return false;
}
