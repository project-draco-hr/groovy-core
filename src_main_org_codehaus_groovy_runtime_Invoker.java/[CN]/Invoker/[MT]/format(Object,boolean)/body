{
  if (arguments == null) {
    return "null";
  }
 else   if (arguments.getClass().isArray()) {
    return format(asCollection(arguments),verbose);
  }
 else   if (arguments instanceof Range) {
    Range range=(Range)arguments;
    StringBuffer buffer=new StringBuffer();
    buffer.append(format(range.getFrom(),verbose));
    buffer.append("..");
    buffer.append(format(range.getTo(),verbose));
    return buffer.toString();
  }
 else   if (arguments instanceof List) {
    List list=(List)arguments;
    StringBuffer buffer=new StringBuffer("[");
    boolean first=true;
    for (Iterator iter=list.iterator(); iter.hasNext(); ) {
      if (first) {
        first=false;
      }
 else {
        buffer.append(", ");
      }
      buffer.append(format(iter.next(),verbose));
    }
    buffer.append("]");
    return buffer.toString();
  }
 else   if (arguments instanceof Map) {
    Map map=(Map)arguments;
    if (map.isEmpty()) {
      return "[:]";
    }
    StringBuffer buffer=new StringBuffer("[");
    boolean first=true;
    for (Iterator iter=map.entrySet().iterator(); iter.hasNext(); ) {
      if (first) {
        first=false;
      }
 else {
        buffer.append(", ");
      }
      Map.Entry entry=(Map.Entry)iter.next();
      buffer.append(format(entry.getKey(),verbose));
      buffer.append(":");
      buffer.append(format(entry.getValue(),verbose));
    }
    buffer.append("]");
    return buffer.toString();
  }
 else   if (arguments instanceof String) {
    if (verbose) {
      return "\"" + arguments + "\"";
    }
 else {
      return (String)arguments;
    }
  }
 else {
    return arguments.toString();
  }
}
