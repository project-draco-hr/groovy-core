{
  Collection list=asCollection(object);
  int size=list.size();
  Class elementType=type.getComponentType();
  Object array=Array.newInstance(elementType,size);
  int idx=0;
  if (boolean.class.equals(elementType)) {
    for (Iterator iter=list.iterator(); iter.hasNext(); idx++) {
      Object element=iter.next();
      Array.setBoolean(array,idx,asBool(element));
    }
  }
 else   if (byte.class.equals(elementType)) {
    for (Iterator iter=list.iterator(); iter.hasNext(); idx++) {
      Object element=iter.next();
      Array.setByte(array,idx,asByte(element));
    }
  }
 else   if (char.class.equals(elementType)) {
    for (Iterator iter=list.iterator(); iter.hasNext(); idx++) {
      Object element=iter.next();
      Array.setChar(array,idx,asChar(element));
    }
  }
 else   if (double.class.equals(elementType)) {
    for (Iterator iter=list.iterator(); iter.hasNext(); idx++) {
      Object element=iter.next();
      Array.setDouble(array,idx,asDouble(element));
    }
  }
 else   if (float.class.equals(elementType)) {
    for (Iterator iter=list.iterator(); iter.hasNext(); idx++) {
      Object element=iter.next();
      Array.setFloat(array,idx,asFloat(element));
    }
  }
 else   if (int.class.equals(elementType)) {
    for (Iterator iter=list.iterator(); iter.hasNext(); idx++) {
      Object element=iter.next();
      Array.setInt(array,idx,asInt(element));
    }
  }
 else   if (long.class.equals(elementType)) {
    for (Iterator iter=list.iterator(); iter.hasNext(); idx++) {
      Object element=iter.next();
      Array.setLong(array,idx,asLong(element));
    }
  }
 else   if (short.class.equals(elementType)) {
    for (Iterator iter=list.iterator(); iter.hasNext(); idx++) {
      Object element=iter.next();
      Array.setShort(array,idx,asShort(element));
    }
  }
 else {
    for (Iterator iter=list.iterator(); iter.hasNext(); idx++) {
      Object element=iter.next();
      Object coercedElement=asType(element,elementType);
      Array.set(array,idx,coercedElement);
    }
  }
  return array;
}
