{
  if (type.isInstance(object)) {
    return object;
  }
  if (type.equals(String.class)) {
    return (object != null) ? object.toString() : "null";
  }
  if (object instanceof Number) {
    Number n=(Number)object;
    if (type.isPrimitive()) {
      if (type == byte.class) {
        return new Byte(n.byteValue());
      }
      if (type == char.class) {
        return new Character((char)n.intValue());
      }
      if (type == short.class) {
        return new Short(n.shortValue());
      }
      if (type == int.class) {
        return new Integer(n.intValue());
      }
      if (type == long.class) {
        return new Long(n.longValue());
      }
      if (type == float.class) {
        return new Float(n.floatValue());
      }
      if (type == double.class) {
        return new Double(n.doubleValue());
      }
    }
 else {
      if (Number.class.isAssignableFrom(type)) {
        if (type == Byte.class) {
          return new Byte(n.byteValue());
        }
        if (type == Character.class) {
          return new Character((char)n.intValue());
        }
        if (type == Short.class) {
          return new Short(n.shortValue());
        }
        if (type == Integer.class) {
          return new Integer(n.intValue());
        }
        if (type == Long.class) {
          return new Long(n.longValue());
        }
        if (type == Float.class) {
          return new Float(n.floatValue());
        }
        if (type == Double.class) {
          return new Double(n.doubleValue());
        }
      }
    }
  }
  if (type == Boolean.class) {
    return asBool(object) ? Boolean.TRUE : Boolean.FALSE;
  }
  return object;
}
