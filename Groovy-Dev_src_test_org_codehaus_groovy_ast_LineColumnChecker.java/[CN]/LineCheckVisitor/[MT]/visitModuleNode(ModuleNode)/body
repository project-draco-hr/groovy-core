{
  Object[] imports=moduleNode.getImports().toArray();
  for (int i=0; i < imports.length; i++) {
    visitNode(((ImportNode)imports[i]).getType());
  }
  Collection staticImportClasses=moduleNode.getStaticImportClasses().values();
  for (Iterator staticClassIt=staticImportClasses.iterator(); staticClassIt.hasNext(); ) {
    ClassNode staticClass=(ClassNode)staticClassIt.next();
    visitNode(staticClass);
  }
  Collection staticImportAliases=moduleNode.getStaticImportAliases().values();
  for (Iterator staticAliasesIt=staticImportAliases.iterator(); staticAliasesIt.hasNext(); ) {
    ClassNode staticAlias=(ClassNode)staticAliasesIt.next();
    visitNode(staticAlias);
  }
  List classes=moduleNode.getClasses();
  for (Iterator classIt=classes.iterator(); classIt.hasNext(); ) {
    ClassNode classNode=(ClassNode)classIt.next();
    if (!classNode.isScript()) {
      visitClass(classNode);
    }
 else {
      List methods=moduleNode.getMethods();
      for (Iterator methodIt=methods.iterator(); methodIt.hasNext(); ) {
        MethodNode method=(MethodNode)methodIt.next();
        visitMethod(method);
      }
    }
  }
  if (!moduleNode.getStatementBlock().isEmpty()) {
    visitBlockStatement(moduleNode.getStatementBlock());
  }
}
