{
  ClassReader cr=new ClassReader(new FileInputStream(clazz));
  ClassNode ca=new ClassNode(){
    public void visitEnd(){
    }
  }
;
  cr.accept(new CheckClassAdapter(ca),ClassWriter.COMPUTE_MAXS);
  boolean failed=false;
  List methods=ca.methods;
  for (int i=0; i < methods.size(); ++i) {
    MethodNode method=(MethodNode)methods.get(i);
    if (method.instructions.size() > 0) {
      Analyzer a=new Analyzer(new SimpleVerifier());
      try {
        a.analyze(ca.name,method);
        continue;
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
      final Frame[] frames=a.getFrames();
      if (!failed) {
        failed=true;
        log("verifying of class " + clazz + " failed");
      }
      if (verbose)       log(method.name + method.desc);
      TraceMethodVisitor mv=new TraceMethodVisitor(null);
      for (int j=0; j < method.instructions.size(); ++j) {
        Object insn=method.instructions.get(j);
        if (insn instanceof AbstractInsnNode) {
          ((AbstractInsnNode)insn).accept(mv);
        }
 else {
          mv.visitLabel((Label)insn);
        }
      }
      mv.visitMaxs(method.maxStack,method.maxLocals);
    }
  }
  return !failed;
}
