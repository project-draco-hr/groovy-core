{
  if (col.getClass() == clazz) {
    return col;
  }
  if (clazz == List.class) {
    return asList(col);
  }
  if (clazz == Set.class) {
    if (col instanceof Set)     return col;
    return new HashSet(col);
  }
  if (clazz == SortedSet.class) {
    if (col instanceof SortedSet)     return col;
    return new TreeSet(col);
  }
  if (clazz == Queue.class) {
    if (col instanceof Queue)     return col;
    return new LinkedList(col);
  }
  if (clazz == Stack.class) {
    if (col instanceof Stack)     return col;
    final Stack stack=new Stack();
    stack.addAll(col);
    return stack;
  }
  Object[] args={col};
  try {
    return InvokerHelper.invokeConstructorOf(clazz,args);
  }
 catch (  Exception e) {
  }
  return asType((Object)col,clazz);
}
