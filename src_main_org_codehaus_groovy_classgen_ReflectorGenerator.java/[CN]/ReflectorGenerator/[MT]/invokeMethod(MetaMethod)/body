{
  Class ownerClass=method.getInterfaceClass();
  boolean useInterface=false;
  if (ownerClass == null) {
    ownerClass=method.getDeclaringClass();
  }
 else {
    useInterface=true;
  }
  String type=BytecodeHelper.getClassInternalName(ownerClass.getName());
  String descriptor=BytecodeHelper.getMethodDescriptor(method.getReturnType(),method.getParameterTypes());
  if (method.isStatic()) {
    loadParameters(method,3);
    cv.visitMethodInsn(INVOKESTATIC,type,method.getName(),descriptor);
  }
 else {
    cv.visitVarInsn(ALOAD,2);
    helper.doCast(ownerClass);
    loadParameters(method,3);
    cv.visitMethodInsn((useInterface) ? INVOKEINTERFACE : INVOKEVIRTUAL,type,method.getName(),descriptor);
  }
  helper.box(method.getReturnType());
}
