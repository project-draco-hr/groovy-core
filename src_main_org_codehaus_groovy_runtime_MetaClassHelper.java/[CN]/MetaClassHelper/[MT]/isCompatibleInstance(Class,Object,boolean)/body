{
  boolean answer=value == null || type.isInstance(value);
  if (!answer) {
    if (type.isPrimitive()) {
      if (type == int.class) {
        return value instanceof Integer;
      }
 else       if (type == double.class) {
        return value instanceof Double || value instanceof Float || value instanceof Integer|| value instanceof BigDecimal;
      }
 else       if (type == boolean.class) {
        return value instanceof Boolean;
      }
 else       if (type == long.class) {
        return value instanceof Long || value instanceof Integer;
      }
 else       if (type == float.class) {
        return value instanceof Float || value instanceof Integer;
      }
 else       if (type == char.class) {
        return value instanceof Character;
      }
 else       if (type == byte.class) {
        return value instanceof Byte;
      }
 else       if (type == short.class) {
        return value instanceof Short;
      }
    }
 else     if (type.isArray() && value.getClass().isArray()) {
      return isCompatibleClass(type.getComponentType(),value.getClass().getComponentType(),false);
    }
 else     if (includeCoerce) {
      if (type == String.class && value instanceof GString) {
        return true;
      }
 else       if (value instanceof Number) {
        return Number.class.isAssignableFrom(type);
      }
    }
  }
  return answer;
}
