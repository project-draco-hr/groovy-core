{
  String src=ResourceGroovyMethods.getText(srcFile);
  String relPackage=tool.getPath(filename).replace('\\',FS);
  String packagePath=isAbsolute ? "DefaultPackage" : relPackage;
  String file=tool.getFile(filename);
  SimpleGroovyPackageDoc packageDoc=null;
  if (!isAbsolute) {
    packageDoc=(SimpleGroovyPackageDoc)rootDoc.packageNamed(packagePath);
  }
  if (filename.endsWith("package.html") || filename.endsWith("package-info.java") || filename.endsWith("package-info.groovy")) {
    if (packageDoc == null) {
      packageDoc=new SimpleGroovyPackageDoc(relPackage);
      packagePath=relPackage;
    }
    processPackageInfo(src,filename,packageDoc);
    rootDoc.put(packagePath,packageDoc);
    return;
  }
  try {
    Map<String,GroovyClassDoc> classDocs=getClassDocsFromSingleSource(packagePath,file,src);
    rootDoc.putAllClasses(classDocs);
    if (isAbsolute) {
      Iterator<Map.Entry<String,GroovyClassDoc>> iterator=classDocs.entrySet().iterator();
      if (iterator.hasNext()) {
        final Map.Entry<String,GroovyClassDoc> docEntry=iterator.next();
        String fullPath=docEntry.getValue().getFullPathName();
        int slash=fullPath.lastIndexOf(FS);
        if (slash > 0)         packagePath=fullPath.substring(0,slash);
        packageDoc=(SimpleGroovyPackageDoc)rootDoc.packageNamed(packagePath);
      }
    }
    if (packageDoc == null) {
      packageDoc=new SimpleGroovyPackageDoc(packagePath);
    }
    packageDoc.putAll(classDocs);
    rootDoc.put(packagePath,packageDoc);
  }
 catch (  RecognitionException e) {
    log.error("ignored due to RecognitionException: " + filename + " ["+ e.getMessage()+ "]");
    log.debug("ignored due to RecognitionException: " + filename + " ["+ e.getMessage()+ "]",e);
  }
catch (  TokenStreamException e) {
    log.error("ignored due to TokenStreamException: " + filename + " ["+ e.getMessage()+ "]");
    log.debug("ignored due to TokenStreamException: " + filename + " ["+ e.getMessage()+ "]",e);
  }
}
