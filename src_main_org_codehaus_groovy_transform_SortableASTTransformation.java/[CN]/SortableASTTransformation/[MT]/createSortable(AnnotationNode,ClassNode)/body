{
  List<String> includes=getMemberList(annotation,"includes");
  List<String> excludes=getMemberList(annotation,"excludes");
  if (!checkIncludeExclude(annotation,excludes,includes,MY_TYPE_NAME))   return;
  if (classNode.isInterface()) {
    addError(MY_TYPE_NAME + " cannot be applied to interface " + classNode.getName(),annotation);
  }
  List<PropertyNode> properties=findProperties(annotation,classNode,includes,excludes);
  implementComparable(classNode);
  classNode.addMethod(new MethodNode("compareTo",ACC_PUBLIC,ClassHelper.int_TYPE,params(param(newClass(classNode),OTHER)),ClassNode.EMPTY_ARRAY,createCompareToMethodBody(properties)));
  for (  PropertyNode property : properties) {
    createComparatorFor(classNode,property);
  }
}
