{
  namespaces=defineNamespaces(element,namespaces);
  element.normalize();
  printIndent();
  String prefix=element.getPrefix();
  boolean hasPrefix=prefix != null && prefix.length() > 0;
  String localName=getLocalName(element);
  boolean isKeyword=checkEscaping(localName);
  if (isKeyword || hasPrefix)   print(qt);
  if (hasPrefix) {
    print(prefix);
    print(".");
  }
  print(localName);
  if (isKeyword || hasPrefix)   print(qt);
  print("(");
  boolean hasAttributes=printAttributes(element);
  NodeList list=element.getChildNodes();
  int length=list.getLength();
  if (length == 0) {
    printEnd(")",endWithComma);
  }
 else {
    Node node=list.item(0);
    if (length == 1 && node instanceof Text) {
      Text textNode=(Text)node;
      String text=getTextNodeData(textNode);
      if (hasAttributes)       print(", ");
      printQuoted(text);
      printEnd(")",endWithComma);
    }
 else     if (mixedContent(list)) {
      println(") {");
      out.incrementIndent();
      boolean oldInMixed=inMixed;
      inMixed=true;
      for (node=element.getFirstChild(); node != null; node=node.getNextSibling()) {
        print(node,namespaces,false);
      }
      inMixed=oldInMixed;
      out.decrementIndent();
      printIndent();
      printEnd("}",endWithComma);
    }
 else {
      println(") {");
      out.incrementIndent();
      printChildren(element,namespaces);
      out.decrementIndent();
      printIndent();
      printEnd("}",endWithComma);
    }
  }
}
