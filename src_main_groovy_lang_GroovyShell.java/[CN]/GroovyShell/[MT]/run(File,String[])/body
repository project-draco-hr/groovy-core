{
  final Thread thread=Thread.currentThread();
  ClassLoader currentClassLoader=thread.getContextClassLoader();
class DoSetContext implements PrivilegedAction {
    ClassLoader classLoader;
    public DoSetContext(    ClassLoader loader){
      classLoader=loader;
    }
    public Object run(){
      thread.setContextClassLoader(classLoader);
      return null;
    }
  }
  ;
  AccessController.doPrivileged(new DoSetContext(loader));
  Class scriptClass;
  try {
    scriptClass=(Class)AccessController.doPrivileged(new PrivilegedExceptionAction(){
      public Object run() throws SyntaxException, IOException {
        return loader.parseClass(scriptFile);
      }
    }
);
  }
 catch (  PrivilegedActionException pae) {
    Exception e=pae.getException();
    if (e instanceof SyntaxException) {
      throw (SyntaxException)e;
    }
 else     if (e instanceof IOException) {
      throw (IOException)e;
    }
 else {
      throw (RuntimeException)pae.getException();
    }
  }
  InvokerHelper.invokeMethod(scriptClass,"main",new Object[]{args});
  AccessController.doPrivileged(new DoSetContext(currentClassLoader));
}
