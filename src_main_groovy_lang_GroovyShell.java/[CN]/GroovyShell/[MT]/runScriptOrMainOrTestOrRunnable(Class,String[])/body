{
  if (scriptClass == null) {
    return null;
  }
  System.err.println(scriptClass + " ? " + (Script.class.isAssignableFrom(scriptClass)));
  System.err.println(scriptClass.getSuperclass());
  System.err.println(java.util.Arrays.toString(scriptClass.getInterfaces()));
  try {
    if (Script.class.isAssignableFrom(scriptClass)) {
      Script script=null;
      try {
        script=(Script)scriptClass.newInstance();
      }
 catch (      InstantiationException e) {
      }
catch (      IllegalAccessException e) {
      }
      if (script != null) {
        System.err.println(script);
        script.setBinding(context);
        script.setProperty("args",args);
        return script.run();
      }
    }
    scriptClass.getMethod("main",new Class[]{String[].class});
    return InvokerHelper.invokeMethod(scriptClass,"main",new Object[]{args});
  }
 catch (  NoSuchMethodException e) {
    if (Runnable.class.isAssignableFrom(scriptClass)) {
      return runRunnable(scriptClass,args);
    }
    if (isJUnit3Test(scriptClass)) {
      return runJUnit3Test(scriptClass);
    }
    if (isJUnit4Test(scriptClass)) {
      return runJUnit4Test(scriptClass);
    }
    if (isTestNgTest(scriptClass)) {
      return runTestNgTest(scriptClass);
    }
    throw new GroovyRuntimeException("This script or class could not be run.\n" + "It should either: \n" + "- have a main method, \n"+ "- be a JUnit test, TestNG test or extend GroovyTestCase, \n"+ "- or implement the Runnable interface.");
  }
}
