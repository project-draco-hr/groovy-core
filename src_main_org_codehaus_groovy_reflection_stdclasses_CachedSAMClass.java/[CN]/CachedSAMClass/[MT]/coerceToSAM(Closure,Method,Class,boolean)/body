{
  if (argument != null && clazz.isAssignableFrom(argument.getClass())) {
    return argument;
  }
  if (isInterface) {
    return Proxy.newProxyInstance(clazz.getClassLoader(),new Class[]{clazz},new ConvertedClosure(argument));
  }
 else {
    Map<String,Object> m=new HashMap<String,Object>();
    m.put(method.getName(),argument);
    return ProxyGenerator.INSTANCE.instantiateAggregateFromBaseClass(m,clazz);
  }
}
