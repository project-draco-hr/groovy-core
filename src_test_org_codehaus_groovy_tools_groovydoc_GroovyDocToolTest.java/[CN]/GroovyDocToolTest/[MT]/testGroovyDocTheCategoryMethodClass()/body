{
  if (isHeadless()) {
    return;
  }
  List<String> srcList=new ArrayList<String>();
  srcList.add("groovy/util/CliBuilder.groovy");
  srcList.add("groovy/lang/GroovyLogTestCase.groovy");
  srcList.add("groovy/mock/interceptor/StrictExpectation.groovy");
  srcList.add("groovy/ui/Console.groovy");
  srcList.add("org/codehaus/groovy/runtime/GroovyCategorySupport.java");
  srcList.add("org/codehaus/groovy/runtime/ConvertedMap.java");
  xmlTool.add(srcList);
  MockOutputTool output=new MockOutputTool();
  xmlTool.renderToOutput(output,MOCK_DIR);
  String groovyCategorySupportDocument=output.getText(MOCK_DIR + "/org/codehaus/groovy/runtime/GroovyCategorySupport.html");
  assertTrue(groovyCategorySupportDocument != null && groovyCategorySupportDocument.indexOf("<method modifiers=\"public static \" returns=\"boolean\" name=\"hasCategoryInAnyThread\">") > 0);
  String categoryMethodDocument=output.getText(MOCK_DIR + "/org/codehaus/groovy/runtime/GroovyCategorySupport.CategoryMethodList.html");
  assertTrue(categoryMethodDocument != null && categoryMethodDocument.indexOf("<method modifiers=\"public \" returns=\"boolean\" name=\"add\">") > 0);
  String packageDocument=output.getText(MOCK_DIR + "/org/codehaus/groovy/runtime/packageDocStructuredData.xml");
  assertTrue("Failed to find 'packageDocStructuredData.xml' in generated output",packageDocument != null);
  assertTrue(packageDocument.indexOf("<class name=\"GroovyCategorySupport\" />") > 0);
  assertTrue(packageDocument.indexOf("<class name=\"GroovyCategorySupport.CategoryMethod\" />") > 0);
  String rootDocument=output.getText(MOCK_DIR + "/rootDocStructuredData.xml");
  assertTrue("Failed to find 'rootDocStructuredData.xml' in generated output",rootDocument != null);
  assertTrue(rootDocument.indexOf("<package name=\"org/codehaus/groovy/runtime\" />") > 0);
  assertTrue(rootDocument.indexOf("<class path=\"org/codehaus/groovy/runtime/GroovyCategorySupport\" name=\"GroovyCategorySupport\" />") > 0);
  assertTrue(rootDocument.indexOf("<class path=\"org/codehaus/groovy/runtime/GroovyCategorySupport.CategoryMethod\" name=\"GroovyCategorySupport.CategoryMethod\" />") > 0);
}
