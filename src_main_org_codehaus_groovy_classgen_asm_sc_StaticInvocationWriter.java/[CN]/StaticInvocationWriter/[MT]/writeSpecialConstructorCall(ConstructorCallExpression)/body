{
  MethodNode mn=call.getNodeMetaData(StaticTypesMarker.DIRECT_METHOD_CALL_TARGET);
  if (mn == null) {
    super.writeSpecialConstructorCall(call);
    return;
  }
  controller.getCompileStack().pushInSpecialConstructorCall();
  ConstructorNode cn;
  if (mn instanceof ConstructorNode) {
    cn=(ConstructorNode)mn;
  }
 else {
    cn=new ConstructorNode(mn.getModifiers(),mn.getParameters(),mn.getExceptions(),mn.getCode());
    cn.setDeclaringClass(mn.getDeclaringClass());
  }
  controller.getMethodVisitor().visitVarInsn(ALOAD,0);
  String ownerDescriptor=BytecodeHelper.getClassInternalName(cn.getDeclaringClass());
  TupleExpression args=makeArgumentList(call.getArguments());
  int before=controller.getOperandStack().getStackLength();
  loadArguments(args.getExpressions(),cn.getParameters());
  finnishConstructorCall(cn,ownerDescriptor,controller.getOperandStack().getStackLength() - before);
  controller.getOperandStack().remove(1);
  controller.getCompileStack().pop();
}
