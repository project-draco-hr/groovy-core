{
  ClassNode declaringClass=target.getDeclaringClass();
  if ((isPrivateBridgeMethodsCallAllowed(declaringClass,classNode) || isPrivateBridgeMethodsCallAllowed(classNode,declaringClass)) && declaringClass.getNodeMetaData(PRIVATE_BRIDGE_METHODS) != null && !declaringClass.equals(classNode)) {
    if (tryBridgeMethod(target,receiver,implicitThis,args)) {
      return true;
    }
 else     if (declaringClass != classNode) {
      controller.getSourceUnit().addError(new SyntaxException("Cannot call private method " + (target.isStatic() ? "static " : "") + declaringClass.toString(false)+ "#"+ target.getName()+ " from class "+ classNode.toString(false),receiver.getLineNumber(),receiver.getColumnNumber(),receiver.getLastLineNumber(),receiver.getLastColumnNumber()));
    }
  }
  if (declaringClass != classNode) {
    controller.getSourceUnit().addError(new SyntaxException("Cannot call private method " + (target.isStatic() ? "static " : "") + declaringClass.toString(false)+ "#"+ target.getName()+ " from class "+ classNode.toString(false),receiver.getLineNumber(),receiver.getColumnNumber(),receiver.getLastLineNumber(),receiver.getLastColumnNumber()));
  }
  return false;
}
