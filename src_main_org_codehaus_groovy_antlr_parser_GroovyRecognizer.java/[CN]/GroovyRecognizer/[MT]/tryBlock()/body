{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST tryBlock_AST=null;
  AST tmp204_AST=null;
  tmp204_AST=astFactory.create(LT(1));
  astFactory.makeASTRoot(currentAST,tmp204_AST);
  match(LITERAL_try);
  nlsWarn();
  compoundStatement();
  astFactory.addASTChild(currentAST,returnAST);
{
    _loop313:     do {
      if ((LA(1) == LITERAL_catch || LA(1) == NLS) && (LA(2) == LPAREN || LA(2) == LITERAL_catch) && (_tokenSet_113.member(LA(3)))) {
        nls();
        handler();
        astFactory.addASTChild(currentAST,returnAST);
      }
 else {
        break _loop313;
      }
    }
 while (true);
  }
{
    if ((LA(1) == LITERAL_finally || LA(1) == NLS) && (_tokenSet_114.member(LA(2))) && (_tokenSet_14.member(LA(3)))) {
      nls();
      finallyClause();
      astFactory.addASTChild(currentAST,returnAST);
    }
 else     if ((_tokenSet_12.member(LA(1))) && (_tokenSet_13.member(LA(2))) && (_tokenSet_8.member(LA(3)))) {
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
  tryBlock_AST=(AST)currentAST.root;
  returnAST=tryBlock_AST;
}
