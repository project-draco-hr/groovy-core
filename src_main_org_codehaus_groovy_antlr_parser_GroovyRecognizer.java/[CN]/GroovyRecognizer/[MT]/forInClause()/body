{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST forInClause_AST=null;
  Token i=null;
  AST i_AST=null;
{
    boolean synPredMatched282=false;
    if (((_tokenSet_15.member(LA(1))) && (_tokenSet_86.member(LA(2))))) {
      int _m282=mark();
      synPredMatched282=true;
      inputState.guessing++;
      try {
{
          declarationStart();
        }
      }
 catch (      RecognitionException pe) {
        synPredMatched282=false;
      }
      rewind(_m282);
      inputState.guessing--;
    }
    if (synPredMatched282) {
      singleDeclarationNoInit();
      astFactory.addASTChild(currentAST,returnAST);
    }
 else     if ((LA(1) == IDENT) && (LA(2) == LITERAL_in)) {
      AST tmp207_AST=null;
      tmp207_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp207_AST);
      match(IDENT);
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
  i=LT(1);
  i_AST=astFactory.create(i);
  astFactory.makeASTRoot(currentAST,i_AST);
  match(LITERAL_in);
  if (inputState.guessing == 0) {
    i_AST.setType(FOR_IN_ITERABLE);
  }
  shiftExpression();
  astFactory.addASTChild(currentAST,returnAST);
  forInClause_AST=(AST)currentAST.root;
  returnAST=forInClause_AST;
}
