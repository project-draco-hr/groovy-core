{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST singleDeclarationNoInit_AST=null;
  AST m_AST=null;
  AST t_AST=null;
  AST v_AST=null;
  AST t2_AST=null;
  AST v2_AST=null;
switch (LA(1)) {
case FINAL:
case ABSTRACT:
case STRICTFP:
case LITERAL_static:
case LITERAL_def:
case AT:
case LITERAL_private:
case LITERAL_public:
case LITERAL_protected:
case LITERAL_transient:
case LITERAL_native:
case LITERAL_threadsafe:
case LITERAL_synchronized:
case LITERAL_volatile:
{
      modifiers();
      if (inputState.guessing == 0) {
        m_AST=(AST)returnAST;
      }
{
        if ((_tokenSet_25.member(LA(1))) && (_tokenSet_29.member(LA(2)))) {
          typeSpec(false);
          if (inputState.guessing == 0) {
            t_AST=(AST)returnAST;
          }
        }
 else         if ((LA(1) == IDENT) && (_tokenSet_30.member(LA(2)))) {
        }
 else {
          throw new NoViableAltException(LT(1),getFilename());
        }
      }
      singleVariable(m_AST,t_AST);
      if (inputState.guessing == 0) {
        v_AST=(AST)returnAST;
      }
      if (inputState.guessing == 0) {
        singleDeclarationNoInit_AST=(AST)currentAST.root;
        singleDeclarationNoInit_AST=v_AST;
        currentAST.root=singleDeclarationNoInit_AST;
        currentAST.child=singleDeclarationNoInit_AST != null && singleDeclarationNoInit_AST.getFirstChild() != null ? singleDeclarationNoInit_AST.getFirstChild() : singleDeclarationNoInit_AST;
        currentAST.advanceChildToEnd();
      }
      break;
    }
case IDENT:
case LITERAL_void:
case LITERAL_boolean:
case LITERAL_byte:
case LITERAL_char:
case LITERAL_short:
case LITERAL_int:
case LITERAL_float:
case LITERAL_long:
case LITERAL_double:
case LITERAL_any:
{
    typeSpec(false);
    if (inputState.guessing == 0) {
      t2_AST=(AST)returnAST;
    }
    singleVariable(null,t2_AST);
    if (inputState.guessing == 0) {
      v2_AST=(AST)returnAST;
    }
    if (inputState.guessing == 0) {
      singleDeclarationNoInit_AST=(AST)currentAST.root;
      singleDeclarationNoInit_AST=v2_AST;
      currentAST.root=singleDeclarationNoInit_AST;
      currentAST.child=singleDeclarationNoInit_AST != null && singleDeclarationNoInit_AST.getFirstChild() != null ? singleDeclarationNoInit_AST.getFirstChild() : singleDeclarationNoInit_AST;
      currentAST.advanceChildToEnd();
    }
    break;
  }
default :
{
  throw new NoViableAltException(LT(1),getFilename());
}
}
returnAST=singleDeclarationNoInit_AST;
}
