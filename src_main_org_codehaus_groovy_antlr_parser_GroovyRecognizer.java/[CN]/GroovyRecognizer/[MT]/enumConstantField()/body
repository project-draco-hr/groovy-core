{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST enumConstantField_AST=null;
  AST mods_AST=null;
  AST td_AST=null;
  AST tp_AST=null;
  AST t_AST=null;
  AST param_AST=null;
  AST tc_AST=null;
  AST s2_AST=null;
  AST v_AST=null;
  AST s4_AST=null;
switch (LA(1)) {
case FINAL:
case ABSTRACT:
case STRICTFP:
case LITERAL_static:
case AT:
case LITERAL_private:
case LITERAL_public:
case LITERAL_protected:
case LITERAL_transient:
case LITERAL_native:
case LITERAL_threadsafe:
case LITERAL_synchronized:
case LITERAL_volatile:
{
      modifiers();
      mods_AST=(AST)returnAST;
{
switch (LA(1)) {
case AT:
case LITERAL_class:
case LITERAL_interface:
case LITERAL_enum:
{
            typeDefinitionInternal(mods_AST);
            td_AST=(AST)returnAST;
            if (inputState.guessing == 0) {
              enumConstantField_AST=(AST)currentAST.root;
              enumConstantField_AST=td_AST;
              currentAST.root=enumConstantField_AST;
              currentAST.child=enumConstantField_AST != null && enumConstantField_AST.getFirstChild() != null ? enumConstantField_AST.getFirstChild() : enumConstantField_AST;
              currentAST.advanceChildToEnd();
            }
            break;
          }
case IDENT:
case LT:
case LITERAL_void:
case LITERAL_boolean:
case LITERAL_byte:
case LITERAL_char:
case LITERAL_short:
case LITERAL_int:
case LITERAL_float:
case LITERAL_long:
case LITERAL_double:
case LITERAL_any:
{
{
switch (LA(1)) {
case LT:
{
                typeParameters();
                tp_AST=(AST)returnAST;
                break;
              }
case IDENT:
case LITERAL_void:
case LITERAL_boolean:
case LITERAL_byte:
case LITERAL_char:
case LITERAL_short:
case LITERAL_int:
case LITERAL_float:
case LITERAL_long:
case LITERAL_double:
case LITERAL_any:
{
              break;
            }
default :
{
            throw new NoViableAltException(LT(1),getFilename());
          }
      }
    }
    typeSpec(false);
    t_AST=(AST)returnAST;
{
      if ((LA(1) == IDENT) && (LA(2) == LPAREN) && (_tokenSet_71.member(LA(3)))) {
        AST tmp143_AST=null;
        tmp143_AST=astFactory.create(LT(1));
        match(IDENT);
        match(LPAREN);
        parameterDeclarationList();
        param_AST=(AST)returnAST;
        match(RPAREN);
{
switch (LA(1)) {
case LITERAL_throws:
{
              throwsClause();
              tc_AST=(AST)returnAST;
              break;
            }
case LCURLY:
case SEMI:
{
            break;
          }
default :
{
          throw new NoViableAltException(LT(1),getFilename());
        }
    }
  }
{
switch (LA(1)) {
case LCURLY:
{
        compoundStatement();
        s2_AST=(AST)returnAST;
        break;
      }
case SEMI:
{
      AST tmp146_AST=null;
      tmp146_AST=astFactory.create(LT(1));
      match(SEMI);
      break;
    }
default :
{
    throw new NoViableAltException(LT(1),getFilename());
  }
}
}
if (inputState.guessing == 0) {
enumConstantField_AST=(AST)currentAST.root;
enumConstantField_AST=(AST)astFactory.make((new ASTArray(8)).add(astFactory.create(METHOD_DEF,"METHOD_DEF")).add(mods_AST).add(tp_AST).add((AST)astFactory.make((new ASTArray(2)).add(astFactory.create(TYPE,"TYPE")).add(t_AST))).add(tmp143_AST).add(param_AST).add(tc_AST).add(s2_AST));
currentAST.root=enumConstantField_AST;
currentAST.child=enumConstantField_AST != null && enumConstantField_AST.getFirstChild() != null ? enumConstantField_AST.getFirstChild() : enumConstantField_AST;
currentAST.advanceChildToEnd();
}
}
 else if ((LA(1) == IDENT || LA(1) == STRING_LITERAL) && (_tokenSet_67.member(LA(2))) && (_tokenSet_68.member(LA(3)))) {
variableDefinitions(mods_AST,t_AST);
v_AST=(AST)returnAST;
AST tmp147_AST=null;
tmp147_AST=astFactory.create(LT(1));
match(SEMI);
if (inputState.guessing == 0) {
enumConstantField_AST=(AST)currentAST.root;
enumConstantField_AST=v_AST;
currentAST.root=enumConstantField_AST;
currentAST.child=enumConstantField_AST != null && enumConstantField_AST.getFirstChild() != null ? enumConstantField_AST.getFirstChild() : enumConstantField_AST;
currentAST.advanceChildToEnd();
}
}
 else {
throw new NoViableAltException(LT(1),getFilename());
}
}
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
break;
}
case LCURLY:
{
compoundStatement();
s4_AST=(AST)returnAST;
if (inputState.guessing == 0) {
enumConstantField_AST=(AST)currentAST.root;
enumConstantField_AST=(AST)astFactory.make((new ASTArray(2)).add(astFactory.create(INSTANCE_INIT,"INSTANCE_INIT")).add(s4_AST));
currentAST.root=enumConstantField_AST;
currentAST.child=enumConstantField_AST != null && enumConstantField_AST.getFirstChild() != null ? enumConstantField_AST.getFirstChild() : enumConstantField_AST;
currentAST.advanceChildToEnd();
}
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
returnAST=enumConstantField_AST;
}
