{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST shiftExpression_AST=null;
  additiveExpression();
  astFactory.addASTChild(currentAST,returnAST);
{
    _loop396:     do {
      if ((_tokenSet_105.member(LA(1)))) {
{
switch (LA(1)) {
case SR:
case BSR:
case SL:
{
{
switch (LA(1)) {
case SL:
{
                    AST tmp189_AST=null;
                    tmp189_AST=astFactory.create(LT(1));
                    astFactory.makeASTRoot(currentAST,tmp189_AST);
                    match(SL);
                    break;
                  }
case SR:
{
                  AST tmp190_AST=null;
                  tmp190_AST=astFactory.create(LT(1));
                  astFactory.makeASTRoot(currentAST,tmp190_AST);
                  match(SR);
                  break;
                }
case BSR:
{
                AST tmp191_AST=null;
                tmp191_AST=astFactory.create(LT(1));
                astFactory.makeASTRoot(currentAST,tmp191_AST);
                match(BSR);
                break;
              }
default :
{
              throw new NoViableAltException(LT(1),getFilename());
            }
        }
      }
      break;
    }
case RANGE_INCLUSIVE:
{
    AST tmp192_AST=null;
    tmp192_AST=astFactory.create(LT(1));
    astFactory.makeASTRoot(currentAST,tmp192_AST);
    match(RANGE_INCLUSIVE);
    break;
  }
case TRIPLE_DOT:
{
  AST tmp193_AST=null;
  tmp193_AST=astFactory.create(LT(1));
  astFactory.makeASTRoot(currentAST,tmp193_AST);
  match(TRIPLE_DOT);
  if (inputState.guessing == 0) {
    tmp193_AST.setType(RANGE_EXCLUSIVE);
  }
  break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
nls();
additiveExpression();
astFactory.addASTChild(currentAST,returnAST);
}
 else {
break _loop396;
}
}
 while (true);
}
shiftExpression_AST=(AST)currentAST.root;
returnAST=shiftExpression_AST;
}
