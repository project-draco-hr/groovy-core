{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST enumDefinition_AST=null;
  AST ic_AST=null;
  AST eb_AST=null;
  match(LITERAL_enum);
  AST tmp44_AST=null;
  if (inputState.guessing == 0) {
    tmp44_AST=astFactory.create(LT(1));
  }
  match(IDENT);
  implementsClause();
  if (inputState.guessing == 0) {
    ic_AST=(AST)returnAST;
  }
  enumBlock();
  if (inputState.guessing == 0) {
    eb_AST=(AST)returnAST;
  }
  if (inputState.guessing == 0) {
    enumDefinition_AST=(AST)currentAST.root;
    enumDefinition_AST=(AST)astFactory.make((new ASTArray(5)).add(astFactory.create(ENUM_DEF,"ENUM_DEF")).add(modifiers).add(tmp44_AST).add(ic_AST).add(eb_AST));
    currentAST.root=enumDefinition_AST;
    currentAST.child=enumDefinition_AST != null && enumDefinition_AST.getFirstChild() != null ? enumDefinition_AST.getFirstChild() : enumDefinition_AST;
    currentAST.advanceChildToEnd();
  }
  returnAST=enumDefinition_AST;
}
