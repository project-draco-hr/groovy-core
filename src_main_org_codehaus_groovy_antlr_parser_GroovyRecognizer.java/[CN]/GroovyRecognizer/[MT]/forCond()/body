{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST forCond_AST=null;
{
switch (LA(1)) {
case IDENT:
case LBRACK:
case LPAREN:
case LITERAL_super:
case LCURLY:
case LITERAL_this:
case STRING_LITERAL:
case PLUS:
case MINUS:
case INC:
case DEC:
case BNOT:
case LNOT:
case STRING_CTOR_START:
case LITERAL_new:
case LITERAL_true:
case LITERAL_false:
case LITERAL_null:
case NUM_INT:
case NUM_FLOAT:
case NUM_LONG:
case NUM_DOUBLE:
case NUM_BIG_INT:
case NUM_BIG_DECIMAL:
{
        expression();
        astFactory.addASTChild(currentAST,returnAST);
        break;
      }
case SEMI:
{
      break;
    }
default :
{
    throw new NoViableAltException(LT(1),getFilename());
  }
}
}
if (inputState.guessing == 0) {
forCond_AST=(AST)currentAST.root;
forCond_AST=(AST)astFactory.make((new ASTArray(2)).add(astFactory.create(FOR_CONDITION,"FOR_CONDITION")).add(forCond_AST));
currentAST.root=forCond_AST;
currentAST.child=forCond_AST != null && forCond_AST.getFirstChild() != null ? forCond_AST.getFirstChild() : forCond_AST;
currentAST.advanceChildToEnd();
}
forCond_AST=(AST)currentAST.root;
returnAST=forCond_AST;
}
