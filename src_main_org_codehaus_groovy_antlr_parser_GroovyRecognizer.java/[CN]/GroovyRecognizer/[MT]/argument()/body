{
  boolean hasLabel=false;
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST argument_AST=null;
  Token c=null;
  AST c_AST=null;
  Token sp=null;
  AST sp_AST=null;
{
    boolean synPredMatched456=false;
    if (((_tokenSet_123.member(LA(1))) && (_tokenSet_124.member(LA(2))) && (_tokenSet_99.member(LA(3))))) {
      int _m456=mark();
      synPredMatched456=true;
      inputState.guessing++;
      try {
{
          argumentLabelStart();
        }
      }
 catch (      RecognitionException pe) {
        synPredMatched456=false;
      }
      rewind(_m456);
      inputState.guessing--;
    }
    if (synPredMatched456) {
      argumentLabel();
      astFactory.addASTChild(currentAST,returnAST);
      c=LT(1);
      c_AST=astFactory.create(c);
      astFactory.makeASTRoot(currentAST,c_AST);
      match(COLON);
      if (inputState.guessing == 0) {
        c_AST.setType(LABELED_ARG);
      }
    }
 else     if ((LA(1) == STAR)) {
      sp=LT(1);
      sp_AST=astFactory.create(sp);
      astFactory.makeASTRoot(currentAST,sp_AST);
      match(STAR);
      if (inputState.guessing == 0) {
        sp_AST.setType(SPREAD_ARG);
      }
    }
 else     if ((_tokenSet_125.member(LA(1))) && (_tokenSet_67.member(LA(2))) && (_tokenSet_18.member(LA(3)))) {
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
  strictContextExpression();
  astFactory.addASTChild(currentAST,returnAST);
  argument_AST=(AST)currentAST.root;
  returnAST=argument_AST;
  return hasLabel;
}
