{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST importStatement_AST=null;
  Token i=null;
  AST i_AST=null;
  boolean isStatic=false;
  i=LT(1);
  i_AST=astFactory.create(i);
  astFactory.makeASTRoot(currentAST,i_AST);
  match(LITERAL_import);
  if (inputState.guessing == 0) {
    i_AST.setType(IMPORT);
  }
{
switch (LA(1)) {
case LITERAL_static:
{
        match(LITERAL_static);
        if (inputState.guessing == 0) {
          i_AST.setType(STATIC_IMPORT);
        }
        break;
      }
case IDENT:
{
      break;
    }
default :
{
    throw new NoViableAltException(LT(1),getFilename());
  }
}
}
identifierStar();
astFactory.addASTChild(currentAST,returnAST);
importStatement_AST=(AST)currentAST.root;
returnAST=importStatement_AST;
}
