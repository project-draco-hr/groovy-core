{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST suspiciousExpressionStatementStart_AST=null;
{
switch (LA(1)) {
case PLUS:
case MINUS:
{
{
switch (LA(1)) {
case PLUS:
{
              AST tmp196_AST=null;
              tmp196_AST=astFactory.create(LT(1));
              astFactory.addASTChild(currentAST,tmp196_AST);
              match(PLUS);
              break;
            }
case MINUS:
{
            AST tmp197_AST=null;
            tmp197_AST=astFactory.create(LT(1));
            astFactory.addASTChild(currentAST,tmp197_AST);
            match(MINUS);
            break;
          }
default :
{
          throw new NoViableAltException(LT(1),getFilename());
        }
    }
  }
  break;
}
case LBRACK:
case LPAREN:
case LCURLY:
{
{
switch (LA(1)) {
case LBRACK:
{
      AST tmp198_AST=null;
      tmp198_AST=astFactory.create(LT(1));
      astFactory.addASTChild(currentAST,tmp198_AST);
      match(LBRACK);
      break;
    }
case LPAREN:
{
    AST tmp199_AST=null;
    tmp199_AST=astFactory.create(LT(1));
    astFactory.addASTChild(currentAST,tmp199_AST);
    match(LPAREN);
    break;
  }
case LCURLY:
{
  AST tmp200_AST=null;
  tmp200_AST=astFactory.create(LT(1));
  astFactory.addASTChild(currentAST,tmp200_AST);
  match(LCURLY);
  break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
suspiciousExpressionStatementStart_AST=(AST)currentAST.root;
returnAST=suspiciousExpressionStatementStart_AST;
}
