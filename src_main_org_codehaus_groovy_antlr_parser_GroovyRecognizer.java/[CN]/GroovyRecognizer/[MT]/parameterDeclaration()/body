{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST parameterDeclaration_AST=null;
  AST pm_AST=null;
  AST t_AST=null;
  Token id=null;
  AST id_AST=null;
  AST exp_AST=null;
  boolean spreadParam=false;
  parameterModifiersOpt();
  if (inputState.guessing == 0) {
    pm_AST=(AST)returnAST;
  }
{
    if ((_tokenSet_25.member(LA(1))) && (_tokenSet_74.member(LA(2))) && (_tokenSet_75.member(LA(3)))) {
      typeSpec(false);
      if (inputState.guessing == 0) {
        t_AST=(AST)returnAST;
      }
    }
 else     if ((LA(1) == IDENT || LA(1) == TRIPLE_DOT) && (_tokenSet_76.member(LA(2))) && (_tokenSet_77.member(LA(3)))) {
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
{
switch (LA(1)) {
case TRIPLE_DOT:
{
        match(TRIPLE_DOT);
        if (inputState.guessing == 0) {
          spreadParam=true;
        }
        break;
      }
case IDENT:
{
      break;
    }
default :
{
    throw new NoViableAltException(LT(1),getFilename());
  }
}
}
id=LT(1);
if (inputState.guessing == 0) {
id_AST=astFactory.create(id);
}
match(IDENT);
{
switch (LA(1)) {
case ASSIGN:
{
  varInitializer();
  if (inputState.guessing == 0) {
    exp_AST=(AST)returnAST;
  }
  break;
}
case COMMA:
case RPAREN:
case NLS:
case CLOSURE_OP:
{
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
if (inputState.guessing == 0) {
parameterDeclaration_AST=(AST)currentAST.root;
if (spreadParam) {
parameterDeclaration_AST=(AST)astFactory.make((new ASTArray(5)).add(astFactory.create(VARIABLE_PARAMETER_DEF,"VARIABLE_PARAMETER_DEF")).add(pm_AST).add((AST)astFactory.make((new ASTArray(2)).add(astFactory.create(TYPE,"TYPE")).add(t_AST))).add(id_AST).add(exp_AST));
}
 else {
parameterDeclaration_AST=(AST)astFactory.make((new ASTArray(5)).add(astFactory.create(PARAMETER_DEF,"PARAMETER_DEF")).add(pm_AST).add((AST)astFactory.make((new ASTArray(2)).add(astFactory.create(TYPE,"TYPE")).add(t_AST))).add(id_AST).add(exp_AST));
}
currentAST.root=parameterDeclaration_AST;
currentAST.child=parameterDeclaration_AST != null && parameterDeclaration_AST.getFirstChild() != null ? parameterDeclaration_AST.getFirstChild() : parameterDeclaration_AST;
currentAST.advanceChildToEnd();
}
returnAST=parameterDeclaration_AST;
}
