{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST controlExpression_AST=null;
  AST head_AST=null;
  boolean zz;
  boolean synPredMatched964=false;
  if (((_tokenSet_15.member(LA(1))) && (_tokenSet_86.member(LA(2))) && (_tokenSet_119.member(LA(3))))) {
    int _m964=mark();
    synPredMatched964=true;
    inputState.guessing++;
    try {
{
        declarationStart();
      }
    }
 catch (    RecognitionException pe) {
      synPredMatched964=false;
    }
    rewind(_m964);
    inputState.guessing--;
  }
  if (synPredMatched964) {
    singleDeclaration();
    astFactory.addASTChild(currentAST,returnAST);
    controlExpression_AST=(AST)currentAST.root;
  }
 else   if ((_tokenSet_120.member(LA(1))) && (_tokenSet_121.member(LA(2))) && (_tokenSet_110.member(LA(3)))) {
    zz=pathExpression();
    head_AST=(AST)returnAST;
{
switch (LA(1)) {
case ASSIGN:
case INC:
case DEC:
case PLUS_ASSIGN:
case MINUS_ASSIGN:
case STAR_ASSIGN:
case DIV_ASSIGN:
case MOD_ASSIGN:
case SR_ASSIGN:
case BSR_ASSIGN:
case SL_ASSIGN:
case BAND_ASSIGN:
case BXOR_ASSIGN:
case BOR_ASSIGN:
case STAR_STAR_ASSIGN:
{
          assignmentTail(head_AST);
          astFactory.addASTChild(currentAST,returnAST);
          break;
        }
case RPAREN:
case COMMA:
case SEMI:
{
        if (inputState.guessing == 0) {
          controlExpression_AST=(AST)currentAST.root;
          controlExpression_AST=head_AST;
          currentAST.root=controlExpression_AST;
          currentAST.child=controlExpression_AST != null && controlExpression_AST.getFirstChild() != null ? controlExpression_AST.getFirstChild() : controlExpression_AST;
          currentAST.advanceChildToEnd();
        }
        break;
      }
default :
{
      throw new NoViableAltException(LT(1),getFilename());
    }
}
}
controlExpression_AST=(AST)currentAST.root;
}
 else if ((LA(1) == INC || LA(1) == DEC)) {
{
switch (LA(1)) {
case INC:
{
    AST tmp255_AST=null;
    tmp255_AST=astFactory.create(LT(1));
    astFactory.makeASTRoot(currentAST,tmp255_AST);
    match(INC);
    break;
  }
case DEC:
{
  AST tmp256_AST=null;
  tmp256_AST=astFactory.create(LT(1));
  astFactory.makeASTRoot(currentAST,tmp256_AST);
  match(DEC);
  break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
zz=pathExpression();
astFactory.addASTChild(currentAST,returnAST);
controlExpression_AST=(AST)currentAST.root;
}
 else {
throw new NoViableAltException(LT(1),getFilename());
}
returnAST=controlExpression_AST;
}
