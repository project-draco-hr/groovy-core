{
  boolean endBrackets=false;
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST pathExpression_AST=null;
  AST pe_AST=null;
  primaryExpression();
  if (inputState.guessing == 0) {
    pe_AST=(AST)returnAST;
  }
  endBrackets=pathExpressionTail(pe_AST);
  if (inputState.guessing == 0) {
    astFactory.addASTChild(currentAST,returnAST);
  }
  if (inputState.guessing == 0) {
    pathExpression_AST=(AST)currentAST.root;
  }
  returnAST=pathExpression_AST;
  return endBrackets;
}
