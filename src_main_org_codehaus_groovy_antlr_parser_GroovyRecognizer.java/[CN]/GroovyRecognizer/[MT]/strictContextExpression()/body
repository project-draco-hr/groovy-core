{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST strictContextExpression_AST=null;
  boolean synPredMatched438=false;
  if (((_tokenSet_12.member(LA(1))) && (_tokenSet_107.member(LA(2))) && (_tokenSet_119.member(LA(3))))) {
    int _m438=mark();
    synPredMatched438=true;
    inputState.guessing++;
    try {
{
        declarationStart();
      }
    }
 catch (    RecognitionException pe) {
      synPredMatched438=false;
    }
    rewind(_m438);
    inputState.guessing--;
  }
  if (synPredMatched438) {
    singleDeclaration();
    astFactory.addASTChild(currentAST,returnAST);
    strictContextExpression_AST=(AST)currentAST.root;
  }
 else   if ((_tokenSet_19.member(LA(1))) && (_tokenSet_67.member(LA(2))) && (_tokenSet_18.member(LA(3)))) {
    expression();
    astFactory.addASTChild(currentAST,returnAST);
    strictContextExpression_AST=(AST)currentAST.root;
  }
 else   if (((LA(1) >= LITERAL_void && LA(1) <= LITERAL_any)) && (_tokenSet_120.member(LA(2)))) {
    builtInType();
    astFactory.addASTChild(currentAST,returnAST);
    strictContextExpression_AST=(AST)currentAST.root;
  }
 else   if (((LA(1) >= LITERAL_return && LA(1) <= LITERAL_assert))) {
    branchStatement();
    astFactory.addASTChild(currentAST,returnAST);
    strictContextExpression_AST=(AST)currentAST.root;
  }
 else   if ((LA(1) == AT) && (LA(2) == IDENT) && (_tokenSet_121.member(LA(3)))) {
    annotation();
    astFactory.addASTChild(currentAST,returnAST);
    strictContextExpression_AST=(AST)currentAST.root;
  }
 else {
    throw new NoViableAltException(LT(1),getFilename());
  }
  returnAST=strictContextExpression_AST;
}
