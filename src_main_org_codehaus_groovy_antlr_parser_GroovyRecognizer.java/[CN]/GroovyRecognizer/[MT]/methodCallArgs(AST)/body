{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST methodCallArgs_AST=null;
  Token lp=null;
  AST lp_AST=null;
  AST cb_AST=null;
  boolean zz;
switch (LA(1)) {
case LPAREN:
{
      if (inputState.guessing == 0) {
        methodCallArgs_AST=(AST)currentAST.root;
        methodCallArgs_AST=callee;
        currentAST.root=methodCallArgs_AST;
        currentAST.child=methodCallArgs_AST != null && methodCallArgs_AST.getFirstChild() != null ? methodCallArgs_AST.getFirstChild() : methodCallArgs_AST;
        currentAST.advanceChildToEnd();
      }
      lp=LT(1);
      if (inputState.guessing == 0) {
        lp_AST=astFactory.create(lp);
        astFactory.makeASTRoot(currentAST,lp_AST);
      }
      match(LPAREN);
      if (inputState.guessing == 0) {
        lp_AST.setType(METHOD_CALL);
      }
      zz=argList();
      if (inputState.guessing == 0) {
        astFactory.addASTChild(currentAST,returnAST);
      }
      match(RPAREN);
{
        if ((LA(1) == LCURLY) && (_tokenSet_15.member(LA(2))) && (_tokenSet_16.member(LA(3)))) {
          appendedBlock();
          if (inputState.guessing == 0) {
            astFactory.addASTChild(currentAST,returnAST);
          }
        }
 else         if ((_tokenSet_111.member(LA(1))) && (_tokenSet_5.member(LA(2))) && (_tokenSet_5.member(LA(3)))) {
        }
 else {
          throw new NoViableAltException(LT(1),getFilename());
        }
      }
      if (inputState.guessing == 0) {
        methodCallArgs_AST=(AST)currentAST.root;
      }
      break;
    }
case LCURLY:
{
    if (inputState.guessing == 0) {
      methodCallArgs_AST=(AST)currentAST.root;
      methodCallArgs_AST=callee;
      currentAST.root=methodCallArgs_AST;
      currentAST.child=methodCallArgs_AST != null && methodCallArgs_AST.getFirstChild() != null ? methodCallArgs_AST.getFirstChild() : methodCallArgs_AST;
      currentAST.advanceChildToEnd();
    }
    appendedBlock();
    if (inputState.guessing == 0) {
      cb_AST=(AST)returnAST;
      astFactory.addASTChild(currentAST,returnAST);
    }
    if (inputState.guessing == 0) {
      methodCallArgs_AST=(AST)currentAST.root;
      AST lbrace=getASTFactory().dup(cb_AST);
      lbrace.setType(METHOD_CALL);
      methodCallArgs_AST=(AST)astFactory.make((new ASTArray(2)).add(lbrace).add(methodCallArgs_AST));
      currentAST.root=methodCallArgs_AST;
      currentAST.child=methodCallArgs_AST != null && methodCallArgs_AST.getFirstChild() != null ? methodCallArgs_AST.getFirstChild() : methodCallArgs_AST;
      currentAST.advanceChildToEnd();
    }
    if (inputState.guessing == 0) {
      methodCallArgs_AST=(AST)currentAST.root;
    }
    break;
  }
default :
{
  throw new NoViableAltException(LT(1),getFilename());
}
}
returnAST=methodCallArgs_AST;
}
