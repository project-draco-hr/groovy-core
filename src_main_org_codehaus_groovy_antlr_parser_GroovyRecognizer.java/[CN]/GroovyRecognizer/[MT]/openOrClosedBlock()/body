{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST openOrClosedBlock_AST=null;
  Token lc=null;
  AST lc_AST=null;
  AST cp_AST=null;
  lc=LT(1);
  if (inputState.guessing == 0) {
    lc_AST=astFactory.create(lc);
    astFactory.makeASTRoot(currentAST,lc_AST);
  }
  match(LCURLY);
  nls();
  closureParametersOpt(false);
  if (inputState.guessing == 0) {
    cp_AST=(AST)returnAST;
    astFactory.addASTChild(currentAST,returnAST);
  }
  if (inputState.guessing == 0) {
    if (cp_AST == null)     lc_AST.setType(SLIST);
 else     lc_AST.setType(CLOSED_BLOCK);
  }
  blockBody(EOF);
  if (inputState.guessing == 0) {
    astFactory.addASTChild(currentAST,returnAST);
  }
  match(RCURLY);
  if (inputState.guessing == 0) {
    openOrClosedBlock_AST=(AST)currentAST.root;
  }
  returnAST=openOrClosedBlock_AST;
}
