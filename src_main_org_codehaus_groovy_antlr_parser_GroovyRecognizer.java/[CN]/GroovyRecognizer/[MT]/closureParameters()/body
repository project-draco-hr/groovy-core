{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST closureParameters_AST=null;
switch (LA(1)) {
case LPAREN:
{
      match(LPAREN);
      nls();
      parameterDeclarationList();
      astFactory.addASTChild(currentAST,returnAST);
      nls();
      match(RPAREN);
      nls();
      match(BOR);
      closureParameters_AST=(AST)currentAST.root;
      break;
    }
case LOR:
{
    match(LOR);
    closureParameters_AST=(AST)currentAST.root;
    break;
  }
default :
boolean synPredMatched854=false;
if (((LA(1) == BOR) && (LA(2) == BOR || LA(2) == NLS) && (_tokenSet_97.member(LA(3))))) {
int _m854=mark();
synPredMatched854=true;
inputState.guessing++;
try {
{
    match(BOR);
    nls();
    match(BOR);
  }
}
 catch (RecognitionException pe) {
  synPredMatched854=false;
}
rewind(_m854);
inputState.guessing--;
}
if (synPredMatched854) {
match(BOR);
nls();
match(BOR);
closureParameters_AST=(AST)currentAST.root;
}
 else {
boolean synPredMatched857=false;
if (((LA(1) == BOR) && (_tokenSet_98.member(LA(2))) && (_tokenSet_99.member(LA(3))))) {
int _m857=mark();
synPredMatched857=true;
inputState.guessing++;
try {
{
    match(BOR);
    nls();
{
      if ((true)) {
        parameterDeclarationList();
      }
 else       if ((LA(1) == LPAREN)) {
        match(LPAREN);
      }
 else {
        throw new NoViableAltException(LT(1),getFilename());
      }
    }
  }
}
 catch (RecognitionException pe) {
  synPredMatched857=false;
}
rewind(_m857);
inputState.guessing--;
}
if (synPredMatched857) {
match(BOR);
nls();
{
switch (LA(1)) {
case FINAL:
case DEF:
case AT:
case IDENT:
case QUESTION:
case LITERAL_void:
case LITERAL_boolean:
case LITERAL_byte:
case LITERAL_char:
case LITERAL_short:
case LITERAL_int:
case LITERAL_float:
case LITERAL_long:
case LITERAL_double:
case LITERAL_any:
case STAR:
case BOR:
case NLS:
{
      parameterDeclarationList();
      astFactory.addASTChild(currentAST,returnAST);
      break;
    }
case LPAREN:
{
{
      match(LPAREN);
      nls();
      parameterDeclarationList();
      astFactory.addASTChild(currentAST,returnAST);
      nls();
      match(RPAREN);
    }
    break;
  }
default :
{
  throw new NoViableAltException(LT(1),getFilename());
}
}
}
nls();
match(BOR);
closureParameters_AST=(AST)currentAST.root;
}
 else if ((_tokenSet_100.member(LA(1))) && (_tokenSet_101.member(LA(2))) && (_tokenSet_88.member(LA(3)))) {
{
switch (LA(1)) {
case IDENT:
case QUESTION:
case STAR:
{
closureParameter();
astFactory.addASTChild(currentAST,returnAST);
{
  _loop862:   do {
    if ((LA(1) == COMMA)) {
      match(COMMA);
      nls();
      closureParameter();
      astFactory.addASTChild(currentAST,returnAST);
    }
 else {
      break _loop862;
    }
  }
 while (true);
}
nls();
break;
}
case BOR:
{
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
}
match(BOR);
if (inputState.guessing == 0) {
closureParameters_AST=(AST)currentAST.root;
closureParameters_AST=(AST)astFactory.make((new ASTArray(2)).add(astFactory.create(PARAMETERS,"PARAMETERS")).add(closureParameters_AST));
currentAST.root=closureParameters_AST;
currentAST.child=closureParameters_AST != null && closureParameters_AST.getFirstChild() != null ? closureParameters_AST.getFirstChild() : closureParameters_AST;
currentAST.advanceChildToEnd();
}
closureParameters_AST=(AST)currentAST.root;
}
 else {
throw new NoViableAltException(LT(1),getFilename());
}
}
}
returnAST=closureParameters_AST;
}
