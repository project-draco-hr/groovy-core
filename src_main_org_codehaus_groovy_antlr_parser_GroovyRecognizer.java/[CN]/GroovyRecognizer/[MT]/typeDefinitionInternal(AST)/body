{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST typeDefinitionInternal_AST=null;
  AST cd_AST=null;
  AST id_AST=null;
  AST ed_AST=null;
  AST ad_AST=null;
switch (LA(1)) {
case LITERAL_class:
{
      classDefinition(mods);
      cd_AST=(AST)returnAST;
      astFactory.addASTChild(currentAST,returnAST);
      if (inputState.guessing == 0) {
        typeDefinitionInternal_AST=(AST)currentAST.root;
        typeDefinitionInternal_AST=cd_AST;
        currentAST.root=typeDefinitionInternal_AST;
        currentAST.child=typeDefinitionInternal_AST != null && typeDefinitionInternal_AST.getFirstChild() != null ? typeDefinitionInternal_AST.getFirstChild() : typeDefinitionInternal_AST;
        currentAST.advanceChildToEnd();
      }
      typeDefinitionInternal_AST=(AST)currentAST.root;
      break;
    }
case LITERAL_interface:
{
    interfaceDefinition(mods);
    id_AST=(AST)returnAST;
    astFactory.addASTChild(currentAST,returnAST);
    if (inputState.guessing == 0) {
      typeDefinitionInternal_AST=(AST)currentAST.root;
      typeDefinitionInternal_AST=id_AST;
      currentAST.root=typeDefinitionInternal_AST;
      currentAST.child=typeDefinitionInternal_AST != null && typeDefinitionInternal_AST.getFirstChild() != null ? typeDefinitionInternal_AST.getFirstChild() : typeDefinitionInternal_AST;
      currentAST.advanceChildToEnd();
    }
    typeDefinitionInternal_AST=(AST)currentAST.root;
    break;
  }
case LITERAL_enum:
{
  enumDefinition(mods);
  ed_AST=(AST)returnAST;
  astFactory.addASTChild(currentAST,returnAST);
  if (inputState.guessing == 0) {
    typeDefinitionInternal_AST=(AST)currentAST.root;
    typeDefinitionInternal_AST=ed_AST;
    currentAST.root=typeDefinitionInternal_AST;
    currentAST.child=typeDefinitionInternal_AST != null && typeDefinitionInternal_AST.getFirstChild() != null ? typeDefinitionInternal_AST.getFirstChild() : typeDefinitionInternal_AST;
    currentAST.advanceChildToEnd();
  }
  typeDefinitionInternal_AST=(AST)currentAST.root;
  break;
}
case AT:
{
annotationDefinition(mods);
ad_AST=(AST)returnAST;
astFactory.addASTChild(currentAST,returnAST);
if (inputState.guessing == 0) {
  typeDefinitionInternal_AST=(AST)currentAST.root;
  typeDefinitionInternal_AST=ad_AST;
  currentAST.root=typeDefinitionInternal_AST;
  currentAST.child=typeDefinitionInternal_AST != null && typeDefinitionInternal_AST.getFirstChild() != null ? typeDefinitionInternal_AST.getFirstChild() : typeDefinitionInternal_AST;
  currentAST.advanceChildToEnd();
}
typeDefinitionInternal_AST=(AST)currentAST.root;
break;
}
default :
{
throw new NoViableAltException(LT(1),getFilename());
}
}
returnAST=typeDefinitionInternal_AST;
}
