{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST builtInTypeArraySpec_AST=null;
  AST t_AST=null;
  AST ata_AST=null;
  builtInType();
  t_AST=(AST)returnAST;
  astFactory.addASTChild(currentAST,returnAST);
{
    if ((LA(1) == LBRACK) && (_tokenSet_43.member(LA(2))) && (_tokenSet_44.member(LA(3)))) {
      arrayOrTypeArgs(t_AST);
      ata_AST=(AST)returnAST;
      astFactory.addASTChild(currentAST,returnAST);
    }
 else     if ((_tokenSet_39.member(LA(1))) && (_tokenSet_42.member(LA(2))) && (_tokenSet_8.member(LA(3)))) {
    }
 else {
      throw new NoViableAltException(LT(1),getFilename());
    }
  }
  if (inputState.guessing == 0) {
    builtInTypeArraySpec_AST=(AST)currentAST.root;
    if (ata_AST != null)     builtInTypeArraySpec_AST=ata_AST;
    if (addImagNode) {
      builtInTypeArraySpec_AST=(AST)astFactory.make((new ASTArray(2)).add(astFactory.create(TYPE,"TYPE")).add(builtInTypeArraySpec_AST));
    }
    currentAST.root=builtInTypeArraySpec_AST;
    currentAST.child=builtInTypeArraySpec_AST != null && builtInTypeArraySpec_AST.getFirstChild() != null ? builtInTypeArraySpec_AST.getFirstChild() : builtInTypeArraySpec_AST;
    currentAST.advanceChildToEnd();
  }
  builtInTypeArraySpec_AST=(AST)currentAST.root;
  returnAST=builtInTypeArraySpec_AST;
}
