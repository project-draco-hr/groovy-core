{
  returnAST=null;
  ASTPair currentAST=new ASTPair();
  AST regexExpression_AST=null;
  equalityExpression();
  if (inputState.guessing == 0) {
    astFactory.addASTChild(currentAST,returnAST);
  }
{
    _loop382:     do {
      if ((LA(1) == REGEX_FIND || LA(1) == REGEX_MATCH)) {
{
switch (LA(1)) {
case REGEX_FIND:
{
              AST tmp285_AST=null;
              if (inputState.guessing == 0) {
                tmp285_AST=astFactory.create(LT(1));
                astFactory.makeASTRoot(currentAST,tmp285_AST);
              }
              match(REGEX_FIND);
              break;
            }
case REGEX_MATCH:
{
            AST tmp286_AST=null;
            if (inputState.guessing == 0) {
              tmp286_AST=astFactory.create(LT(1));
              astFactory.makeASTRoot(currentAST,tmp286_AST);
            }
            match(REGEX_MATCH);
            break;
          }
default :
{
          throw new NoViableAltException(LT(1),getFilename());
        }
    }
  }
  nls();
  equalityExpression();
  if (inputState.guessing == 0) {
    astFactory.addASTChild(currentAST,returnAST);
  }
}
 else {
  break _loop382;
}
}
 while (true);
}
if (inputState.guessing == 0) {
regexExpression_AST=(AST)currentAST.root;
}
returnAST=regexExpression_AST;
}
