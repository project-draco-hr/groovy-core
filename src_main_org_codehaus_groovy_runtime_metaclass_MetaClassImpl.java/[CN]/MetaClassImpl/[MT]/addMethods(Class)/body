{
  Map methodIndex=(Map)classMethodIndex.get(theClass);
  if (methodIndex == null) {
    methodIndex=new HashMap();
    classMethodIndex.put(theClass,methodIndex);
  }
  Method[] methodArray=(Method[])AccessController.doPrivileged(new PrivilegedAction(){
    public Object run(){
      return theClass.getDeclaredMethods();
    }
  }
);
  for (int i=0; i < methodArray.length; i++) {
    Method reflectionMethod=methodArray[i];
    if (reflectionMethod.getName().indexOf('+') >= 0) {
      continue;
    }
    MetaMethod method=createMetaMethod(reflectionMethod);
    addMetaMethod(method);
  }
  List methods=((MetaClassRegistryImpl)registry).getInstanceMethods();
  for (Iterator iter=methods.iterator(); iter.hasNext(); ) {
    Method element=(Method)iter.next();
    if (element.getParameterTypes()[0] != theClass)     continue;
    addNewInstanceMethod(element);
  }
  methods=((MetaClassRegistryImpl)registry).getStaticMethods();
  for (Iterator iter=methods.iterator(); iter.hasNext(); ) {
    Method element=(Method)iter.next();
    if (element.getParameterTypes()[0] != theClass)     continue;
    addNewStaticMethod(element);
  }
}
