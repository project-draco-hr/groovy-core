{
  String filename=name.replace('.','/') + ".groovy";
  String[] paths=getClassPath();
  File classnameAsFile=new File(filename);
  String classname=classnameAsFile.getName();
  String pkg=classnameAsFile.getParent();
  String pkgdir;
  for (int i=0; i < paths.length; i++) {
    String pathName=paths[i];
    File path=new File(pathName);
    if (path.exists()) {
      if (path.isDirectory()) {
        File nocasefile=new File(path,filename);
        if (!nocasefile.exists())         continue;
        if (pkg == null)         pkgdir=pathName;
 else         pkgdir=pathName + "/" + pkg;
        File pkgdirF=new File(pkgdir);
        if (pkgdirF.exists() && pkgdirF.isDirectory()) {
          File files[]=pkgdirF.listFiles();
          for (int j=0; j < files.length; j++) {
            if (files[j].getName().equals(classname)) {
              try {
                return parseClass(files[j]);
              }
 catch (              CompilationFailedException e) {
                e.printStackTrace();
                throw new ClassNotFoundException("Syntax error in groovy file: " + files[j].getAbsolutePath(),e);
              }
catch (              IOException e) {
                e.printStackTrace();
                throw new ClassNotFoundException("Error reading groovy file: " + files[j].getAbsolutePath(),e);
              }
            }
          }
        }
      }
 else {
        try {
          JarFile jarFile=new JarFile(path);
          JarEntry entry=jarFile.getJarEntry(filename);
          if (entry != null) {
            byte[] bytes=extractBytes(jarFile,entry);
            Certificate[] certs=entry.getCertificates();
            try {
              return parseClass(new GroovyCodeSource(new ByteArrayInputStream(bytes),filename,path,certs));
            }
 catch (            CompilationFailedException e1) {
              e1.printStackTrace();
              throw new ClassNotFoundException("Syntax error in groovy file: " + filename,e1);
            }
catch (            IOException e1) {
              e1.printStackTrace();
              throw new ClassNotFoundException("Error reading groovy file: " + filename,e1);
            }
          }
        }
 catch (        IOException e) {
        }
      }
    }
  }
  throw new ClassNotFoundException(name);
}
