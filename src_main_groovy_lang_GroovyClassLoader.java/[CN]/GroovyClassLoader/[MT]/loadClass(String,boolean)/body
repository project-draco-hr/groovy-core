{
  SecurityManager sm=System.getSecurityManager();
  if (sm != null) {
    String className=name.replace('/','.');
    int i=className.lastIndexOf('.');
    if (i != -1) {
      sm.checkPackageAccess(className.substring(0,i));
    }
  }
  boolean loadGroovyFile=false;
  Class cls=null;
  ClassNotFoundException last=null;
  try {
    cls=super.loadClass(name,resolve);
    if (getTimeStamp(cls) < Long.MAX_VALUE) {
      Class[] inters=cls.getInterfaces();
      boolean isGroovyObject=false;
      for (int i=0; i < inters.length; i++) {
        if (inters[i].getName().equals(GroovyObject.class.getName())) {
          loadGroovyFile=true;
          break;
        }
      }
    }
  }
 catch (  ClassNotFoundException cnfe) {
    last=cnfe;
    loadGroovyFile=true;
  }
  if (loadGroovyFile) {
    try {
      File source=(File)AccessController.doPrivileged(new PrivilegedAction(){
        public Object run(){
          return getSourceFile(name);
        }
      }
);
      if (source != null) {
        if ((cls != null && isSourceNewer(source,cls)) || (cls == null)) {
          cls=parseClass(source);
        }
      }
    }
 catch (    Exception e) {
synchronized (cache) {
        cache.put(name,NOT_RESOLVED.class);
      }
      throw new ClassNotFoundException("Failed to parse groovy file: " + name,e);
    }
  }
  if (cls == null)   throw last;
  return cls;
}
