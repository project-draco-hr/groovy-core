{
  CompileStack compileStack=controller.getCompileStack();
  MethodVisitor mv=controller.getMethodVisitor();
  ClassNode classNode=controller.getClassNode();
  AsmClassGenerator acg=controller.getAcg();
  if (!compileStack.containsVariable(name) && compileStack.getScope().isReferencedClassVariable(name)) {
    acg.visitFieldExpression(new FieldExpression(classNode.getDeclaredField(name)));
  }
 else {
    BytecodeVariable v=compileStack.getVariable(name,!classNodeUsesReferences(controller.getClassNode()));
    if (v == null) {
      FieldNode field=classNode.getDeclaredField(name);
      mv.visitVarInsn(ALOAD,0);
      mv.visitFieldInsn(GETFIELD,controller.getInternalClassName(),name,BytecodeHelper.getTypeDescription(field.getType()));
    }
 else {
      mv.visitVarInsn(ALOAD,v.getIndex());
    }
    controller.getOperandStack().push(ClassHelper.REFERENCE_TYPE);
  }
}
