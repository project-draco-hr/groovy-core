{
  if (ci.handle == null)   return;
  MethodHandle fallback=makeFallBack(ci.callSite,ci.sender,ci.methodName,ci.targetType,ci.safeNavigation);
  MethodHandle test;
  if (receiver == null) {
    test=IS_NULL.asType(MethodType.methodType(boolean.class,ci.targetType.parameterType(1)));
    test=MethodHandles.dropArguments(test,0,ci.targetType.parameterType(0));
  }
 else   if (receiver instanceof GroovyObject) {
    GroovyObject go=(GroovyObject)receiver;
    MetaClassImpl mc=(MetaClassImpl)go.getMetaClass();
    test=SAME_MC.bindTo(mc);
    test=test.asType(MethodType.methodType(boolean.class,ci.targetType.parameterType(1)));
    test=MethodHandles.dropArguments(test,0,ci.targetType.parameterType(0));
  }
 else {
    ConstantMetaClassVersioning mcv=DefaultMetaClassInfo.getCurrentConstantMetaClassVersioning();
    test=VALID_MC_VERSION.bindTo(mcv);
    ci.handle=MethodHandles.guardWithTest(test,ci.handle,fallback);
    test=IS_NOT_NULL.asType(MethodType.methodType(boolean.class,ci.targetType.parameterType(1)));
    test=MethodHandles.dropArguments(test,0,ci.targetType.parameterType(0));
  }
  ci.handle=MethodHandles.guardWithTest(test,ci.handle,fallback);
}
