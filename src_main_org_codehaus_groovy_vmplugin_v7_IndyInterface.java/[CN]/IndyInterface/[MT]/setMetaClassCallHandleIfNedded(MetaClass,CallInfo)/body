{
  if (ci.handle != null)   return;
  try {
    ci.useMetaClass=true;
    Object receiver=ci.args[0];
    if (receiver instanceof Class) {
      ci.handle=LOOKUP.findVirtual(mc.getClass(),"invokeStaticMethod",MethodType.methodType(Object.class,Object.class,String.class,Object[].class));
      ci.handle=ci.handle.bindTo(mc);
    }
 else {
      boolean useShortForm=mc instanceof AdaptingMetaClass;
      if (useShortForm) {
        ci.handle=LOOKUP.findVirtual(MetaObjectProtocol.class,"invokeMethod",MethodType.methodType(Object.class,Object.class,String.class,Object[].class));
      }
 else {
        ci.handle=LOOKUP.findVirtual(MetaClass.class,"invokeMethod",INVOKE_METHOD_SIGNATURE);
        ci.handle=MethodHandles.insertArguments(ci.handle,ci.handle.type().parameterCount() - 2,false,true);
      }
      ci.handle=ci.handle.bindTo(mc);
      if (!useShortForm) {
        ci.handle=ci.handle.bindTo(ci.methodSelectionBase);
      }
      if (receiver instanceof GroovyObject) {
        ci.handle=MethodHandles.catchException(ci.handle,MissingMethodException.class,GROOVY_OBJECT_INVOKER);
      }
    }
    ci.handle=MethodHandles.insertArguments(ci.handle,1,ci.methodName);
    ci.handle=ci.handle.asCollector(Object[].class,ci.targetType.parameterCount() - 1);
  }
 catch (  Exception e) {
    throw new GroovyBugError(e);
  }
}
