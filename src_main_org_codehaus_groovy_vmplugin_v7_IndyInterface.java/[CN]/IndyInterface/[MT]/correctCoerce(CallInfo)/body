{
  if (ci.useMetaClass)   return;
  Class[] parameters=ci.handle.type().parameterArray();
  for (int i=1; i < ci.args.length; i++) {
    Object arg=ci.args[i];
    if (arg == null)     continue;
    Class got=arg.getClass();
    if (arg instanceof GString && parameters[i] == String.class) {
      ci.handle=MethodHandles.filterArguments(ci.handle,i,TO_STRING);
    }
 else     if (parameters[i] == Byte.class && got != Byte.class) {
      ci.handle=MethodHandles.filterArguments(ci.handle,i,TO_BYTE);
    }
 else     if (parameters[i] == BigInteger.class && got != BigInteger.class) {
      ci.handle=MethodHandles.filterArguments(ci.handle,i,TO_BIGINT);
    }
  }
}
