{
  ClassNode classNode=new ClassNode(Type.makeType("Foo"),ACC_PUBLIC,Type.OBJECT_TYPE);
  classNode.addConstructor(new ConstructorNode(ACC_PUBLIC,null));
  Parameter[] parameters={new Parameter(Type.OBJECT_TYPE,"coll1"),new Parameter(Type.OBJECT_TYPE,"coll2"),new Parameter(Type.OBJECT_TYPE,"coll3")};
  BlockStatement statement=new BlockStatement();
  statement.addStatement(createPrintlnStatement(new VariableExpression("coll1")));
  statement.addStatement(createPrintlnStatement(new VariableExpression("coll2")));
  statement.addStatement(createPrintlnStatement(new VariableExpression("coll3")));
  classNode.addMethod(new MethodNode("manyParamDemo",ACC_PUBLIC,Type.VOID_TYPE,parameters,statement));
  Class fooClass=loadClass(classNode);
  assertTrue("Loaded a new class",fooClass != null);
  Object bean=fooClass.newInstance();
  assertTrue("Managed to create bean",bean != null);
  System.out.println("################ Now about to invoke a method with many parameters");
  Object[] array={new Integer(1000 * 1000),"foo-","bar~"};
  try {
    InvokerHelper.invokeMethod(bean,"manyParamDemo",array);
  }
 catch (  InvokerInvocationException e) {
    System.out.println("Caught: " + e.getCause());
    e.getCause().printStackTrace();
    fail("Should not have thrown an exception");
  }
  System.out.println("################ Done");
}
