{
  if (!isSpreadable(receiver))   return getFieldOnSuper(senderClass,receiver,messageName);
  if (receiver instanceof Iterator) {
    return new TransformIterator((Iterator)receiver,null,new TransformIterator.OneParamTransformer(){
      public Object transform(      Object object,      TransformIterator iter) throws Throwable {
        return getFieldOnSuper(senderClass,object,messageName);
      }
    }
);
  }
 else {
    List answer=new ArrayList();
    for (Iterator it=InvokerHelper.asIterator(receiver); it.hasNext(); ) {
      answer.add(getFieldOnSuper(senderClass,it.next(),messageName));
    }
    return answer;
  }
}
