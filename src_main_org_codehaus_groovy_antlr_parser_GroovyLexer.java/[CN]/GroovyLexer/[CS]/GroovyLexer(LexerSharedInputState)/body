{
  super(state);
  caseSensitiveLiterals=true;
  setCaseSensitive(true);
  literals=new Hashtable();
  literals.put(new ANTLRHashString("byte",this),new Integer(103));
  literals.put(new ANTLRHashString("public",this),new Integer(114));
  literals.put(new ANTLRHashString("case",this),new Integer(149));
  literals.put(new ANTLRHashString("short",this),new Integer(105));
  literals.put(new ANTLRHashString("break",this),new Integer(143));
  literals.put(new ANTLRHashString("while",this),new Integer(137));
  literals.put(new ANTLRHashString("new",this),new Integer(193));
  literals.put(new ANTLRHashString("instanceof",this),new Integer(177));
  literals.put(new ANTLRHashString("implements",this),new Integer(127));
  literals.put(new ANTLRHashString("synchronized",this),new Integer(119));
  literals.put(new ANTLRHashString("const",this),new Integer(40));
  literals.put(new ANTLRHashString("float",this),new Integer(107));
  literals.put(new ANTLRHashString("package",this),new Integer(80));
  literals.put(new ANTLRHashString("return",this),new Integer(142));
  literals.put(new ANTLRHashString("throw",this),new Integer(145));
  literals.put(new ANTLRHashString("null",this),new Integer(190));
  literals.put(new ANTLRHashString("def",this),new Integer(51));
  literals.put(new ANTLRHashString("threadsafe",this),new Integer(118));
  literals.put(new ANTLRHashString("protected",this),new Integer(115));
  literals.put(new ANTLRHashString("class",this),new Integer(89));
  literals.put(new ANTLRHashString("throws",this),new Integer(130));
  literals.put(new ANTLRHashString("do",this),new Integer(41));
  literals.put(new ANTLRHashString("strictfp",this),new Integer(42));
  literals.put(new ANTLRHashString("super",this),new Integer(95));
  literals.put(new ANTLRHashString("with",this),new Integer(138));
  literals.put(new ANTLRHashString("transient",this),new Integer(116));
  literals.put(new ANTLRHashString("native",this),new Integer(117));
  literals.put(new ANTLRHashString("interface",this),new Integer(90));
  literals.put(new ANTLRHashString("final",this),new Integer(37));
  literals.put(new ANTLRHashString("any",this),new Integer(110));
  literals.put(new ANTLRHashString("if",this),new Integer(135));
  literals.put(new ANTLRHashString("double",this),new Integer(109));
  literals.put(new ANTLRHashString("volatile",this),new Integer(120));
  literals.put(new ANTLRHashString("as",this),new Integer(112));
  literals.put(new ANTLRHashString("assert",this),new Integer(146));
  literals.put(new ANTLRHashString("catch",this),new Integer(152));
  literals.put(new ANTLRHashString("try",this),new Integer(150));
  literals.put(new ANTLRHashString("goto",this),new Integer(39));
  literals.put(new ANTLRHashString("enum",this),new Integer(91));
  literals.put(new ANTLRHashString("int",this),new Integer(106));
  literals.put(new ANTLRHashString("for",this),new Integer(140));
  literals.put(new ANTLRHashString("extends",this),new Integer(94));
  literals.put(new ANTLRHashString("boolean",this),new Integer(102));
  literals.put(new ANTLRHashString("char",this),new Integer(104));
  literals.put(new ANTLRHashString("private",this),new Integer(113));
  literals.put(new ANTLRHashString("default",this),new Integer(126));
  literals.put(new ANTLRHashString("false",this),new Integer(189));
  literals.put(new ANTLRHashString("this",this),new Integer(128));
  literals.put(new ANTLRHashString("static",this),new Integer(82));
  literals.put(new ANTLRHashString("abstract",this),new Integer(38));
  literals.put(new ANTLRHashString("continue",this),new Integer(144));
  literals.put(new ANTLRHashString("finally",this),new Integer(151));
  literals.put(new ANTLRHashString("else",this),new Integer(136));
  literals.put(new ANTLRHashString("import",this),new Integer(81));
  literals.put(new ANTLRHashString("in",this),new Integer(141));
  literals.put(new ANTLRHashString("void",this),new Integer(101));
  literals.put(new ANTLRHashString("switch",this),new Integer(139));
  literals.put(new ANTLRHashString("true",this),new Integer(188));
  literals.put(new ANTLRHashString("long",this),new Integer(108));
}
