{
  int _ttype;
  Token _token=null;
  int _begin=text.length();
  _ttype=IDENT;
  int _saveIndex;
  mLETTER(false);
{
    _loop601:     do {
switch (LA(1)) {
case 'A':
case 'B':
case 'C':
case 'D':
case 'E':
case 'F':
case 'G':
case 'H':
case 'I':
case 'J':
case 'K':
case 'L':
case 'M':
case 'N':
case 'O':
case 'P':
case 'Q':
case 'R':
case 'S':
case 'T':
case 'U':
case 'V':
case 'W':
case 'X':
case 'Y':
case 'Z':
case '_':
case 'a':
case 'b':
case 'c':
case 'd':
case 'e':
case 'f':
case 'g':
case 'h':
case 'i':
case 'j':
case 'k':
case 'l':
case 'm':
case 'n':
case 'o':
case 'p':
case 'q':
case 'r':
case 's':
case 't':
case 'u':
case 'v':
case 'w':
case 'x':
case 'y':
case 'z':
{
          mLETTER(false);
          break;
        }
case '0':
case '1':
case '2':
case '3':
case '4':
case '5':
case '6':
case '7':
case '8':
case '9':
{
        mDIGIT(false);
        break;
      }
default :
{
      break _loop601;
    }
}
}
 while (true);
}
if (inputState.guessing == 0) {
if (stringCtorState != 0) {
if (LA(1) == '.' && LA(2) != '$' && Character.isJavaIdentifierStart(LA(2))) {
  restartStringCtor(false);
}
 else {
  restartStringCtor(true);
}
}
int ttype=testLiteralsTable(IDENT);
if (ttype != IDENT && lastToken.getType() == DOT) {
switch (ttype) {
case LITERAL_this:
case LITERAL_super:
case LITERAL_class:
  break;
default :
ttype=LITERAL_in;
}
}
_ttype=ttype;
if (assertEnabled && "assert".equals(new String(text.getBuffer(),_begin,text.length() - _begin))) {
_ttype=LITERAL_assert;
}
if (enumEnabled && "enum".equals(new String(text.getBuffer(),_begin,text.length() - _begin))) {
_ttype=LITERAL_enum;
}
}
_ttype=testLiteralsTable(_ttype);
if (_createToken && _token == null && _ttype != Token.SKIP) {
_token=makeToken(_ttype);
_token.setText(new String(text.getBuffer(),_begin,text.length() - _begin));
}
_returnToken=_token;
}
