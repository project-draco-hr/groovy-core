{
  int _ttype;
  Token _token=null;
  int _begin=text.length();
  _ttype=ML_COMMENT;
  int _saveIndex;
  match("/*");
{
    _loop567:     do {
      if ((LA(1) == '\r') && (LA(2) == '\n') && ((LA(3) >= '\u0003' && LA(3) <= '\uffff'))&& ((LA(4) >= '\u0003' && LA(4) <= '\uffff'))) {
        match('\r');
        match('\n');
        if (inputState.guessing == 0) {
          newlineCheck();
        }
      }
 else {
        boolean synPredMatched565=false;
        if (((LA(1) == '*') && ((LA(2) >= '\u0003' && LA(2) <= '\uffff')) && ((LA(3) >= '\u0003' && LA(3) <= '\uffff'))&& (true))) {
          int _m565=mark();
          synPredMatched565=true;
          inputState.guessing++;
          try {
{
              match('*');
              matchNot('/');
            }
          }
 catch (          RecognitionException pe) {
            synPredMatched565=false;
          }
          rewind(_m565);
          inputState.guessing--;
        }
        if (synPredMatched565) {
          match('*');
        }
 else         if ((LA(1) == '\r') && ((LA(2) >= '\u0003' && LA(2) <= '\uffff')) && ((LA(3) >= '\u0003' && LA(3) <= '\uffff'))&& (true)) {
          match('\r');
          if (inputState.guessing == 0) {
            newlineCheck();
          }
        }
 else         if ((LA(1) == '\n')) {
          match('\n');
          if (inputState.guessing == 0) {
            newlineCheck();
          }
        }
 else         if ((_tokenSet_1.member(LA(1)))) {
{
            match(_tokenSet_1);
          }
        }
 else {
          break _loop567;
        }
      }
    }
 while (true);
  }
  match("*/");
  if (inputState.guessing == 0) {
    _ttype=Token.SKIP;
  }
  if (_createToken && _token == null && _ttype != Token.SKIP) {
    _token=makeToken(_ttype);
    _token.setText(new String(text.getBuffer(),_begin,text.length() - _begin));
  }
  _returnToken=_token;
}
