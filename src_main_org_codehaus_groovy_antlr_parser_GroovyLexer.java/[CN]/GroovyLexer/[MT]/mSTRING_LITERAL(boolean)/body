{
  int _ttype;
  Token _token=null;
  int _begin=text.length();
  _ttype=STRING_LITERAL;
  int _saveIndex;
  int tt=0;
  boolean synPredMatched558=false;
  if (((LA(1) == '\'') && (LA(2) == '\'') && (LA(3) == '\'')&& ((LA(4) >= '\u0003' && LA(4) <= '\uffff')))) {
    int _m558=mark();
    synPredMatched558=true;
    inputState.guessing++;
    try {
{
        match("'''");
      }
    }
 catch (    RecognitionException pe) {
      synPredMatched558=false;
    }
    rewind(_m558);
    inputState.guessing--;
  }
  if (synPredMatched558) {
    _saveIndex=text.length();
    match("'''");
    text.setLength(_saveIndex);
{
      _loop563:       do {
switch (LA(1)) {
case '\n':
case '\r':
case '\\':
{
            mESC(false);
            break;
          }
case '"':
{
          match('"');
          break;
        }
case '$':
{
        match('$');
        break;
      }
default :
    boolean synPredMatched562=false;
  if (((LA(1) == '\'') && ((LA(2) >= '\u0003' && LA(2) <= '\uffff')) && ((LA(3) >= '\u0003' && LA(3) <= '\uffff'))&& ((LA(4) >= '\u0003' && LA(4) <= '\uffff')))) {
    int _m562=mark();
    synPredMatched562=true;
    inputState.guessing++;
    try {
{
        match('\'');
{
          if ((_tokenSet_2.member(LA(1)))) {
            matchNot('\'');
          }
 else           if ((LA(1) == '\'')) {
            match('\'');
            matchNot('\'');
          }
 else {
            throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
          }
        }
      }
    }
 catch (    RecognitionException pe) {
      synPredMatched562=false;
    }
    rewind(_m562);
    inputState.guessing--;
  }
if (synPredMatched562) {
  match('\'');
}
 else if ((_tokenSet_3.member(LA(1)))) {
  mSTRING_CH(false);
}
 else {
  break _loop563;
}
}
}
 while (true);
}
_saveIndex=text.length();
match("'''");
text.setLength(_saveIndex);
}
 else {
boolean synPredMatched567=false;
if (((LA(1) == '"') && (LA(2) == '"') && (LA(3) == '"')&& ((LA(4) >= '\u0003' && LA(4) <= '\uffff')))) {
int _m567=mark();
synPredMatched567=true;
inputState.guessing++;
try {
{
match("\"\"\"");
}
}
 catch (RecognitionException pe) {
synPredMatched567=false;
}
rewind(_m567);
inputState.guessing--;
}
if (synPredMatched567) {
_saveIndex=text.length();
match("\"\"\"");
text.setLength(_saveIndex);
tt=mSTRING_CTOR_END(false,true,true);
if (inputState.guessing == 0) {
_ttype=tt;
}
}
 else if ((LA(1) == '\'') && ((LA(2) >= '\u0003' && LA(2) <= '\uffff')) && (true)&& (true)) {
_saveIndex=text.length();
match('\'');
text.setLength(_saveIndex);
if (inputState.guessing == 0) {
++suppressNewline;
}
{
_loop565: do {
switch (LA(1)) {
case '\n':
case '\r':
case '\\':
{
  mESC(false);
  break;
}
case '"':
{
match('"');
break;
}
case '$':
{
match('$');
break;
}
default :
if ((_tokenSet_3.member(LA(1)))) {
mSTRING_CH(false);
}
 else {
break _loop565;
}
}
}
 while (true);
}
if (inputState.guessing == 0) {
--suppressNewline;
}
_saveIndex=text.length();
match('\'');
text.setLength(_saveIndex);
}
 else if ((LA(1) == '"') && ((LA(2) >= '\u0003' && LA(2) <= '\uffff')) && (true)&& (true)) {
_saveIndex=text.length();
match('"');
text.setLength(_saveIndex);
if (inputState.guessing == 0) {
++suppressNewline;
}
tt=mSTRING_CTOR_END(false,true,false);
if (inputState.guessing == 0) {
_ttype=tt;
}
}
 else {
throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
}
}
if (_createToken && _token == null && _ttype != Token.SKIP) {
_token=makeToken(_ttype);
_token.setText(new String(text.getBuffer(),_begin,text.length() - _begin));
}
_returnToken=_token;
}
