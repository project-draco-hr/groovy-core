{
  int tt=STRING_CTOR_END;
  int _ttype;
  Token _token=null;
  int _begin=text.length();
  _ttype=STRING_CTOR_END;
  int _saveIndex;
{
    _loop584:     do {
switch (LA(1)) {
case '\n':
case '\r':
case '\\':
{
          mESC(false);
          break;
        }
case '\'':
{
        match('\'');
        break;
      }
default :
    boolean synPredMatched583=false;
  if ((((LA(1) == '"') && ((LA(2) >= '\u0003' && LA(2) <= '\uffff')) && (true)&& (true)) && (tripleQuote))) {
    int _m583=mark();
    synPredMatched583=true;
    inputState.guessing++;
    try {
{
        match('"');
{
          if ((_tokenSet_4.member(LA(1)))) {
            matchNot('"');
          }
 else           if ((LA(1) == '"')) {
            match('"');
            matchNot('"');
          }
 else {
            throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
          }
        }
      }
    }
 catch (    RecognitionException pe) {
      synPredMatched583=false;
    }
    rewind(_m583);
    inputState.guessing--;
  }
if (synPredMatched583) {
  match('"');
}
 else if ((_tokenSet_3.member(LA(1)))) {
  mSTRING_CH(false);
}
 else {
  break _loop584;
}
}
}
 while (true);
}
{
switch (LA(1)) {
case '"':
{
{
if (((LA(1) == '"') && (LA(2) == '"')) && (tripleQuote)) {
  _saveIndex=text.length();
  match("\"\"\"");
  text.setLength(_saveIndex);
}
 else if (((LA(1) == '"') && (true)) && (!tripleQuote)) {
  _saveIndex=text.length();
  match("\"");
  text.setLength(_saveIndex);
}
 else {
  throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
}
}
if (inputState.guessing == 0) {
if (fromStart) tt=STRING_LITERAL;
if (!tripleQuote) {
  --suppressNewline;
}
}
break;
}
case '$':
{
_saveIndex=text.length();
match('$');
text.setLength(_saveIndex);
if (inputState.guessing == 0) {
int k=1;
char lc=LA(k);
if (lc == '*') lc=LA(++k);
require(lc == '{' || (lc != '$' && Character.isJavaIdentifierStart(lc)),"illegal string body character after dollar sign","either escape a literal dollar sign \"\\$5\" or bracket the value expression \"${5}\"");
tt=(fromStart ? STRING_CTOR_START : STRING_CTOR_MIDDLE);
stringCtorState=SCS_VAL + (tripleQuote ? SCS_TRIPLE : 0);
}
break;
}
default :
{
throw new NoViableAltForCharException((char)LA(1),getFilename(),getLine(),getColumn());
}
}
}
if (inputState.guessing == 0) {
_ttype=tt;
}
if (_createToken && _token == null && _ttype != Token.SKIP) {
_token=makeToken(_ttype);
_token.setText(new String(text.getBuffer(),_begin,text.length() - _begin));
}
_returnToken=_token;
return tt;
}
