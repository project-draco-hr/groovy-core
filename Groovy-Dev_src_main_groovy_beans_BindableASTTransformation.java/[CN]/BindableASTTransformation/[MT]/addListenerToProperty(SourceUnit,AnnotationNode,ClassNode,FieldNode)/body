{
  String fieldName=field.getName();
  for (  PropertyNode propertyNode : (Collection<PropertyNode>)declaringClass.getProperties()) {
    if (propertyNode.getName().equals(fieldName)) {
      if (needsPropertyChangeSupport(declaringClass)) {
        addPropertyChangeSupport(declaringClass);
      }
      createListenerSetter(source,node,declaringClass,propertyNode);
      return;
    }
  }
  source.getErrorCollector().addErrorAndContinue(new SyntaxErrorMessage(new SyntaxException("@groovy.beans.Bindable must be on a property, not a field.  Try removing the private, protected, or public modifier.",node.getLineNumber(),node.getColumnNumber()),source));
}
