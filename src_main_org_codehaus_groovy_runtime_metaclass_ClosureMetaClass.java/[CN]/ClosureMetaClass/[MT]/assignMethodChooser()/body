{
  if (closureMethods.size() == 1) {
    final MetaMethod doCall=(MetaMethod)closureMethods.get(0);
    final CachedClass[] c=doCall.getParameterTypes();
    int length=c.length;
    if (length == 0) {
      chooser=new MethodChooser(){
        public Object chooseMethod(        Class[] arguments,        boolean coerce){
          if (arguments.length == 0)           return doCall;
          return null;
        }
      }
;
    }
 else {
      if (length == 1 && c[0].getCachedClass() == Object.class) {
        chooser=new MethodChooser(){
          public Object chooseMethod(          Class[] arguments,          boolean coerce){
            if (arguments.length < 2)             return doCall;
            return null;
          }
        }
;
      }
 else {
        boolean allObject=true;
        for (int i=0; i < c.length - 1; i++) {
          if (c[i].getCachedClass() != Object.class) {
            allObject=false;
            break;
          }
        }
        if (allObject && c[c.length - 1].getCachedClass() == Object.class) {
          chooser=new MethodChooser(){
            public Object chooseMethod(            Class[] arguments,            boolean coerce){
              if (arguments.length == c.length)               return doCall;
              return null;
            }
          }
;
        }
 else {
          if (allObject && c[c.length - 1].getCachedClass() == Object[].class) {
            final int minimumLength=c.length - 2;
            chooser=new MethodChooser(){
              public Object chooseMethod(              Class[] arguments,              boolean coerce){
                if (arguments.length > minimumLength)                 return doCall;
                return null;
              }
            }
;
          }
 else {
            chooser=new MethodChooser(){
              public Object chooseMethod(              Class[] arguments,              boolean coerce){
                if (MetaClassHelper.isValidMethod(doCall,arguments,coerce)) {
                  return doCall;
                }
                return null;
              }
            }
;
          }
        }
      }
    }
  }
 else   if (closureMethods.size() == 2) {
    MetaMethod m0=null, m1=null;
    for (int i=0; i != closureMethods.size(); ++i) {
      MetaMethod m=(MetaMethod)closureMethods.get(i);
      CachedClass[] c=m.getParameterTypes();
      if (c.length == 0) {
        m0=m;
      }
 else {
        if (c.length == 1 && c[0].getCachedClass() == Object.class) {
          m1=m;
        }
      }
    }
    if (m0 != null && m1 != null) {
      chooser=new StandardClosureChooser(m0,m1);
    }
  }
  if (chooser == null) {
    chooser=new NormalMethodChooser(theClass,closureMethods);
  }
}
