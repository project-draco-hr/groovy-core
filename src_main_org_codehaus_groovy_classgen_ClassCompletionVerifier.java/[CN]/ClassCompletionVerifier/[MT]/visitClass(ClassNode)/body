{
  ClassNode oldClass=currentClass;
  currentClass=node;
  checkImplementsAndExtends(node);
  if (!getSourceUnit().getErrorCollector().hasErrors()) {
    checkClassForOverwritingFinal(node);
    checkMethodsForOverwritingFinal(node);
    checkNoAbstractMethodsNonabstractClass(node);
  }
  super.visitClass(node);
  currentClass=oldClass;
}
