{
  List methods=cn.getMethods();
  for (Iterator cnIter=methods.iterator(); cnIter.hasNext(); ) {
    MethodNode method=(MethodNode)cnIter.next();
    Parameter[] params=method.getParameters();
    List superMethods=cn.getSuperClass().getMethods(method.getName());
    for (Iterator iter=superMethods.iterator(); iter.hasNext(); ) {
      MethodNode superMethod=(MethodNode)iter.next();
      Parameter[] superParams=superMethod.getParameters();
      if (!hasEqualParameterTypes(params,superParams))       continue;
      if (!Modifier.isFinal(superMethod.getModifiers()))       break;
      addInvalidUseOfFinalError(method,params,superMethod.getDeclaringClass());
      return;
    }
  }
}
