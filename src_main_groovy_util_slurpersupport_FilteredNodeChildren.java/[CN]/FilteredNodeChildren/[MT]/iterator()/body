{
  return new Iterator(){
    final Iterator iter=FilteredNodeChildren.this.parent.iterator();
    public boolean hasNext(){
      return this.iter.hasNext();
    }
    public Object next(){
      while (iter.hasNext()) {
        final Object childNode=iter.next();
        if (InvokerHelper.asBool(FilteredNodeChildren.this.closure.call(new Object[]{childNode}))) {
          return childNode;
        }
      }
      return null;
    }
    public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
