{
  GenericsType[] generics=node.getGenericsTypes();
  Parameter[] param=node.getParameters();
  ClassNode returnType=node.getReturnType();
  if (generics == null && !hasGenerics(param) && !hasGenerics(returnType))   return null;
  StringBuilder ret=new StringBuilder(100);
  getGenericsTypeSpec(ret,generics);
  GenericsType[] paramTypes=new GenericsType[param.length];
  for (int i=0; i < param.length; i++) {
    ClassNode pType=param[i].getType();
    if (pType.getGenericsTypes() == null || !pType.isGenericsPlaceHolder()) {
      paramTypes[i]=new GenericsType(pType);
    }
 else {
      paramTypes[i]=pType.getGenericsTypes()[0];
    }
  }
  addSubTypes(ret,paramTypes,"(",")");
  addSubTypes(ret,new GenericsType[]{new GenericsType(returnType)},"","");
  return ret.toString();
}
