{
  Class[] classInterfaces=theClass.getInterfaces();
  int size=classInterfaces.length;
  String[] interfaceNames=new String[size];
  for (int i=0; i < size; i++) {
    interfaceNames[i]=classInterfaces[i].getName();
  }
  String className=null;
  if (theClass.getSuperclass() != null) {
    className=theClass.getSuperclass().getName();
  }
  ClassNode answer=new ClassNode(theClass.getName(),theClass.getModifiers(),className,interfaceNames,MixinNode.EMPTY_ARRAY);
  answer.compileUnit=getCompileUnit();
  Method[] declaredMethods=theClass.getDeclaredMethods();
  for (int i=0; i < declaredMethods.length; i++) {
    answer.addMethod(createMethodNode(declaredMethods[i]));
  }
  Constructor[] declaredConstructors=theClass.getDeclaredConstructors();
  for (int i=0; i < declaredConstructors.length; i++) {
    answer.addConstructor(createConstructorNode(declaredConstructors[i]));
  }
  return answer;
}
