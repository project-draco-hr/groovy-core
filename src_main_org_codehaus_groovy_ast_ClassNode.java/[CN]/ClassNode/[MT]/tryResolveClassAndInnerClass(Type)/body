{
  if (type.getTypeClass() != null)   return type;
  Type answer=tryResolveClassFromCompileUnit(type);
  if (answer == null) {
    String packageName=getPackageName();
    if (packageName != null && packageName.length() > 0) {
      answer=tryResolveClassFromCompileUnit(Type.makeType(packageName + "." + type.getName()));
    }
  }
  if (answer == null) {
    if (module != null) {
      for (Iterator iter=module.getImportPackages().iterator(); iter.hasNext(); ) {
        String packageName=(String)iter.next();
        answer=tryResolveClassFromCompileUnit(Type.makeType(packageName + type.getName()));
        if (answer != null) {
          return answer;
        }
      }
    }
  }
  if (answer == null) {
    for (int i=0, size=defaultImports.length; i < size; i++) {
      String packagePrefix=defaultImports[i];
      answer=tryResolveClassFromCompileUnit(Type.makeType(packagePrefix + "." + type.getName()));
      if (answer != null) {
        return answer;
      }
    }
  }
  return answer;
}
