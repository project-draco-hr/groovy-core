{
  Field[] fields=clazz.getDeclaredFields();
  for (int i=0; i < fields.length; i++) {
    addField(fields[i].getName(),fields[i].getModifiers(),this,null);
  }
  Method[] methods=clazz.getDeclaredMethods();
  for (int i=0; i < methods.length; i++) {
    Method m=methods[i];
    MethodNode mn=new MethodNode(m.getName(),m.getModifiers(),ClassHelper.make(m.getReturnType()),createParameters(m.getParameterTypes()),null);
    addMethod(mn);
  }
  Constructor[] constructors=clazz.getConstructors();
  for (int i=0; i < constructors.length; i++) {
    Constructor ctor=constructors[i];
    addConstructor(ctor.getModifiers(),createParameters(ctor.getParameterTypes()),null);
  }
  Class sc=clazz.getSuperclass();
  if (sc != null)   superClass=ClassHelper.make(sc);
  buildInterfaceTypes(clazz);
  lazyInitDone=true;
}
