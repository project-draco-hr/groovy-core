{
  String name;
  ClassNode val;
  String typeName=type.getName();
  if (type.getNameWithoutPackage().equals(typeName)) {
    for (    ClassNode classToCheck : values) {
      name=classToCheck.getName() + "$" + typeName;
      if (!resolutionFailedCache.contains(name)) {
        val=ClassHelper.make(name);
        if (resolveFromCompileUnit(val)) {
          type.setRedirect(val);
          return true;
        }
      }
      resolutionFailedCache.add(name);
      for (      ClassNode next : classToCheck.getInterfaces()) {
        String nextName=next.getName();
        if (typeName.contains(nextName))         continue;
        name=nextName + "$" + typeName;
        if (resolutionFailedCache.contains(name))         continue;
        val=ClassHelper.make(name);
        if (resolve(val,false,false,false)) {
          type.setRedirect(val);
          return true;
        }
        resolutionFailedCache.add(name);
      }
    }
  }
  return false;
}
