{
  String name=type.getName();
  if (type instanceof LowerCaseClass) {
    cachedClasses.put(name,NO_CLASS);
  }
  Object cached=cachedClasses.get(name);
  if (cached == NO_CLASS)   return false;
  if (cached == SCRIPT)   throw new GroovyBugError("name " + name + " was marked as script, but was not resolved as such");
  if (cached != null)   return true;
  if (currentClass.getModule().hasPackageName() && name.indexOf('.') == -1)   return false;
  GroovyClassLoader loader=compilationUnit.getClassLoader();
  Class cls;
  try {
    cls=loader.loadClass(name,false,true);
  }
 catch (  ClassNotFoundException cnfe) {
    cachedClasses.put(name,SCRIPT);
    return false;
  }
catch (  CompilationFailedException cfe) {
    compilationUnit.getErrorCollector().addErrorAndContinue(new ExceptionMessage(cfe,true,source));
    return false;
  }
  if (cls == null)   return false;
  ClassNode cn=ClassHelper.make(cls);
  cachedClasses.put(name,cn);
  type.setRedirect(cn);
  return cls.getClassLoader() == loader;
}
