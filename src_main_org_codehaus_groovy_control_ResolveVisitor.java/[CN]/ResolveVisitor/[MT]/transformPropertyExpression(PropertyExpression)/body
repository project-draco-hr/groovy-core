{
  boolean itlp=isTopLevelProperty;
  Expression objectExpression=pe.getObjectExpression();
  isTopLevelProperty=!(objectExpression.getClass() == PropertyExpression.class);
  objectExpression=transform(objectExpression);
  Expression property=transform(pe.getProperty());
  isTopLevelProperty=itlp;
  boolean spreadSafe=pe.isSpreadSafe();
  pe=new PropertyExpression(objectExpression,property,pe.isSafe());
  pe.setSpreadSafe(spreadSafe);
  String className=lookupClassName(pe);
  if (className != null) {
    ClassNode type=ClassHelper.make(className);
    if (resolve(type))     return new ClassExpression(type);
  }
  if (objectExpression instanceof ClassExpression && pe.getPropertyAsString() != null) {
    ClassExpression ce=(ClassExpression)objectExpression;
    ClassNode type=ClassHelper.make(ce.getType().getName() + "$" + pe.getPropertyAsString());
    if (resolve(type,false,false,false))     return new ClassExpression(type);
  }
  if (isTopLevelProperty)   return correctClassClassChain(pe);
  return pe;
}
