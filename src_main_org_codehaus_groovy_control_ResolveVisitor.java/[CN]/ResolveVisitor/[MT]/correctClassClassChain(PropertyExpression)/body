{
  LinkedList stack=new LinkedList();
  ClassExpression found=null;
  for (Expression it=pe; it != null; it=((PropertyExpression)it).getObjectExpression()) {
    if (it instanceof ClassExpression) {
      found=(ClassExpression)it;
      break;
    }
 else     if (!(it instanceof PropertyExpression)) {
      return pe;
    }
    stack.addFirst(it);
  }
  if (found == null)   return pe;
  if (stack.isEmpty())   return pe;
  Object stackElement=stack.removeFirst();
  if (!(stackElement instanceof PropertyExpression))   return pe;
  PropertyExpression classPropertyExpression=(PropertyExpression)stackElement;
  if (!classPropertyExpression.getProperty().equals("class"))   return pe;
  if (stack.isEmpty())   return found;
  stackElement=stack.removeFirst();
  if (!(stackElement instanceof PropertyExpression))   return pe;
  PropertyExpression classPropertyExpressionContainer=(PropertyExpression)stackElement;
  classPropertyExpressionContainer.setObjectExpression(found);
  return pe;
}
