{
  Expression leftExpression=expression.getLeftExpression();
  AsmClassGenerator acg=controller.getAcg();
  OperandStack operandStack=controller.getOperandStack();
  if (leftExpression instanceof BinaryExpression) {
    BinaryExpression leftBinExpr=(BinaryExpression)leftExpression;
    if (leftBinExpr.getOperation().getType() == Types.LEFT_SQUARE_BRACKET) {
      evaluateArrayAssignmentWithOperator(method,expression,leftBinExpr);
      return;
    }
  }
  evaluateBinaryExpression(method,expression);
  operandStack.dup();
  controller.getCompileStack().pushLHS(true);
  leftExpression.visit(acg);
  controller.getCompileStack().popLHS();
}
