{
  final String version=InvokerHelper.getVersion();
  out.println("Let's get Groovy!");
  out.println("================");
  out.println("Version: " + version + " JVM: "+ System.getProperty("java.vm.version"));
  out.println("Type 'exit' to terminate the shell");
  out.println("Type 'help' for command help");
  out.println("Type 'go' to execute the statements");
  boolean running=true;
  while (running) {
    final String command=read();
    if (command == null) {
      close();
      break;
    }
    reset();
    if (command.length() > 0) {
      try {
        if (this.beforeExecution != null) {
          this.beforeExecution.call();
        }
        lastResult=shell.evaluate(command,"CommandLine.groovy");
        if (this.afterExecution != null) {
          this.afterExecution.call();
        }
        out.println("\n===> " + lastResult);
      }
 catch (      CompilationFailedException e) {
        err.println(e);
      }
catch (      Throwable e) {
        if (e instanceof InvokerInvocationException) {
          InvokerInvocationException iie=(InvokerInvocationException)e;
          e=iie.getCause();
        }
        filterAndPrintStackTrace(e);
      }
    }
  }
}
