{
  final String version=InvokerHelper.getVersion();
  out.println("Lets get Groovy!");
  out.println("================");
  out.println("Version: " + version + " JVM: "+ System.getProperty("java.vm.version"));
  out.println("Type 'exit' to terminate the shell");
  out.println("Type 'help' for command help");
  out.println("Type 'go' to execute the statements");
  boolean running=true;
  while (running) {
    final String command=read();
    if (command == null) {
      close();
      break;
    }
    reset();
    if (command.length() > 0) {
      try {
        lastResult=shell.evaluate(command,"CommandLine.groovy");
      }
 catch (      CompilationFailedException e) {
        err.println(e);
      }
catch (      Throwable e) {
        if (e instanceof InvokerInvocationException) {
          InvokerInvocationException iie=(InvokerInvocationException)e;
          e=iie.getCause();
        }
        err.println("Caught: " + e);
        StackTraceElement[] stackTrace=e.getStackTrace();
        for (int i=0; i < stackTrace.length; i++) {
          StackTraceElement element=stackTrace[i];
          String fileName=element.getFileName();
          if (fileName == null || (!fileName.endsWith(".java"))) {
            err.println("\tat " + element);
          }
        }
      }
    }
  }
}
