{
  reset();
  System.out.println("");
  boolean complete=false;
  boolean done=false;
  while (!done) {
    System.out.print(line + "> ");
    try {
      pending=reader.readLine();
    }
 catch (    IOException e) {
    }
    if (pending == null || (COMMAND_MAPPINGS.containsKey(pending) && ((Integer)COMMAND_MAPPINGS.get(pending)).intValue() == COMMAND_ID_EXIT)) {
      return null;
    }
    if (COMMAND_MAPPINGS.containsKey(pending)) {
      int code=((Integer)COMMAND_MAPPINGS.get(pending)).intValue();
switch (code) {
case COMMAND_ID_HELP:
        displayHelp();
      break;
case COMMAND_ID_DISCARD:
    reset();
  done=true;
break;
case COMMAND_ID_DISPLAY:
displayStatement();
break;
case COMMAND_ID_EXPLAIN:
explainStatement();
break;
case COMMAND_ID_EXECUTE:
if (complete) {
done=true;
}
 else {
System.err.println("statement not complete");
}
break;
}
continue;
}
freshen();
if (pending.trim() == "") {
accept();
continue;
}
String code=current();
if (parse(code,1)) {
accept();
complete=true;
}
 else if (error == null) {
accept();
}
 else {
report(code);
}
}
return accepted(complete);
}
