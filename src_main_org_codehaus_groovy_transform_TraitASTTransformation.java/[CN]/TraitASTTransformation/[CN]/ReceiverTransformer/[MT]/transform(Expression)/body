{
  if (exp instanceof BinaryExpression) {
    Expression leftExpression=((BinaryExpression)exp).getLeftExpression();
    Expression rightExpression=((BinaryExpression)exp).getRightExpression();
    Token operation=((BinaryExpression)exp).getOperation();
    if (operation.getText().equals("=")) {
      String leftFieldName=null;
      if (leftExpression instanceof VariableExpression && ((VariableExpression)leftExpression).getAccessedVariable() instanceof FieldNode) {
        leftFieldName=((VariableExpression)leftExpression).getAccessedVariable().getName();
      }
 else       if (leftExpression instanceof FieldExpression) {
        leftFieldName=((FieldExpression)leftExpression).getFieldName();
      }
 else       if (leftExpression instanceof PropertyExpression && (((PropertyExpression)leftExpression).isImplicitThis() || "this".equals(((PropertyExpression)leftExpression).getObjectExpression().getText()))) {
        leftFieldName=((PropertyExpression)leftExpression).getPropertyAsString();
      }
      if (leftFieldName != null) {
        MethodCallExpression mce=new MethodCallExpression(weaved,leftFieldName + DIRECT_SETTER_SUFFIX,new ArgumentListExpression(super.transform(rightExpression)));
        mce.setSourcePosition(exp);
        return mce;
      }
    }
    Expression leftTransform=super.transform(leftExpression);
    Expression rightTransform=super.transform(rightExpression);
    Expression ret=exp instanceof DeclarationExpression ? new DeclarationExpression(leftTransform,operation,rightTransform) : new BinaryExpression(leftTransform,operation,rightTransform);
    ret.setSourcePosition(exp);
    ret.copyNodeMetaData(exp);
    return ret;
  }
 else   if (exp instanceof MethodCallExpression) {
    MethodCallExpression call=(MethodCallExpression)exp;
    Expression obj=call.getObjectExpression();
    if (call.isImplicitThis() || obj.getText().equals("this")) {
      MethodCallExpression transformed=new MethodCallExpression(weaved,call.getMethod(),super.transform(call.getArguments()));
      transformed.setSourcePosition(call);
      transformed.setSafe(call.isSafe());
      transformed.setSpreadSafe(call.isSpreadSafe());
      return transformed;
    }
  }
 else   if (exp instanceof FieldExpression) {
    MethodCallExpression mce=new MethodCallExpression(weaved,helperGetterName(((FieldExpression)exp).getField()),ArgumentListExpression.EMPTY_ARGUMENTS);
    mce.setSourcePosition(exp);
    return mce;
  }
 else   if (exp instanceof VariableExpression) {
    VariableExpression vexp=(VariableExpression)exp;
    if (vexp.getAccessedVariable() instanceof FieldNode) {
      MethodCallExpression mce=new MethodCallExpression(weaved,helperGetterName((FieldNode)vexp.getAccessedVariable()),ArgumentListExpression.EMPTY_ARGUMENTS);
      mce.setSourcePosition(exp);
      return mce;
    }
  }
 else   if (exp instanceof PropertyExpression) {
    if (((PropertyExpression)exp).isImplicitThis() || "this".equals(((PropertyExpression)exp).getObjectExpression().getText())) {
      MethodCallExpression mce=new MethodCallExpression(weaved,((PropertyExpression)exp).getPropertyAsString() + DIRECT_GETTER_SUFFIX,ArgumentListExpression.EMPTY_ARGUMENTS);
      mce.setSourcePosition(exp);
      return mce;
    }
  }
 else   if (exp instanceof ClosureExpression) {
    MethodCallExpression mce=new MethodCallExpression(exp,"rehydrate",new ArgumentListExpression(new VariableExpression(weaved),new VariableExpression(weaved),new VariableExpression(weaved)));
    mce.setImplicitThis(false);
    mce.setSourcePosition(exp);
    return mce;
  }
  return super.transform(exp);
}
