{
  if (superclassName == null)   return;
  ClassNode cn=unit.getClass(superclassName);
  if (cn != null) {
    addVarNames(cn,refs,visitParent);
    return;
  }
  Class c=unit.getClassLoader().loadClass(superclassName);
  Field[] fields=c.getFields();
  for (int i=0; i < fields.length; i++) {
    Field f=fields[i];
    if (visitParent && Modifier.isPrivate(f.getModifiers()))     continue;
    refs.add(f.getName());
  }
  Method[] methods=c.getMethods();
  for (int i=0; i < methods.length; i++) {
    Method m=methods[i];
    if (visitParent && Modifier.isPrivate(m.getModifiers()))     continue;
    String name=getPropertyName(m.getName());
    if (name != null)     refs.add(name);
  }
  if (!visitParent)   return;
  addVarNames(c.getSuperclass(),refs,visitParent);
  addVarNames(c.getEnclosingClass(),refs,visitParent);
}
