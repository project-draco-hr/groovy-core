{
  super(theClass);
  this.registry=registry;
  constructors=(List)AccessController.doPrivileged(new PrivilegedAction(){
    public Object run(){
      return Arrays.asList(theClass.getDeclaredConstructors());
    }
  }
);
  try {
    info=(BeanInfo)AccessController.doPrivileged(new PrivilegedExceptionAction(){
      public Object run() throws IntrospectionException {
        return Introspector.getBeanInfo(theClass);
      }
    }
);
  }
 catch (  PrivilegedActionException pae) {
    if (pae.getException() instanceof IntrospectionException) {
      throw (IntrospectionException)pae.getException();
    }
 else {
      throw new RuntimeException(pae.getException());
    }
  }
}
