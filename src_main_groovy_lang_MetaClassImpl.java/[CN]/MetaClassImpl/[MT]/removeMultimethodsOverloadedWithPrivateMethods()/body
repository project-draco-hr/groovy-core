{
  MethodIndexAction mia=new MethodIndexAction(){
    public void methodNameAction(    CachedClass clazz,    String methodName,    FastArray methods){
      boolean hasPrivate=false;
      for (int i=0; i != methods.size(); ++i) {
        MetaMethod method=(MetaMethod)methods.get(i);
        if (method.isPrivate() && clazz == method.getDeclaringClass()) {
          hasPrivate=true;
          break;
        }
      }
      if (!hasPrivate)       return;
      methods.clear();
      methods.addAll((FastArray)classMethodIndexForSuper.getNotNull(clazz).get(methodName));
    }
  }
;
  mia.iterate(classMethodIndex);
}
