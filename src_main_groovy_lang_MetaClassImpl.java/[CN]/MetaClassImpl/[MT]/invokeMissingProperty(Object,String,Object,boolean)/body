{
  try {
    if (!(instance instanceof Class)) {
      if (isGetter && propertyMissingGet != null) {
        return propertyMissingGet.invoke(instance,new Object[]{propertyName});
      }
 else {
        if (propertyMissingSet != null)         return propertyMissingSet.invoke(instance,new Object[]{propertyName,optionalValue});
      }
    }
  }
 catch (  InvokerInvocationException iie) {
    boolean shouldHandle=isGetter && propertyMissingGet instanceof ClosureMetaMethod;
    if (!shouldHandle)     shouldHandle=!isGetter && propertyMissingSet instanceof ClosureMetaMethod;
    if (shouldHandle && iie.getCause() instanceof MissingPropertyException) {
      throw (MissingPropertyException)iie.getCause();
    }
    throw iie;
  }
  if (instance instanceof Class && theClass != Class.class) {
    final MetaProperty metaProperty=InvokerHelper.getMetaClass(Class.class).hasProperty(instance,propertyName);
    if (metaProperty != null)     if (isGetter)     return metaProperty.getProperty(instance);
 else {
      metaProperty.setProperty(instance,optionalValue);
      return null;
    }
  }
  throw new MissingPropertyExceptionNoStack(propertyName,theClass);
}
