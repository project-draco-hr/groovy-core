{
  if (GroovySystem.isUseReflection()) {
    reflector=SKIP_REFLECTOR;
  }
 else {
    reflector=((MetaClassRegistryImpl)registry).loadReflector(theClass,allMethods);
    if (reflector == null) {
      reflector=SKIP_REFLECTOR;
      return;
    }
    for (Iterator iter=allMethods.iterator(); iter.hasNext(); ) {
      StdMetaMethod metaMethod=(StdMetaMethod)iter.next();
      metaMethod.setReflector(reflector);
    }
  }
}
