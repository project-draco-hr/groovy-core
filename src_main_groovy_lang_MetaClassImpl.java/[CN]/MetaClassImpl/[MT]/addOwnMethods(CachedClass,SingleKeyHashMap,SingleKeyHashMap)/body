{
  MetaMethod[] cachedMethods=aClass.getMetaMethods();
  for (int i=0; i < cachedMethods.length; i++) {
    final MetaMethod method=cachedMethods[i];
    if (method.getName().indexOf('+') >= 0) {
      continue;
    }
    if (method instanceof NewMetaMethod) {
      if (!newGroovyMethodsSet.contains(method)) {
        newGroovyMethodsSet.add(method);
        addMetaMethodToIndex(method,methodIndex,staticMethodIndex);
      }
    }
 else {
      addToAllMethodsIfPublic(method);
      addMetaMethodToIndex(method,methodIndex,staticMethodIndex);
    }
  }
}
