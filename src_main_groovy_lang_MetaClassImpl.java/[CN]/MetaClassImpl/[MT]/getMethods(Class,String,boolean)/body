{
  Object answer;
  final MetaMethodIndex.Entry entry=metaMethodIndex.getMethods(sender,name);
  if (entry == null)   answer=FastArray.EMPTY_LIST;
 else   if (isCallToSuper) {
    answer=entry.methodsForSuper;
  }
 else {
    answer=entry.methods;
  }
  if (answer == null)   answer=FastArray.EMPTY_LIST;
  if (!isCallToSuper && GroovyCategorySupport.hasCategoryInAnyThread()) {
    List used=GroovyCategorySupport.getCategoryMethods(sender,name);
    if (used != null) {
      FastArray arr;
      if (answer instanceof MetaMethod) {
        arr=new FastArray();
        arr.add(answer);
      }
 else       arr=((FastArray)answer).copy();
      for (Iterator iter=used.iterator(); iter.hasNext(); ) {
        MetaMethod element=(MetaMethod)iter.next();
        final int found=findMatchingMethod(arr,element);
        if (found != -1)         arr.set(found,element);
 else         arr.add(element);
      }
      answer=arr;
    }
  }
  return answer;
}
