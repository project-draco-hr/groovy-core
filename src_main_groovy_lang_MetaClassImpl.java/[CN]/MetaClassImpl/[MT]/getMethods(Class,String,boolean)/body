{
  SingleKeyHashMap methodIndex;
  final CachedClass aClass=ReflectionCache.getCachedClass(sender);
  if (isCallToSuper) {
    methodIndex=classMethodIndexForSuper.getNullable(aClass);
  }
 else {
    methodIndex=classMethodIndex.getNullable(aClass);
  }
  List answer;
  if (methodIndex != null) {
    answer=(List)methodIndex.get(name);
    if (answer == null)     answer=Collections.EMPTY_LIST;
  }
 else {
    answer=Collections.EMPTY_LIST;
  }
  if (!isCallToSuper && GroovyCategorySupport.hasCategoryInAnyThread()) {
    List used=GroovyCategorySupport.getCategoryMethods(sender,name);
    if (used != null) {
      answer=new ArrayList(answer);
      for (Iterator iter=used.iterator(); iter.hasNext(); ) {
        MetaMethod element=(MetaMethod)iter.next();
        findOrRemoveMatchingMethod(answer,element,false);
      }
      answer.addAll(used);
    }
  }
  return answer;
}
