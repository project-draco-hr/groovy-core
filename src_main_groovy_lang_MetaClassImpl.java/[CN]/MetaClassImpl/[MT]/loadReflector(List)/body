{
  String name=getReflectorName();
  ReflectorGenerator generator=new ReflectorGenerator(methods);
  try {
    ClassWriter cw=new ClassWriter(true);
    generator.generate(cw,name);
    byte[] bytecode=cw.toByteArray();
    ClassLoader loader=(ClassLoader)AccessController.doPrivileged(new PrivilegedAction(){
      public Object run(){
        return theClass.getClassLoader();
      }
    }
);
    Class type=registry.createReflectorClass(loader,name,bytecode);
    return (Reflector)type.newInstance();
  }
 catch (  Exception e) {
    e.printStackTrace();
    throw new GroovyRuntimeException("Could not generate and load the reflector for class: " + name + ". Reason: "+ e,e);
  }
}
