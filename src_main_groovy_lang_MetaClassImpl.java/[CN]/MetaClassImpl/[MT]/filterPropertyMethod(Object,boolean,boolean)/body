{
  Object ret=null;
  if (methodOrList instanceof MetaMethod) {
    MetaMethod element=(MetaMethod)methodOrList;
    int parameterCount=element.getParameterTypes().length;
    if (!isGetter && parameterCount == 1) {
      ret=element;
    }
    Class returnType=element.getReturnType();
    if (isGetter && !(returnType == Void.class || returnType == Void.TYPE) && (!booleanGetter || returnType == Boolean.class || returnType == Boolean.TYPE)&& parameterCount == 0) {
      ret=element;
    }
  }
  if (methodOrList instanceof FastArray) {
    FastArray methods=(FastArray)methodOrList;
    final int len=methods.size();
    final Object[] data=methods.getArray();
    for (int i=0; i != len; ++i) {
      MetaMethod element=(MetaMethod)data[i];
      int parameterCount=element.getParameterTypes().length;
      if (!isGetter && parameterCount == 1) {
        ret=addElementToList(ret,element);
      }
      Class returnType=element.getReturnType();
      if (isGetter && !(returnType == Void.class || returnType == Void.TYPE) && parameterCount == 0) {
        ret=addElementToList(ret,element);
      }
    }
  }
  if (ret == null || (ret instanceof MetaMethod) || !isGetter) {
    return ret;
  }
  MetaMethod method=null;
  int distance=-1;
  for (  final Object o : ((List)ret)) {
    MetaMethod element=(MetaMethod)o;
    int localDistance=distanceToObject(element.getReturnType());
    if (distance == -1 || distance > localDistance) {
      distance=localDistance;
      method=element;
    }
  }
  return method;
}
