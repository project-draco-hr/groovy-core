{
  Class[] interfaces=metaClass.getTheClass().getInterfaces();
  MetaMethod method=null;
  for (  Class anInterface : interfaces) {
    MetaClass infMetaClass=GroovySystem.getMetaClassRegistry().getMetaClass(anInterface);
    MetaMethod infMethod=searchInterfacesForMetaMethod(instanceKlazz,methodName,arguments,infMetaClass);
    if (infMethod != null) {
      if (method == null)       method=infMethod;
 else       method=mostSpecific(method,infMethod,instanceKlazz);
    }
  }
  method=findSubClassMethod(instanceKlazz,methodName,arguments,metaClass,method);
  method=findOwnMethod(instanceKlazz,methodName,arguments,metaClass,method);
  return method;
}
