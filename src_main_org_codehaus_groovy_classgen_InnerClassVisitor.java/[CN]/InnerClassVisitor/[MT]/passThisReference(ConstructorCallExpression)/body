{
  ClassNode cn=call.getType().redirect();
  if (!shouldHandleImplicitThisForInnerClass(cn))   return;
  boolean isInStaticContext=true;
  if (currentMethod != null)   isInStaticContext=currentMethod.getVariableScope().isInStaticContext();
 else   if (currentField != null)   isInStaticContext=currentField.isStatic();
 else   if (processingObjInitStatements)   isInStaticContext=false;
  if (isInStaticContext) {
    Expression args=call.getArguments();
    if (args instanceof TupleExpression && ((TupleExpression)args).getExpressions().isEmpty()) {
      addError("No enclosing instance passed in constructor call of a non-static inner class",call);
    }
    return;
  }
  insertThis0ToSuperCall(call,cn);
}
