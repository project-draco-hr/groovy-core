{
  final Class selfClass=self.getClass();
  ArrayList arr=findCategoryMethods(selfClass,categoryClasses);
  MetaClass metaClass=self.getMetaClass();
  if (metaClass.getClass() == MetaClassImpl.class) {
    MetaClassImpl mc=(MetaClassImpl)metaClass;
    MetaMethod mm[]=mc.getAdditionalMetaMethods();
    arr.addAll(0,Arrays.asList(mm));
    final MetaClassImpl newMetaClass=new MetaClassImpl(mc.getTheClass(),(MetaMethod[])arr.toArray(new MetaMethod[arr.size()]));
    newMetaClass.initialize();
    self.setMetaClass(newMetaClass);
    return;
  }
  if (metaClass.getClass() == ExpandoMetaClass.class) {
    ExpandoMetaClass mc=(ExpandoMetaClass)metaClass;
    MetaMethod mm[]=mc.getAdditionalMetaMethods();
    arr.addAll(0,Arrays.asList(mm));
    final ExpandoMetaClass newMetaClass=new ExpandoMetaClass(mc.getTheClass(),(MetaMethod[])arr.toArray(new MetaMethod[arr.size()]));
    for (Iterator it=mc.getExpandoMethods().iterator(); it.hasNext(); ) {
      newMetaClass.registerInstanceMethod((MetaMethod)it.next());
    }
    newMetaClass.initialize();
    self.setMetaClass(newMetaClass);
    return;
  }
  throw new GroovyRuntimeException("Can't mixin " + selfClass + ". Meta class: "+ metaClass);
}
