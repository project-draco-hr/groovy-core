{
  if (arg instanceof Object[]) {
    printf(self,format,(Object[])arg);
    return;
  }
  if (arg instanceof List) {
    printf(self,format,((List)arg).toArray());
    return;
  }
  if (!arg.getClass().isArray()) {
    Object[] o=(Object[])java.lang.reflect.Array.newInstance(arg.getClass(),1);
    o[0]=arg;
    printf(self,format,o);
    return;
  }
  Object[] ans;
  String elemType=arg.getClass().getName();
  if (elemType.equals("[I")) {
    int[] ia=(int[])arg;
    ans=new Integer[ia.length];
    for (int i=0; i < ia.length; i++) {
      ans[i]=new Integer(ia[i]);
    }
  }
 else   if (elemType.equals("[C")) {
    char[] ia=(char[])arg;
    ans=new Character[ia.length];
    for (int i=0; i < ia.length; i++) {
      ans[i]=new Character(ia[i]);
    }
  }
 else   if (elemType.equals("[Z")) {
    boolean[] ia=(boolean[])arg;
    ans=new Boolean[ia.length];
    for (int i=0; i < ia.length; i++) {
      ans[i]=new Boolean(ia[i]);
    }
  }
 else   if (elemType.equals("[B")) {
    byte[] ia=(byte[])arg;
    ans=new Byte[ia.length];
    for (int i=0; i < ia.length; i++) {
      ans[i]=new Byte(ia[i]);
    }
  }
 else   if (elemType.equals("[S")) {
    short[] ia=(short[])arg;
    ans=new Short[ia.length];
    for (int i=0; i < ia.length; i++) {
      ans[i]=new Short(ia[i]);
    }
  }
 else   if (elemType.equals("[F")) {
    float[] ia=(float[])arg;
    ans=new Float[ia.length];
    for (int i=0; i < ia.length; i++) {
      ans[i]=new Float(ia[i]);
    }
  }
 else   if (elemType.equals("[J")) {
    long[] ia=(long[])arg;
    ans=new Long[ia.length];
    for (int i=0; i < ia.length; i++) {
      ans[i]=new Long(ia[i]);
    }
  }
 else   if (elemType.equals("[D")) {
    double[] ia=(double[])arg;
    ans=new Double[ia.length];
    for (int i=0; i < ia.length; i++) {
      ans[i]=new Double(ia[i]);
    }
  }
 else {
    throw new RuntimeException("printf(String," + arg + ")");
  }
  printf(self,format,ans);
}
