{
  return new Writable(){
    public Writer writeTo(    final Writer writer) throws IOException {
      int charCount=0;
      final int dLimit=(data.length / 3) * 3;
      for (int dIndex=0; dIndex != dLimit; dIndex+=3) {
        int d=((data[dIndex] & 0XFF) << 16) | ((data[dIndex + 1] & 0XFF) << 8) | (data[dIndex + 2] & 0XFF);
        writer.write(T_TABLE[d >> 18]);
        writer.write(T_TABLE[(d >> 12) & 0X3F]);
        writer.write(T_TABLE[(d >> 6) & 0X3F]);
        writer.write(T_TABLE[d & 0X3F]);
        if (++charCount == 18) {
          writer.write('\n');
          charCount=0;
        }
      }
      if (dLimit != data.length) {
        int d=(data[dLimit] & 0XFF) << 16;
        if (dLimit + 1 != data.length) {
          d|=(data[dLimit + 1] & 0XFF) << 8;
        }
        writer.write(T_TABLE[d >> 18]);
        writer.write(T_TABLE[(d >> 12) & 0X3F]);
        writer.write((dLimit + 1 < data.length) ? T_TABLE[(d >> 6) & 0X3F] : '=');
        writer.write('=');
      }
      return writer;
    }
    public String toString(){
      StringWriter buffer=new StringWriter();
      try {
        writeTo(buffer);
      }
 catch (      IOException e) {
        throw new StringWriterIOException(e);
      }
      return buffer.toString();
    }
  }
;
}
