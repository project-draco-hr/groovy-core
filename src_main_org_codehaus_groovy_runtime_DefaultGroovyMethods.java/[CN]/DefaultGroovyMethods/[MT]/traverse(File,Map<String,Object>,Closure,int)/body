{
  checkDir(self);
  final Closure pre=(Closure)options.get("preDir");
  final Closure post=(Closure)options.get("postDir");
  final FileType type=(FileType)options.get("type");
  final Object filter=options.get("filter");
  final Object excludeFilter=options.get("excludeFilter");
  final Closure sort=(Closure)options.get("sort");
  final File[] origFiles=self.listFiles();
  if (origFiles != null) {
    List<File> files=Arrays.asList(origFiles);
    if (sort != null)     files=sort(files,sort);
    for (    File file : files) {
      if (file.isDirectory()) {
        if (type != FileType.FilesOnly) {
          if (closure != null && notFiltered(file,filter,excludeFilter)) {
            Object closureResult=closure.call(file);
            if (closureResult == FileVisitResult.SKIP_SIBLINGS)             break;
            if (closureResult == FileVisitResult.TERMINATE)             return FileVisitResult.TERMINATE;
          }
        }
        if (maxDepth != 0) {
          Object preResult=null;
          if (pre != null) {
            preResult=pre.call(file);
          }
          if (preResult == FileVisitResult.SKIP_SIBLINGS)           break;
          if (preResult == FileVisitResult.TERMINATE)           return FileVisitResult.TERMINATE;
          if (preResult != FileVisitResult.SKIP_SUBTREE) {
            FileVisitResult terminated=traverse(file,options,closure,maxDepth - 1);
            if (terminated == FileVisitResult.TERMINATE)             return terminated;
          }
          Object postResult=null;
          if (post != null) {
            postResult=post.call(file);
          }
          if (postResult == FileVisitResult.SKIP_SIBLINGS)           break;
          if (postResult == FileVisitResult.TERMINATE)           return FileVisitResult.TERMINATE;
        }
      }
 else       if (type != FileType.DirectoriesOnly) {
        if (closure != null && notFiltered(file,filter,excludeFilter)) {
          Object closureResult=closure.call(file);
          if (closureResult == FileVisitResult.SKIP_SIBLINGS)           break;
          if (closureResult == FileVisitResult.TERMINATE)           return FileVisitResult.TERMINATE;
        }
      }
    }
  }
  return FileVisitResult.CONTINUE;
}
