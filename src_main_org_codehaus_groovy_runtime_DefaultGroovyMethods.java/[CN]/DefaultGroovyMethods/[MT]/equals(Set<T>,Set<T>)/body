{
  if (self == null) {
    return other == null;
  }
  if (other == null) {
    return false;
  }
  if (self == other) {
    return true;
  }
  if (self.size() != other.size()) {
    return false;
  }
  final Iterator<T> it1=self.iterator();
  Collection<T> otherItems=new HashSet<T>(other);
  while (it1.hasNext()) {
    final Object o1=it1.next();
    final Iterator<T> it2=otherItems.iterator();
    T foundItem=null;
    boolean found=false;
    while (it2.hasNext() && foundItem == null) {
      final T o2=it2.next();
      if (coercedEquals(o1,o2)) {
        foundItem=o2;
        found=true;
      }
    }
    if (!found)     return false;
    otherItems.remove(foundItem);
  }
  return otherItems.size() == 0;
}
