{
  final Options options=new Options();
  options.addOption(OptionBuilder.withLongOpt("classpath").hasArg().withArgName("path").withDescription("Specify where to find the class files.").create());
  options.addOption(OptionBuilder.withArgName("property=value").withValueSeparator('=').hasArgs(2).create('J'));
  options.addOption(OptionBuilder.withArgName("flag").hasArg().create('F'));
  options.addOption(OptionBuilder.withLongOpt("jointCompilation").create('j'));
  final PosixParser cliParser=new PosixParser();
  CommandLine cli=null;
  try {
    cli=cliParser.parse(options,args);
  }
 catch (  final ParseException e) {
    throw new BuildException(e);
  }
  if (cli.hasOption("classpath")) {
    setClasspath(new Path(project,cli.getOptionValue("classpath")));
  }
  jointCompilation=cli.hasOption('j');
  if (jointCompilation) {
    final Map compilerOptions=new HashMap();
    compilerOptions.put("namedValues",cli.getOptionValues('J'));
    compilerOptions.put("flags",cli.getOptionValues('F'));
    compilerOptions.put("stubDir",createTempDir());
    configuration.setJointCompilationOptions(compilerOptions);
  }
  return cli.getArgs();
}
