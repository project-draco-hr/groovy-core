{
  ClassNode type=definition.getClassNode();
  if ("java.lang.annotation.Retention".equals(type.getName())) {
    Expression exp=definition.getMember("value");
    if (!(exp instanceof PropertyExpression))     return;
    PropertyExpression pe=(PropertyExpression)exp;
    String name=pe.getPropertyAsString();
    RetentionPolicy policy=RetentionPolicy.valueOf(name);
    setRetentionPolicy(policy,root);
  }
 else   if ("java.lang.annotation.Target".equals(type.getName())) {
    Expression exp=definition.getMember("value");
    if (!(exp instanceof ListExpression))     return;
    ListExpression le=(ListExpression)exp;
    int bitmap=0;
    for (    Expression e : le.getExpressions()) {
      if (!(e instanceof PropertyExpression))       return;
      PropertyExpression element=(PropertyExpression)e;
      String name=element.getPropertyAsString();
      ElementType value=ElementType.valueOf(name);
      bitmap|=getElementCode(value);
    }
    root.setAllowedTargets(bitmap);
  }
}
