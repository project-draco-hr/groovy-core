{
  onLineNumber(statement);
  CatchStatement catchStatement=statement.getCatchStatement(0);
  if (catchStatement == null) {
    final Label l0=new Label();
    cv.visitLabel(l0);
    statement.getTryStatement().visit(this);
    int index1=defineVariable(this.createVariableName("exception"),"java.lang.Object").getIndex();
    int index2=defineVariable(this.createVariableName("exception"),"java.lang.Object").getIndex();
    final Label l1=new Label();
    cv.visitJumpInsn(JSR,l1);
    final Label l2=new Label();
    cv.visitLabel(l2);
    final Label l3=new Label();
    cv.visitJumpInsn(GOTO,l3);
    final Label l4=new Label();
    cv.visitLabel(l4);
    cv.visitVarInsn(ASTORE,index1);
    cv.visitJumpInsn(JSR,l1);
    final Label l5=new Label();
    cv.visitLabel(l5);
    cv.visitVarInsn(ALOAD,index1);
    cv.visitInsn(ATHROW);
    cv.visitLabel(l1);
    cv.visitVarInsn(ASTORE,index2);
    statement.getFinallyStatement().visit(this);
    cv.visitVarInsn(RET,index2);
    cv.visitLabel(l3);
    exceptionBlocks.add(new Runnable(){
      public void run(){
        cv.visitTryCatchBlock(l0,l2,l4,null);
        cv.visitTryCatchBlock(l4,l5,l4,null);
      }
    }
);
  }
 else {
    String exceptionVar=catchStatement.getVariable();
    String exceptionType=checkValidType(catchStatement.getExceptionType(),catchStatement,"in catch statement");
    int exceptionIndex=defineVariable(exceptionVar,exceptionType,false).getIndex();
    int index2=defineVariable(this.createVariableName("exception"),"java.lang.Object").getIndex();
    int index3=defineVariable(this.createVariableName("exception"),"java.lang.Object").getIndex();
    final Label l0=new Label();
    cv.visitLabel(l0);
    statement.getTryStatement().visit(this);
    final Label l1=new Label();
    cv.visitLabel(l1);
    Label l2=new Label();
    cv.visitJumpInsn(JSR,l2);
    final Label l3=new Label();
    cv.visitLabel(l3);
    Label l4=new Label();
    cv.visitJumpInsn(GOTO,l4);
    final Label l5=new Label();
    cv.visitLabel(l5);
    cv.visitVarInsn(ASTORE,exceptionIndex);
    if (catchStatement != null) {
      catchStatement.visit(this);
    }
    cv.visitJumpInsn(JSR,l2);
    final Label l6=new Label();
    cv.visitLabel(l6);
    cv.visitJumpInsn(GOTO,l4);
    final Label l7=new Label();
    cv.visitLabel(l7);
    cv.visitVarInsn(ASTORE,index2);
    cv.visitJumpInsn(JSR,l2);
    final Label l8=new Label();
    cv.visitLabel(l8);
    cv.visitVarInsn(ALOAD,index2);
    cv.visitInsn(ATHROW);
    cv.visitLabel(l2);
    cv.visitVarInsn(ASTORE,index3);
    statement.getFinallyStatement().visit(this);
    cv.visitVarInsn(RET,index3);
    cv.visitLabel(l4);
    final String exceptionTypeInternalName=(catchStatement != null) ? getClassInternalName(exceptionType) : null;
    exceptionBlocks.add(new Runnable(){
      public void run(){
        cv.visitTryCatchBlock(l0,l1,l5,exceptionTypeInternalName);
        cv.visitTryCatchBlock(l0,l3,l7,null);
        cv.visitTryCatchBlock(l5,l6,l7,null);
        cv.visitTryCatchBlock(l7,l8,l7,null);
      }
    }
);
  }
}
