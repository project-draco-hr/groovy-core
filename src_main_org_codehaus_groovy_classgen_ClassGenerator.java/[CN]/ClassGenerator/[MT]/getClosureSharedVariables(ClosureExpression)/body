{
  VariableScopeCodeVisitor outerVisitor=new VariableScopeCodeVisitor();
  VariableScopeCodeVisitor innerVisitor=new VariableScopeCodeVisitor();
  methodNode.getCode().visit(outerVisitor);
  expression.getCode().visit(innerVisitor);
  Set outerDecls=outerVisitor.getDeclaredVariables();
  Set outerRefs=outerVisitor.getReferencedVariables();
  Set innerDecls=innerVisitor.getDeclaredVariables();
  Set innerRefs=innerVisitor.getReferencedVariables();
  List vars=new ArrayList();
  Set varSet=new HashSet();
  for (Iterator iter=innerRefs.iterator(); iter.hasNext(); ) {
    String var=(String)iter.next();
    if (outerDecls.contains(var) && classNode.getField(var) == null) {
      String type=getVariableType(var);
      vars.add(new Parameter(type,var));
      varSet.add(var);
    }
  }
  for (Iterator iter=outerRefs.iterator(); iter.hasNext(); ) {
    String var=(String)iter.next();
    if (innerDecls.contains(var) && classNode.getField(var) == null && !varSet.contains(var)) {
      String type=getVariableType(var);
      vars.add(new Parameter(type,var));
    }
  }
  Parameter[] answer=new Parameter[vars.size()];
  vars.toArray(answer);
  return answer;
}
