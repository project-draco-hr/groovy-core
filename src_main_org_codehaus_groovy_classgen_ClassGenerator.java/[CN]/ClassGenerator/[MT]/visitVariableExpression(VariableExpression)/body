{
  String variableName=expression.getVariable();
  if (isStaticMethod() && variableName.equals("this")) {
    visitClassExpression(new ClassExpression(classNode.getName()));
    return;
  }
  if (variableName.equals("super")) {
    visitClassExpression(new ClassExpression(classNode.getSuperClass()));
    return;
  }
  String className=classNode.getClassNameForExpression(variableName);
  if (className != null) {
    visitClassExpression(new ClassExpression(className));
    return;
  }
  FieldNode field=classNode.getField(variableName);
  if (field != null && variableStack.get(variableName) == null) {
    visitFieldExpression(new FieldExpression(field));
  }
 else {
    field=classNode.getOuterField(variableName);
    if (field != null) {
      visitOuterFieldExpression(new FieldExpression(field));
    }
 else {
      String name=variableName;
      Variable variable=null;
      if (!leftHandExpression) {
        variable=(Variable)variableStack.get(name);
      }
 else {
        variable=defineVariable(name,"java.lang.Object");
      }
      if (variable == null) {
        variable=defineVariable(name,"java.lang.Object",false);
        visitPropertyExpression(new PropertyExpression(VariableExpression.THIS_EXPRESSION,name));
        cv.visitInsn(DUP);
        cv.visitVarInsn(ASTORE,variable.getIndex());
        return;
      }
      String type=variable.getType();
      int index=variable.getIndex();
      lastVariableIndex=index;
      if (leftHandExpression) {
        if (type.equals("double")) {
          cv.visitVarInsn(DSTORE,index);
        }
 else         if (type.equals("float")) {
          cv.visitVarInsn(FSTORE,index);
        }
 else         if (type.equals("long")) {
          cv.visitVarInsn(LSTORE,index);
        }
 else         if (type.equals("byte") || type.equals("short") || type.equals("boolean")|| type.equals("int")) {
          cv.visitVarInsn(ISTORE,index);
        }
 else {
          cv.visitVarInsn(ASTORE,index);
        }
      }
 else {
        if (type.equals("double")) {
          cv.visitVarInsn(DLOAD,index);
        }
 else         if (type.equals("float")) {
          cv.visitVarInsn(FLOAD,index);
        }
 else         if (type.equals("long")) {
          cv.visitVarInsn(LLOAD,index);
        }
 else         if (type.equals("byte") || type.equals("short") || type.equals("boolean")|| type.equals("int")) {
          cv.visitVarInsn(ILOAD,index);
        }
 else {
          cv.visitVarInsn(ALOAD,index);
        }
      }
    }
  }
}
