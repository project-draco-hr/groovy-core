{
  this.leftHandExpression=false;
  Expression arguments=call.getArguments();
  if (arguments instanceof TupleExpression) {
    TupleExpression tupleExpression=(TupleExpression)arguments;
    int size=tupleExpression.getExpressions().size();
    if (size == 0) {
      arguments=ConstantExpression.EMPTY_ARRAY;
    }
 else     if (size == 1) {
      arguments=(Expression)tupleExpression.getExpressions().get(0);
    }
  }
  if (MethodCallExpression.isSuperMethodCall(call)) {
    cv.visitVarInsn(ALOAD,0);
    cv.visitVarInsn(ALOAD,1);
    cv.visitMethodInsn(INVOKESPECIAL,internalBaseClassName,"<init>","(Ljava/lang/Object;)V");
  }
 else {
    if (argumentsUseStack(arguments)) {
      int paramIdx=defineVariable(createArgumentsName(),"java.lang.Object",false).getIndex();
      arguments.visit(this);
      cv.visitVarInsn(ASTORE,paramIdx);
      call.getObjectExpression().visit(this);
      cv.visitLdcInsn(call.getMethod());
      cv.visitVarInsn(ALOAD,paramIdx);
      idx--;
    }
 else {
      call.getObjectExpression().visit(this);
      cv.visitLdcInsn(call.getMethod());
      arguments.visit(this);
    }
    invokeMethodMethod.call(cv);
  }
}
