{
  Expression leftExpression=expression.getLeftExpression();
  if (leftExpression instanceof BinaryExpression) {
    BinaryExpression leftBinExpr=(BinaryExpression)leftExpression;
    if (leftBinExpr.getOperation().getType() == Token.LEFT_SQUARE_BRACKET) {
      visitMethodCallExpression(new MethodCallExpression(leftBinExpr.getLeftExpression(),"put",new ArgumentListExpression(new Expression[]{leftBinExpr.getRightExpression(),expression.getRightExpression()})));
      cv.visitInsn(POP);
      return;
    }
  }
  if (isNonStaticField(leftExpression)) {
    cv.visitVarInsn(ALOAD,0);
  }
  leftHandExpression=false;
  Expression rightExpression=expression.getRightExpression();
  String type=getLHSType(leftExpression);
  if (type != null) {
    visitCastExpression(new CastExpression(type,rightExpression));
  }
 else {
    visitAndAutobox(rightExpression);
  }
  leftHandExpression=true;
  leftExpression.visit(this);
  leftHandExpression=false;
}
