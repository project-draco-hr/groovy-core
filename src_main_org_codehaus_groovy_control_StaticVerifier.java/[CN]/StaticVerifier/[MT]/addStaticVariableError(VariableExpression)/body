{
  if (!inSpecialConstructorCall && (inClosure || !ve.isInStaticContext()))   return;
  if (ve.isThisExpression() || ve.isSuperExpression())   return;
  Variable v=ve.getAccessedVariable();
  if (currentMethod != null && currentMethod.isStatic()) {
    FieldNode fieldNode=getDeclaredOrInheritedField(currentMethod.getDeclaringClass(),ve.getName());
    if (fieldNode != null && fieldNode.isStatic())     return;
  }
  if (v != null && !(v instanceof DynamicVariable) && v.isInStaticContext())   return;
  addError("Apparent variable '" + ve.getName() + "' was found in a static scope but doesn't refer"+ " to a local variable, static field or class. Possible causes:\n"+ "You attempted to reference a variable in the binding or an instance variable from a static context.\n"+ "You misspelled a classname or statically imported field. Please check the spelling.\n"+ "You attempted to use a method '"+ ve.getName()+ "' but left out brackets in a place not allowed by the grammar.",ve);
}
