{
  if (visit == OPENING_VISIT) {
    insideMethod=true;
    if (!insideEnum) {
      if (!insideAnonymousInnerClass()) {
        String methodName=t.childOfType(IDENT).getText();
        currentMethodDoc=new SimpleGroovyMethodDoc(methodName,currentClassDoc);
        String commentText=getJavaDocCommentsBeforeNode(t);
        currentMethodDoc.setRawCommentText(commentText);
        processModifiers(t,currentMethodDoc);
        String returnTypeName=getTypeOrDefault(t);
        SimpleGroovyType returnType=new SimpleGroovyType(returnTypeName);
        currentMethodDoc.setReturnType(returnType);
        addParametersTo(t,currentMethodDoc);
        processAnnotations(t,currentMethodDoc);
        currentClassDoc.add(currentMethodDoc);
      }
    }
  }
 else   if (visit == CLOSING_VISIT) {
    insideMethod=false;
    currentMethodDoc=null;
  }
}
