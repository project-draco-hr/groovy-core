{
  if (cn == null)   return null;
  if (cn.isScript()) {
    return new DynamicVariable(name,false);
  }
  List l=cn.getFields();
  for (Iterator iter=l.iterator(); iter.hasNext(); ) {
    FieldNode f=(FieldNode)iter.next();
    if (f.getName().equals(name))     return f;
  }
  l=cn.getMethods();
  for (Iterator iter=l.iterator(); iter.hasNext(); ) {
    MethodNode f=(MethodNode)iter.next();
    String methodName=f.getName();
    String pName=getPropertyName(f);
    if (pName == null)     continue;
    if (!pName.equals(name))     continue;
    PropertyNode var=new PropertyNode(pName,f.getModifiers(),getPropertyType(f),cn,null,null,null);
    return var;
  }
  l=cn.getProperties();
  for (Iterator iter=l.iterator(); iter.hasNext(); ) {
    PropertyNode f=(PropertyNode)iter.next();
    if (f.getName().equals(name))     return f;
  }
  Variable ret=findClassMember(cn.getSuperClass(),name);
  if (ret != null)   return ret;
  return findClassMember(cn.getOuterClass(),name);
}
