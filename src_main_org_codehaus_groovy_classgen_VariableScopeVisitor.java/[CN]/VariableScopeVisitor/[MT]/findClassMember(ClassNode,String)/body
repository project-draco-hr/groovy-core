{
  if (cn == null)   return null;
  if (cn.isScript()) {
    return new DynamicVariable(name,false);
  }
  for (  FieldNode fn : cn.getFields()) {
    if (fn.getName().equals(name))     return fn;
  }
  for (  MethodNode mn : cn.getMethods()) {
    String pName=getPropertyName(mn);
    if (pName != null && pName.equals(name))     return new PropertyNode(pName,mn.getModifiers(),getPropertyType(mn),cn,null,null,null);
  }
  for (  PropertyNode pn : cn.getProperties()) {
    if (pn.getName().equals(name))     return pn;
  }
  Variable ret=findClassMember(cn.getSuperClass(),name);
  if (ret != null)   return ret;
  return findClassMember(cn.getOuterClass(),name);
}
