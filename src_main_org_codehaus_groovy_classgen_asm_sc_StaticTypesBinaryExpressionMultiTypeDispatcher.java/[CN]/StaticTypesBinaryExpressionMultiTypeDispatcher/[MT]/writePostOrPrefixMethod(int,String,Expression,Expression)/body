{
  MethodNode mn=(MethodNode)orig.getNodeMetaData(StaticTypesMarker.DIRECT_METHOD_CALL_TARGET);
  WriterController controller=getController();
  OperandStack operandStack=controller.getOperandStack();
  if (mn != null) {
    operandStack.pop();
    MethodCallExpression call=new MethodCallExpression(expression,method,ArgumentListExpression.EMPTY_ARGUMENTS);
    call.setMethodTarget(mn);
    call.visit(controller.getAcg());
    return;
  }
  ClassNode top=operandStack.getTopOperand();
  if (ClassHelper.isPrimitiveType(top) && (ClassHelper.isNumberType(top) || char_TYPE.equals(top))) {
    MethodVisitor mv=controller.getMethodVisitor();
    if (WideningCategories.isIntCategory(top) || char_TYPE.equals(top)) {
      mv.visitInsn(ICONST_1);
    }
 else     if (long_TYPE.equals(top)) {
      mv.visitInsn(LCONST_1);
    }
 else     if (float_TYPE.equals(top)) {
      mv.visitInsn(FCONST_1);
    }
 else     if (double_TYPE.equals(top)) {
      mv.visitInsn(DCONST_1);
    }
    if ("next".equals(method)) {
      if (WideningCategories.isIntCategory(top) || char_TYPE.equals(top)) {
        mv.visitInsn(IADD);
      }
 else       if (long_TYPE.equals(top)) {
        mv.visitInsn(LADD);
      }
 else       if (float_TYPE.equals(top)) {
        mv.visitInsn(FADD);
      }
 else       if (double_TYPE.equals(top)) {
        mv.visitInsn(DADD);
      }
    }
 else {
      if (WideningCategories.isIntCategory(top) || char_TYPE.equals(top)) {
        mv.visitInsn(ISUB);
      }
 else       if (long_TYPE.equals(top)) {
        mv.visitInsn(LSUB);
      }
 else       if (float_TYPE.equals(top)) {
        mv.visitInsn(FSUB);
      }
 else       if (double_TYPE.equals(top)) {
        mv.visitInsn(DSUB);
      }
    }
    return;
  }
  super.writePostOrPrefixMethod(op,method,expression,orig);
}
