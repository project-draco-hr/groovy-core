{
  GenericsType[] genericsTypes=classNode.getGenericsTypes();
  if (genericsTypes != null && genericsTypes.length == 0)   return true;
  if (classNode.isGenericsPlaceHolder()) {
    if (genericsTypes == null)     return true;
    if (isWildcard()) {
      if (lowerBound != null)       return genericsTypes[0].getName().equals(lowerBound.getUnresolvedName());
      if (upperBounds != null) {
        for (        ClassNode upperBound : upperBounds) {
          String name=upperBound.getGenericsTypes()[0].getName();
          if (genericsTypes[0].getName().equals(name))           return true;
        }
        return false;
      }
    }
    return genericsTypes[0].getName().equals(name);
  }
  if (wildcard || placeholder) {
    if (upperBounds != null) {
      boolean upIsOk=true;
      for (int i=0, upperBoundsLength=upperBounds.length; i < upperBoundsLength && upIsOk; i++) {
        final ClassNode upperBound=upperBounds[i];
        upIsOk=implementsInterfaceOrIsSubclassOf(classNode,upperBound);
      }
      upIsOk=upIsOk && checkGenerics(classNode);
      return upIsOk;
    }
    if (lowerBound != null) {
      return implementsInterfaceOrIsSubclassOf(lowerBound,classNode) && checkGenerics(classNode);
    }
  }
  if ((type != null && !type.equals(classNode))) {
    return false;
  }
  return type == null || compareGenericsWithBound(classNode,type);
}
