{
  if (!isCompilable())   return;
  ClassWriter cw=new ClassWriter(true);
  final CachedClass declClass=getDeclaringClass();
  final Class acls=declClass.getTheClass();
  final String name;
  if (declClass.getName().startsWith("java."))   name=acls.getName().replace('.','_') + "$" + getName();
 else   name=declClass.getName() + "$" + getName();
  final byte[] bytes=genPogoMetaMethodSite(cw,name);
  final Class pogoSiteClass=AccessController.doPrivileged(new PrivilegedAction<Class>(){
    public Class run(){
      return new MyClassLoader(acls,name,bytes).cls;
    }
  }
);
  if (pogoSiteClass != null) {
    try {
      final Constructor constructor=pogoSiteClass.getConstructor(CallSite.class,MetaClassImpl.class,MetaMethod.class,Class[].class);
      pogoCallSiteConstructor=new SoftReference<Constructor>(constructor);
    }
 catch (    NoSuchMethodException e) {
      pogoCallSiteConstructor=null;
    }
  }
}
