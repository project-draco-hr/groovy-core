{
  MethodVisitor mv;
  cw.visit(V1_4,ACC_PUBLIC,name,null,"org/codehaus/groovy/runtime/callsite/PogoMetaMethodSite",null);
{
    mv=cw.visitMethod(ACC_PUBLIC,"<init>","(Lorg/codehaus/groovy/runtime/callsite/CallSite;Lgroovy/lang/MetaClassImpl;Lgroovy/lang/MetaMethod;[Ljava/lang/Class;)V",null,null);
    mv.visitCode();
    mv.visitVarInsn(ALOAD,0);
    mv.visitVarInsn(ALOAD,1);
    mv.visitVarInsn(ALOAD,2);
    mv.visitVarInsn(ALOAD,3);
    mv.visitVarInsn(ALOAD,4);
    mv.visitMethodInsn(INVOKESPECIAL,"org/codehaus/groovy/runtime/callsite/PogoMetaMethodSite","<init>","(Lorg/codehaus/groovy/runtime/callsite/CallSite;Lgroovy/lang/MetaClassImpl;Lgroovy/lang/MetaMethod;[Ljava/lang/Class;)V");
    mv.visitInsn(RETURN);
    mv.visitMaxs(0,0);
    mv.visitEnd();
  }
{
    mv=cw.visitMethod(ACC_PUBLIC,"callCurrent","(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;",null,new String[]{"java/lang/Throwable"});
    mv.visitCode();
    mv.visitVarInsn(ALOAD,0);
    mv.visitVarInsn(ALOAD,1);
    mv.visitVarInsn(ALOAD,2);
    mv.visitMethodInsn(INVOKEVIRTUAL,"org/codehaus/groovy/runtime/callsite/PogoMetaMethodSite","checkCallCurrent","(Ljava/lang/Object;[Ljava/lang/Object;)Z");
    Label l0=new Label();
    mv.visitJumpInsn(IFEQ,l0);
    mv.visitVarInsn(ALOAD,0);
    mv.visitVarInsn(ALOAD,1);
    mv.visitVarInsn(ALOAD,2);
    BytecodeHelper helper=new BytecodeHelper(mv);
    Class callClass=getDeclaringClass().getCachedClass();
    boolean useInterface=callClass.isInterface();
    String type=BytecodeHelper.getClassInternalName(callClass.getName());
    String descriptor=BytecodeHelper.getMethodDescriptor(getReturnType(),getNativeParameterTypes());
    if (isStatic()) {
      genLoadParameters(2,mv,helper);
      mv.visitMethodInsn(INVOKESTATIC,type,getName(),descriptor);
    }
 else {
      mv.visitVarInsn(ALOAD,1);
      helper.doCast(callClass);
      genLoadParameters(2,mv,helper);
      mv.visitMethodInsn((useInterface) ? INVOKEINTERFACE : INVOKEVIRTUAL,type,getName(),descriptor);
    }
    helper.box(getReturnType());
    if (getReturnType() == void.class) {
      mv.visitInsn(ACONST_NULL);
    }
    mv.visitInsn(ARETURN);
    mv.visitLabel(l0);
    mv.visitVarInsn(ALOAD,0);
    mv.visitVarInsn(ALOAD,1);
    mv.visitVarInsn(ALOAD,2);
    mv.visitVarInsn(ALOAD,0);
    mv.visitFieldInsn(GETFIELD,"org/codehaus/groovy/runtime/callsite/PogoMetaMethodSite","array","Lorg/codehaus/groovy/runtime/callsite/CallSiteArray;");
    mv.visitFieldInsn(GETFIELD,"org/codehaus/groovy/runtime/callsite/CallSiteArray","owner","Ljava/lang/Class;");
    mv.visitMethodInsn(INVOKEVIRTUAL,"org/codehaus/groovy/runtime/callsite/PogoMetaMethodSite","createCallCurrentSite","(Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Class;)Lorg/codehaus/groovy/runtime/callsite/CallSite;");
    mv.visitVarInsn(ALOAD,1);
    mv.visitVarInsn(ALOAD,2);
    mv.visitMethodInsn(INVOKEVIRTUAL,"org/codehaus/groovy/runtime/callsite/CallSite","invoke","(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;");
    mv.visitInsn(ARETURN);
    mv.visitMaxs(4,3);
    mv.visitEnd();
  }
{
    mv=cw.visitMethod(ACC_PUBLIC | ACC_FINAL,"wantProvideCallSite","()Z",null,null);
    mv.visitCode();
    mv.visitInsn(ICONST_0);
    mv.visitInsn(IRETURN);
    mv.visitMaxs(0,0);
    mv.visitEnd();
  }
  cw.visitEnd();
  byte[] bytes=cw.toByteArray();
  return bytes;
}
