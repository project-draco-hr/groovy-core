{
  final Object[] objects=(Object[])object;
  Object newValue=arguments[1];
  Class arrayComponentClass=objects.getClass().getComponentType();
  final int index=normaliseIndex(((Integer)arguments[0]).intValue(),objects.length);
  if (newValue instanceof Number) {
    if (!arrayComponentClass.equals(newValue.getClass())) {
      Object newVal=DefaultTypeTransformation.castToType(newValue,arrayComponentClass);
      objects[index]=newVal;
      return null;
    }
  }
 else   if (Character.class.isAssignableFrom(arrayComponentClass)) {
    objects[index]=DefaultTypeTransformation.getCharFromSizeOneString(newValue);
    return null;
  }
 else   if (Number.class.isAssignableFrom(arrayComponentClass)) {
    if (newValue instanceof Character || newValue instanceof String || newValue instanceof GString) {
      Character ch=DefaultTypeTransformation.getCharFromSizeOneString(newValue);
      objects[index]=DefaultTypeTransformation.castToType(ch,arrayComponentClass);
      return null;
    }
  }
  objects[index]=arguments[1];
  return null;
}
