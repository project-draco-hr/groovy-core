{
  MethodVisitor mv=controller.getMethodVisitor();
  mv.visitVarInsn(ALOAD,0);
  if (controller.isInClosure() && !controller.getCompileStack().isImplicitThis()) {
    mv.visitMethodInsn(INVOKEVIRTUAL,"groovy/lang/Closure","getThisObject","()Ljava/lang/Object;",false);
    ClassNode expectedType=thisExpression != null ? controller.getTypeChooser().resolveType(thisExpression,controller.getOutermostClass()) : null;
    if (!ClassHelper.OBJECT_TYPE.equals(expectedType) && !ClassHelper.isPrimitiveType(expectedType)) {
      BytecodeHelper.doCast(mv,expectedType);
      controller.getOperandStack().push(expectedType);
    }
 else {
      controller.getOperandStack().push(ClassHelper.OBJECT_TYPE);
    }
  }
 else {
    controller.getOperandStack().push(controller.getClassNode());
  }
}
