{
  Expression result=propertyClassTransformer.transform(expression);
  if (result != expression) {
    result.visit(this);
    return;
  }
  Expression objectExpression=expression.getObjectExpression();
  if (isThisExpression(objectExpression)) {
    String name=expression.getProperty();
    FieldNode field=classNode.getField(name);
    if (field != null) {
      visitFieldExpression(new FieldExpression(field));
      return;
    }
  }
  boolean left=leftHandExpression;
  leftHandExpression=false;
  objectExpression.visit(this);
  leftHandExpression=left;
  cv.visitLdcInsn(expression.getProperty());
  if (isGroovyObject(objectExpression) && !expression.isSafe()) {
    if (left) {
      setGroovyObjectPropertyMethod.call(cv);
    }
 else {
      getGroovyObjectPropertyMethod.call(cv);
    }
  }
 else {
    if (expression.isSafe()) {
      if (left) {
        setPropertySafeMethod2.call(cv);
      }
 else {
        if (expression.isSpreadSafe()) {
          getPropertySpreadSafeMethod.call(cv);
        }
 else {
          getPropertySafeMethod.call(cv);
        }
      }
    }
 else {
      if (left) {
        setPropertyMethod2.call(cv);
      }
 else {
        getPropertyMethod.call(cv);
      }
    }
  }
}
