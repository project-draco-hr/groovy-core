{
  List<Expression> spreadIndexes=new ArrayList<Expression>();
  List<Expression> spreadExpressions=new ArrayList<Expression>();
  List<Expression> normalArguments=new ArrayList<Expression>();
  for (int i=0; i < expressions.size(); i++) {
    Expression expr=expressions.get(i);
    if (!(expr instanceof SpreadExpression)) {
      normalArguments.add(expr);
    }
 else {
      spreadIndexes.add(new ConstantExpression(i - spreadExpressions.size()));
      spreadExpressions.add(((SpreadExpression)expr).getExpression());
    }
  }
  visitTupleExpression(new ArgumentListExpression(normalArguments),wrap);
  (new TupleExpression(spreadExpressions)).visit(this);
  (new ArrayExpression(ClassHelper.int_TYPE,spreadIndexes,null)).visit(this);
  despreadList.call(mv);
}
