{
  this.constructorNode=null;
  this.methodNode=node;
  this.variableScope=null;
  String methodType=BytecodeHelper.getMethodDescriptor(node.getReturnType(),node.getParameters());
  cv=cw.visitMethod(node.getModifiers(),node.getName(),methodType,null,null);
  visitAnnotations(node);
  if (node.getCode() != null) {
    Label labelStart=new Label();
    cv.visitLabel(labelStart);
    helper=new BytecodeHelper(cv);
    findMutableVariables();
    resetVariableStack(node.getParameters());
    outputReturn=false;
    node.getCode().visit(this);
    if (!outputReturn) {
      cv.visitInsn(RETURN);
    }
    for (Iterator iter=exceptionBlocks.iterator(); iter.hasNext(); ) {
      Runnable runnable=(Runnable)iter.next();
      runnable.run();
    }
    exceptionBlocks.clear();
    Label labelEnd=new Label();
    cv.visitLabel(labelEnd);
    if (CREATE_DEBUG_INFO) {
      Set vars=this.variableStack.keySet();
      for (Iterator iterator=vars.iterator(); iterator.hasNext(); ) {
        String varName=(String)iterator.next();
        Variable v=(Variable)variableStack.get(varName);
        String type=v.getTypeName();
        type=BytecodeHelper.getTypeDescription(type);
        Label start=v.getStartLabel() != null ? v.getStartLabel() : labelStart;
        Label end=v.getEndLabel() != null ? v.getEndLabel() : labelEnd;
        cv.visitLocalVariable(varName,type,null,start,end,v.getIndex());
      }
    }
    cv.visitMaxs(0,0);
  }
}
