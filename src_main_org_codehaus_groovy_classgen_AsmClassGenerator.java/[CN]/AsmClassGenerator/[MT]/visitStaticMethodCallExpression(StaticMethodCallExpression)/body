{
  this.leftHandExpression=false;
  Expression arguments=call.getArguments();
  if (emptyArguments(arguments)) {
    if (this.classNode != null) {
      if (this.classNode instanceof InnerClassNode && outermostClass != null)       pushClassTypeArgument(outermostClass.getType(),outermostClass.getType());
 else       pushClassTypeArgument(this.classNode.getType(),this.classNode.getType());
      cv.visitLdcInsn(call.getOwnerType().getName());
      cv.visitLdcInsn(call.getMethod());
      invokeStaticNoArgumentsMethodAt.call(cv);
    }
 else {
      cv.visitLdcInsn(call.getOwnerType().getName());
      cv.visitLdcInsn(call.getMethod());
      invokeStaticNoArgumentsMethod.call(cv);
    }
  }
 else {
    if (arguments instanceof TupleExpression) {
      TupleExpression tupleExpression=(TupleExpression)arguments;
      int size=tupleExpression.getExpressions().size();
      if (size == 1) {
        arguments=(Expression)tupleExpression.getExpressions().get(0);
      }
    }
    if (this.classNode != null) {
      if (this.classNode instanceof InnerClassNode && outermostClass != null)       pushClassTypeArgument(outermostClass.getType(),outermostClass.getType());
 else       pushClassTypeArgument(this.classNode.getType(),this.classNode.getType());
      cv.visitLdcInsn(call.getOwnerType().getName());
      cv.visitLdcInsn(call.getMethod());
      arguments.visit(this);
      invokeStaticMethodMethodAt.call(cv);
    }
 else {
      cv.visitLdcInsn(call.getOwnerType().getName());
      cv.visitLdcInsn(call.getMethod());
      arguments.visit(this);
      invokeStaticMethodMethod.call(cv);
    }
  }
}
