{
  this.constructorNode=node;
  this.methodNode=null;
  this.variableScope=null;
  String methodType=BytecodeHelper.getMethodDescriptor(ClassHelper.VOID_TYPE,node.getParameters());
  ClassNode[] nodeExceptions=node.getExceptions();
  String[] exceptions=new String[nodeExceptions.length];
  for (int i=0; i < nodeExceptions.length; i++) {
    exceptions[i]=BytecodeHelper.getClassInternalName(nodeExceptions[i]);
  }
  cv=cw.visitMethod(node.getModifiers(),"<init>",methodType,null,exceptions);
  helper=new BytecodeHelper(cv);
  findMutableVariables();
  resetVariableStack(node.getParameters());
  Statement code=node.getCode();
  if (code == null || !firstStatementIsSuperInit(code)) {
    cv.visitVarInsn(ALOAD,0);
    cv.visitMethodInsn(INVOKESPECIAL,internalBaseClassName,"<init>","()V");
  }
  if (code != null) {
    code.visit(this);
  }
  cv.visitInsn(RETURN);
  cv.visitMaxs(0,0);
}
