{
  String variableName=expression.getName();
  ClassNode classNode=controller.getClassNode();
  if (variableName.equals("this")) {
    if (controller.isStaticMethod() || (!controller.getCompileStack().isImplicitThis() && controller.isStaticContext())) {
      if (controller.isInClosure())       classNode=controller.getOutermostClass();
      visitClassExpression(new ClassExpression(classNode));
    }
 else {
      loadThis();
    }
    return;
  }
  if (variableName.equals("super")) {
    if (controller.isStaticMethod()) {
      visitClassExpression(new ClassExpression(classNode.getSuperClass()));
    }
 else {
      loadThis();
    }
    return;
  }
  BytecodeVariable variable=controller.getCompileStack().getVariable(variableName,false);
  if (variable == null) {
    processClassVariable(variableName);
  }
 else {
    controller.getOperandStack().loadOrStoreVariable(variable,expression.isUseReferenceDirectly());
  }
  if (!controller.getCompileStack().isLHS())   controller.getAssertionWriter().record(expression);
}
