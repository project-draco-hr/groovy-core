{
  MethodVisitor mv=controller.getMethodVisitor();
  controller.getCompileStack().pushLoop(loop.getVariableScope(),loop.getStatementLabel());
  ClosureListExpression clExpr=(ClosureListExpression)loop.getCollectionExpression();
  controller.getCompileStack().pushVariableScope(clExpr.getVariableScope());
  List expressions=clExpr.getExpressions();
  int size=expressions.size();
  int condIndex=(size - 1) / 2;
  for (int i=0; i < condIndex; i++) {
    visitExpressionOrStatement(expressions.get(i));
  }
  Label continueLabel=controller.getCompileStack().getContinueLabel();
  Label breakLabel=controller.getCompileStack().getBreakLabel();
  Label cond=new Label();
  mv.visitLabel(cond);
{
    Expression condExpr=(Expression)expressions.get(condIndex);
    int mark=controller.getOperandStack().getStackLength();
    condExpr.visit(this);
    controller.getOperandStack().castToBool(mark,true);
  }
  controller.getOperandStack().jump(IFEQ,breakLabel);
  loop.getLoopBlock().visit(this);
  mv.visitLabel(continueLabel);
  for (int i=condIndex + 1; i < size; i++) {
    visitExpressionOrStatement(expressions.get(i));
  }
  mv.visitJumpInsn(GOTO,cond);
  mv.visitLabel(breakLabel);
  controller.getCompileStack().pop();
  controller.getCompileStack().pop();
}
