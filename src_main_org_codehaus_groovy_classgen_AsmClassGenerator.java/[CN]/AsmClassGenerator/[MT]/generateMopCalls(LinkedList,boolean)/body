{
  for (Iterator iter=mopCalls.iterator(); iter.hasNext(); ) {
    MethodNode method=(MethodNode)iter.next();
    String name=getMopMethodName(method,useThis);
    Parameter[] parameters=method.getParameters();
    String methodDescriptor=BytecodeHelper.getMethodDescriptor(method.getReturnType(),method.getParameters());
    cv=cw.visitMethod(Opcodes.ACC_PUBLIC & Opcodes.ACC_SYNTHETIC,name,methodDescriptor,null,null);
    cv.visitVarInsn(ALOAD,0);
    BytecodeHelper helper=new BytecodeHelper(cv);
    int newRegister=1;
    for (int i=0; i < parameters.length; i++) {
      ClassNode type=parameters[i].getType();
      helper.load(parameters[i].getType(),newRegister);
      newRegister++;
      if (type == ClassHelper.double_TYPE || type == ClassHelper.long_TYPE)       newRegister++;
    }
    cv.visitMethodInsn(INVOKESPECIAL,BytecodeHelper.getClassInternalName(method.getDeclaringClass()),method.getName(),methodDescriptor);
    helper.doReturn(method.getReturnType());
    cv.visitMaxs(0,0);
    cv.visitEnd();
    classNode.addMethod(name,Opcodes.ACC_PUBLIC & Opcodes.ACC_SYNTHETIC,method.getReturnType(),parameters,null,null);
  }
}
