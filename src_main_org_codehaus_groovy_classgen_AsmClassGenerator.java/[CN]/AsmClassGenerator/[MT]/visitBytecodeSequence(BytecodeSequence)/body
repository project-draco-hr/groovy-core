{
  MethodVisitor mv=controller.getMethodVisitor();
  List instructions=bytecodeSequence.getInstructions();
  int mark=controller.getOperandStack().getStackLength();
  for (Iterator iterator=instructions.iterator(); iterator.hasNext(); ) {
    Object part=iterator.next();
    if (part == EmptyExpression.INSTANCE) {
      mv.visitInsn(ACONST_NULL);
    }
 else     if (part instanceof Expression) {
      ((Expression)part).visit(this);
    }
 else     if (part instanceof Statement) {
      Statement stm=(Statement)part;
      stm.visit(this);
      mv.visitInsn(ACONST_NULL);
    }
 else {
      BytecodeInstruction runner=(BytecodeInstruction)part;
      runner.visit(mv);
    }
  }
  controller.getOperandStack().remove(mark - controller.getOperandStack().getStackLength());
}
