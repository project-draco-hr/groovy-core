{
  ClassNode type=expression.getType();
  if (ClassHelper.isPrimitiveType(type)) {
    ClassNode objectType=ClassHelper.getWrapper(type);
    mv.visitFieldInsn(GETSTATIC,BytecodeHelper.getClassInternalName(objectType),"TYPE","Ljava/lang/Class;");
  }
 else {
    String staticFieldName=getStaticFieldName(type);
    referencedClasses.put(staticFieldName,type);
    String internalClassName=this.internalClassName;
    if (classNode.isInterface()) {
      internalClassName=BytecodeHelper.getClassInternalName(interfaceClassLoadingClass);
      mv.visitFieldInsn(GETSTATIC,internalClassName,staticFieldName,"Ljava/lang/Class;");
    }
 else {
      mv.visitMethodInsn(INVOKESTATIC,internalClassName,"$get$" + staticFieldName,"()Ljava/lang/Class;");
    }
  }
}
