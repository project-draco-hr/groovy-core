{
  ClassNode type=expression.getType();
  MethodVisitor mv=controller.getMethodVisitor();
  if (ClassHelper.isPrimitiveType(type)) {
    ClassNode objectType=ClassHelper.getWrapper(type);
    mv.visitFieldInsn(GETSTATIC,BytecodeHelper.getClassInternalName(objectType),"TYPE","Ljava/lang/Class;");
  }
 else {
    String staticFieldName=getStaticFieldName(type);
    referencedClasses.put(staticFieldName,type);
    String internalClassName=controller.getInternalClassName();
    if (controller.getClassNode().isInterface()) {
      internalClassName=BytecodeHelper.getClassInternalName(controller.getInterfaceClassLoadingClass());
      mv.visitFieldInsn(GETSTATIC,internalClassName,staticFieldName,"Ljava/lang/Class;");
    }
 else {
      mv.visitMethodInsn(INVOKESTATIC,internalClassName,"$get$" + staticFieldName,"()Ljava/lang/Class;");
    }
  }
  controller.getOperandStack().push(ClassHelper.CLASS_Type);
}
