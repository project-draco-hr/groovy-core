{
  onLineNumber(loop,"visitForLoop");
  visitStatement(loop);
  compileStack.pushLoop(loop.getVariableScope(),loop.getStatementLabel());
  Variable variable=compileStack.defineVariable(loop.getVariable(),false);
  MethodCallExpression iterator=new MethodCallExpression(loop.getCollectionExpression(),"iterator",new ArgumentListExpression());
  iterator.visit(this);
  final int iteratorIdx=compileStack.defineTemporaryVariable("iterator",ClassHelper.make(java.util.Iterator.class),true);
  Label continueLabel=compileStack.getContinueLabel();
  Label breakLabel=compileStack.getBreakLabel();
  cv.visitLabel(continueLabel);
  cv.visitVarInsn(ALOAD,iteratorIdx);
  iteratorHasNextMethod.call(cv);
  cv.visitJumpInsn(IFEQ,breakLabel);
  cv.visitVarInsn(ALOAD,iteratorIdx);
  iteratorNextMethod.call(cv);
  helper.storeVar(variable);
  loop.getLoopBlock().visit(this);
  cv.visitJumpInsn(GOTO,continueLabel);
  cv.visitLabel(breakLabel);
  compileStack.pop();
}
