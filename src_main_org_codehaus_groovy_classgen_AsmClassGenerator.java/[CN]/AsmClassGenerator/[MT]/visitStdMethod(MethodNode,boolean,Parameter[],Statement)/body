{
  MethodVisitor mv=controller.getMethodVisitor();
  if (isConstructor && (code == null || !((ConstructorNode)node).firstStatementIsSpecialConstructorCall())) {
    mv.visitVarInsn(ALOAD,0);
    mv.visitMethodInsn(INVOKESPECIAL,BytecodeHelper.getClassInternalName(controller.getClassNode().getSuperClass()),"<init>","()V");
  }
  controller.getCompileStack().init(node.getVariableScope(),parameters);
  controller.getCallSiteWriter().makeSiteEntry();
  super.visitConstructorOrMethod(node,isConstructor);
  controller.getCompileStack().clear();
  if (node.isVoidMethod()) {
    mv.visitInsn(RETURN);
  }
 else {
    ClassNode type=node.getReturnType().redirect();
    if (ClassHelper.isPrimitiveType(type)) {
      mv.visitLdcInsn(0);
      controller.getOperandStack().push(ClassHelper.int_TYPE);
      controller.getOperandStack().doGroovyCast(type);
      BytecodeHelper.doReturn(mv,type);
      controller.getOperandStack().remove(1);
    }
 else {
      mv.visitInsn(ACONST_NULL);
      BytecodeHelper.doReturn(mv,type);
    }
  }
}
