{
  FieldNode field=expression.getField();
  boolean holder=field.isHolder() && !isInClosureConstructor();
  Type type=field.getType();
  String ownerName=(field.getOwner().equals(classNode.getType())) ? internalClassName : org.objectweb.asm.Type.getInternalName(loadClass(field.getOwner()));
  if (holder) {
    Variable tv=visitASTOREInTemp(field.getName());
    int tempIndex=tv.getIndex();
    cv.visitFieldInsn(GETSTATIC,ownerName,expression.getFieldName(),BytecodeHelper.getTypeDescription(type));
    cv.visitVarInsn(ALOAD,tempIndex);
    cv.visitMethodInsn(INVOKEVIRTUAL,"groovy/lang/Reference","set","(Ljava/lang/Object;)V");
    removeVar(tv);
  }
 else {
    if (isInClosureConstructor()) {
      helper.doCast(type);
    }
 else {
      helper.doCast(type);
    }
    cv.visitFieldInsn(PUTSTATIC,ownerName,expression.getFieldName(),BytecodeHelper.getTypeDescription(type));
  }
}
