{
  Expression leftExpression=expression.getLeftExpression();
  if (leftExpression instanceof BinaryExpression) {
    BinaryExpression leftBinExpr=(BinaryExpression)leftExpression;
    if (leftBinExpr.getOperation().getType() == Types.LEFT_SQUARE_BRACKET) {
      visitMethodCallExpression(new MethodCallExpression(leftBinExpr.getLeftExpression(),"putAt",new ArgumentListExpression(new Expression[]{leftBinExpr.getRightExpression(),expression.getRightExpression()})));
      cv.visitInsn(POP);
      return;
    }
  }
  leftHandExpression=false;
  Expression rightExpression=expression.getRightExpression();
  String type=getLHSType(leftExpression);
  if (type != null) {
    if (BytecodeHelper.isPrimitiveType(type)) {
      rightExpression.visit(this);
    }
 else {
      visitCastExpression(new CastExpression(type,rightExpression));
    }
  }
 else {
    visitAndAutobox(rightExpression);
  }
  leftHandExpression=true;
  leftExpression.visit(this);
  leftHandExpression=false;
}
