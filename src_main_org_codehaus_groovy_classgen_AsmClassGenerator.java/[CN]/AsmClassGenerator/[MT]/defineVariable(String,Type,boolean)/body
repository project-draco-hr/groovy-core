{
  Variable answer=(Variable)variableStack.get(name);
  if (answer == null) {
    lastVariableIndex=getNextVariableID();
    answer=new Variable(lastVariableIndex,type,name);
    if (mutableVars.contains(name)) {
      answer.setHolder(true);
    }
    variableStack.put(name,answer);
    if (define) {
      if (definingParameters) {
        if (answer.isHolder()) {
          cv.visitTypeInsn(NEW,"groovy/lang/Reference");
          cv.visitInsn(DUP);
          cv.visitVarInsn(ALOAD,lastVariableIndex);
          cv.visitMethodInsn(INVOKESPECIAL,"groovy/lang/Reference","<init>","(Ljava/lang/Object;)V");
          cv.visitVarInsn(ASTORE,lastVariableIndex);
        }
      }
 else {
        if (answer.isHolder() && !isInScriptBody()) {
          cv.visitTypeInsn(NEW,"groovy/lang/Reference");
          cv.visitInsn(DUP);
          cv.visitMethodInsn(INVOKESPECIAL,"groovy/lang/Reference","<init>","()V");
          cv.visitVarInsn(ASTORE,lastVariableIndex);
        }
 else {
          if (!leftHandExpression) {
            cv.visitInsn(ACONST_NULL);
            cv.visitVarInsn(ASTORE,lastVariableIndex);
          }
        }
      }
    }
  }
  return answer;
}
