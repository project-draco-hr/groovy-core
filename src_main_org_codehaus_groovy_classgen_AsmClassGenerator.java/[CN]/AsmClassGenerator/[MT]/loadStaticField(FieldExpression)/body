{
  MethodVisitor mv=controller.getMethodVisitor();
  FieldNode field=fldExp.getField();
  boolean holder=field.isHolder() && !controller.isInClosureConstructor();
  ClassNode type=field.getType();
  String ownerName=(field.getOwner().equals(controller.getClassNode())) ? controller.getInternalClassName() : BytecodeHelper.getClassInternalName(field.getOwner());
  if (holder) {
    mv.visitFieldInsn(GETSTATIC,ownerName,fldExp.getFieldName(),BytecodeHelper.getTypeDescription(type));
    mv.visitMethodInsn(INVOKEVIRTUAL,"groovy/lang/Reference","get","()Ljava/lang/Object;",false);
    controller.getOperandStack().push(ClassHelper.OBJECT_TYPE);
  }
 else {
    mv.visitFieldInsn(GETSTATIC,ownerName,fldExp.getFieldName(),BytecodeHelper.getTypeDescription(type));
    controller.getOperandStack().push(field.getType());
  }
}
