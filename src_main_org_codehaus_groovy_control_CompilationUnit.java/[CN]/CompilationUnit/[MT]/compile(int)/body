{
  gotoPhase(Phases.INITIALIZATION);
  do {
    if (dequeued())     continue;
    if (throughPhase < Phases.PARSING)     break;
    gotoPhase(Phases.PARSING);
    parse();
    if (dequeued())     continue;
    if (throughPhase < Phases.CONVERSION)     break;
    gotoPhase(Phases.CONVERSION);
    convert();
    if (dequeued())     continue;
    if (throughPhase < Phases.CLASS_GENERATION)     break;
    gotoPhase(Phases.SEMANTIC_ANALYSIS);
    semanticAnalysis();
    if (dequeued())     continue;
    if (throughPhase < Phases.CLASS_GENERATION)     break;
    if (ast.hasClassNodeToCompile())     break;
    gotoPhase(Phases.CLASS_GENERATION);
    sortClasses();
    classgen();
    if (dequeued())     continue;
    if (throughPhase < Phases.OUTPUT)     break;
    gotoPhase(Phases.OUTPUT);
    output();
    if (dequeued())     continue;
    if (throughPhase < Phases.FINALIZATION)     break;
    gotoPhase(Phases.FINALIZATION);
    break;
  }
 while (true);
  for (Iterator iter=ast.iterateClassNodeToCompile(); iter.hasNext(); ) {
    String name=(String)iter.next();
    String location=ast.getScriptSourceLocation(name);
    getErrorCollector().addErrorAndContinue(new SimpleMessage("Compilation incomplete: expected to find the class " + name + " in "+ location,this));
  }
  errorCollector.failIfErrors();
}
