{
  gotoPhase(Phases.INITIALIZATION);
  do {
    if (dequeued())     continue;
    if (throughPhase < Phases.PARSING)     break;
    gotoPhase(Phases.PARSING);
    parse();
    if (dequeued())     continue;
    if (throughPhase < Phases.CONVERSION)     break;
    gotoPhase(Phases.CONVERSION);
    convert();
    if (dequeued())     continue;
    if (throughPhase < Phases.CLASS_GENERATION)     break;
    gotoPhase(Phases.SEMANTIC_ANALYSIS);
    semanticAnalysis();
    if (dequeued())     continue;
    if (throughPhase < Phases.CLASS_GENERATION)     break;
    gotoPhase(Phases.CLASS_GENERATION);
    Iterator modules=this.ast.getModules().iterator();
    while (modules.hasNext()) {
      ModuleNode module=(ModuleNode)modules.next();
      module.sortClasses();
    }
    classgen();
    if (dequeued())     continue;
    if (throughPhase < Phases.OUTPUT)     break;
    gotoPhase(Phases.OUTPUT);
    output();
    if (dequeued())     continue;
    if (throughPhase < Phases.FINALIZATION)     break;
    gotoPhase(Phases.FINALIZATION);
    break;
  }
 while (true);
}
