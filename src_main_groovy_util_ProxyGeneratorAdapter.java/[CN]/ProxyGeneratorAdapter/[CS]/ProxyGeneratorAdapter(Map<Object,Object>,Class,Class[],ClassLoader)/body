{
  super(new ClassWriter(ClassWriter.COMPUTE_FRAMES | ClassWriter.COMPUTE_MAXS));
  this.closureMap=new TreeMap<String,Closure>();
  if (closureMap != null) {
    for (    Map.Entry<Object,Object> entry : closureMap.entrySet()) {
      final Object value=entry.getValue();
      Closure cl=value instanceof Closure ? (Closure)value : new Closure(null){
        @Override public Object call(        final Object... args){
          return value;
        }
      }
;
      this.closureMap.put(findFieldName(entry.getKey()),cl);
    }
  }
  boolean isSuperClassAnInterface=superClass.isInterface();
  this.superClass=isSuperClassAnInterface ? Object.class : superClass;
  this.classList=new LinkedList<Class>();
  this.classList.add(superClass);
  if (interfaces != null) {
    Collections.addAll(this.classList,interfaces);
  }
  this.proxyName=proxyName(superClass.getSimpleName());
  this.loader=proxyLoader != null ? new InnerLoader(proxyLoader) : findClassLoader(superClass);
}
