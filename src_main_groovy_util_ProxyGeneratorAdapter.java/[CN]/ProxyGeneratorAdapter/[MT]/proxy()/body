{
  ClassWriter writer=(ClassWriter)cv;
  ClassReader cr=createClassVisitor(Object.class);
  cr.accept(this,0);
  byte[] b=writer.toByteArray();
  Class clazz=loader.defineClass(proxyName,b);
  try {
    Class[] params=new Class[closureMap.size()];
    for (int i=0; i < params.length; i++) {
      params[i]=Closure.class;
    }
    Closure[] values=closureMap.values().toArray(new Closure[closureMap.size()]);
    return (GroovyObject)clazz.getConstructor(params).newInstance((Object[])values);
  }
 catch (  InstantiationException e) {
    throw new GroovyRuntimeException(e);
  }
catch (  IllegalAccessException e) {
    throw new GroovyRuntimeException(e);
  }
catch (  NoSuchMethodException e) {
    throw new GroovyRuntimeException(e);
  }
catch (  InvocationTargetException e) {
    throw new GroovyRuntimeException(e);
  }
}
