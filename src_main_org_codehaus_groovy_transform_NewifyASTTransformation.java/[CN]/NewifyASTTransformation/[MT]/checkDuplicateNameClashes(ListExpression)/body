{
  final Set<String> seen=new HashSet<String>();
  @SuppressWarnings("unchecked") final List<ClassExpression> classes=(List)list.getExpressions();
  for (  ClassExpression ce : classes) {
    final String name=ce.getType().getNameWithoutPackage();
    if (seen.contains(name)) {
      throw new RuntimeException("Duplicate name '" + name + "' found during @"+ MY_NAME+ " processing.");
    }
    seen.add(name);
  }
}
