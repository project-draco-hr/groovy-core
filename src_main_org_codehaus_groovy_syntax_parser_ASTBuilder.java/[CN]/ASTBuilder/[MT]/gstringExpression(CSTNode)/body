{
  if (!reduction.hasChildren()) {
    return new ConstantExpression("");
  }
  if (reduction.children() == 1 && reduction.get(1).getMeaning() == Types.STRING) {
    return expression(reduction.get(1));
  }
  GStringExpression expression=new GStringExpression(reduction.getRootText());
  boolean lastWasExpression=false;
  for (int i=1; i < reduction.size(); i++) {
    CSTNode element=reduction.get(i);
    if (element.getMeaning() == Types.STRING) {
      ConstantExpression string=new ConstantExpression(element.getRootText());
      string.setCSTNode(element);
      expression.addString(string);
      lastWasExpression=false;
    }
 else {
      if (lastWasExpression) {
        expression.addString(new ConstantExpression(""));
      }
      lastWasExpression=true;
      expression.addValue(element.isEmpty() ? ConstantExpression.NULL : expression(element));
    }
  }
  return expression;
}
