{
  Statement statement=null;
switch (statementRoot.getToken().getType()) {
case (Token.KEYWORD_ASSERT):
{
      statement=assertStatement(statementRoot);
      break;
    }
case (Token.KEYWORD_FOR):
{
    statement=forStatement(statementRoot);
    break;
  }
case (Token.KEYWORD_WHILE):
{
  statement=whileStatement(statementRoot);
  break;
}
case (Token.KEYWORD_DO):
{
statement=doWhileStatement(statementRoot);
break;
}
case (Token.KEYWORD_TRY):
{
statement=tryStatement(statementRoot);
break;
}
case (Token.KEYWORD_RETURN):
{
statement=returnStatement(statementRoot);
break;
}
case (Token.KEYWORD_SWITCH):
{
statement=switchStatement(statementRoot);
break;
}
case (Token.KEYWORD_IF):
{
statement=ifStatement(statementRoot);
break;
}
case (Token.KEYWORD_THROW):
{
statement=throwStatement(statementRoot);
break;
}
case (Token.KEYWORD_BREAK):
{
statement=breakStatement(statementRoot);
break;
}
case (Token.KEYWORD_CONTINUE):
{
statement=continueStatement(statementRoot);
break;
}
case (Token.KEYWORD_SYNCHRONIZED):
{
statement=synchronizedStatement(statementRoot);
break;
}
default :
{
statement=expressionStatement(statementRoot);
}
}
statement.setCSTNode(statementRoot);
return statement;
}
