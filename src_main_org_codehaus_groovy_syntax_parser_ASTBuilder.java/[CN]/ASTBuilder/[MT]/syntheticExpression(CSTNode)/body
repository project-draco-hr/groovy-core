{
  Expression expression=null;
  int type=reduction.getMeaning();
switch (type) {
case Types.SYNTH_TERNARY:
{
      BooleanExpression condition=new BooleanExpression(expression(reduction.get(1)));
      Expression trueBranch=expression(reduction.get(2));
      Expression falseBranch=expression(reduction.get(3));
      expression=new TernaryExpression(condition,trueBranch,falseBranch);
      break;
    }
case Types.SYNTH_CAST:
{
    String className=resolveName(reduction.get(1));
    Expression body=expression(reduction.get(2));
    expression=new CastExpression(className,body);
    break;
  }
case Types.SYNTH_VARIABLE_DECLARATION:
{
  expression=variableDeclarationExpression(reduction);
  break;
}
case Types.SYNTH_METHOD_CALL:
{
expression=methodCallExpression(reduction);
break;
}
case Types.SYNTH_CLOSURE:
{
expression=closureExpression(reduction);
break;
}
case Types.SYNTH_GSTRING:
{
expression=gstringExpression(reduction);
break;
}
case Types.SYNTH_LIST:
{
expression=listExpression(reduction);
break;
}
case Types.SYNTH_MAP:
{
expression=mapExpression(reduction);
break;
}
}
return expression;
}
