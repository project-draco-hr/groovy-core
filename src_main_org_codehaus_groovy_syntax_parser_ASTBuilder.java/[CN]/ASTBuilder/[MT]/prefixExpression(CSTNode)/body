{
  Expression expression=null;
  CSTNode body=reduction.get(1);
  int type=reduction.getMeaning();
switch (type) {
case Types.PREFIX_MINUS:
    if (body.size() == 1 && body.isA(Types.NUMBER)) {
      expression=numericExpression(body,true);
    }
 else {
      expression=new NegationExpression(expression(body));
    }
  break;
case Types.PREFIX_PLUS:
expression=expression(body);
break;
case Types.NOT:
expression=new NotExpression(expression(body));
break;
case Types.BITWISE_NEGATION:
expression=new BitwiseNegExpression(expression(body));
break;
default :
expression=new PrefixExpression(reduction.getRoot(),expression(body));
break;
}
return expression;
}
