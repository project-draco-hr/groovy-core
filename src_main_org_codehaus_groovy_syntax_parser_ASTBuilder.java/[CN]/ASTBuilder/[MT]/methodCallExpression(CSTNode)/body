{
  MethodCallExpression call=null;
  CSTNode descriptor=reduction.get(1);
  Expression context=null;
  boolean implicit=false;
  String method="call";
  boolean safe=false;
  int type=descriptor.getMeaning();
switch (type) {
case Types.KEYWORD_SUPER:
{
      context=variableExpression(descriptor);
      method=identifier(descriptor);
      break;
    }
case Types.KEYWORD_THIS:
{
    context=VariableExpression.THIS_EXPRESSION;
    method=identifier(descriptor);
    break;
  }
case Types.IDENTIFIER:
{
  context=VariableExpression.THIS_EXPRESSION;
  method=identifier(descriptor);
  implicit=true;
  break;
}
case Types.DOT:
case Types.NAVIGATE:
{
context=expression(descriptor.get(1));
method=identifier(descriptor.get(2));
safe=type == Types.NAVIGATE;
break;
}
default :
{
context=expression(descriptor);
break;
}
}
Expression parameters=parameterList(reduction.get(2));
call=new MethodCallExpression(context,method,parameters);
call.setImplicitThis(implicit);
call.setSafe(safe);
return call;
}
