{
  if (method == null)   return;
  if (method instanceof MetaConstructor) {
    if (LOG_ENABLED)     LOG.info("meta method is MetaConstructor instance");
    MetaConstructor mc=(MetaConstructor)method;
    isVargs=mc.isVargsMethod();
    Constructor con=mc.getCachedConstrcutor().cachedConstructor;
    try {
      handle=LOOKUP.unreflectConstructor(con);
      if (LOG_ENABLED)       LOG.info("successfully unreflected constructor");
    }
 catch (    IllegalAccessException e) {
      throw new GroovyBugError(e);
    }
  }
 else {
    super.setHandleForMetaMethod();
  }
  if (beanConstructor) {
    MethodHandle con=BEAN_CONSTRUCTOR_PROPERTY_SETTER.bindTo(mc);
    MethodType foldTargetType=MethodType.methodType(Object.class);
    if (args.length == 3) {
      con=MethodHandles.dropArguments(con,1,targetType.parameterType(1));
      foldTargetType=foldTargetType.insertParameterTypes(0,targetType.parameterType(1));
    }
    handle=MethodHandles.foldArguments(con,handle.asType(foldTargetType));
  }
  if (method instanceof MetaConstructor) {
    handle=MethodHandles.dropArguments(handle,0,Class.class);
  }
}
