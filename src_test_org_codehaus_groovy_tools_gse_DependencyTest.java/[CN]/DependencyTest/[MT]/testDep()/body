{
  cu.addSource("testDep.gtest",new StringBufferInputStream("class C1 {}\n" + "class C2 {}\n" + "class C3 {}\n"+ "class A1 {C1 x}\n"+ "class A2 extends C2{}\n"+ "class A3 {C1 foo(C2 x){new C3()}}\n"));
  cu.compile(Phases.CLASS_GENERATION);
  assertEquals(cache.get("C1").size(),1);
  assertEquals(cache.get("C2").size(),1);
  assertEquals(cache.get("C3").size(),1);
  Set<String> dep=cache.get("A1");
  assertEquals(dep.size(),2);
  assertTrue(dep.contains("C1"));
  dep=cache.get("A2");
  assertEquals(dep.size(),2);
  assertTrue(dep.contains("C2"));
  dep=cache.get("A3");
  assertEquals(dep.size(),4);
  assertTrue(dep.contains("C1"));
  assertTrue(dep.contains("C2"));
  assertTrue(dep.contains("C3"));
}
