{
  final Object params[];
  if (this.curriedParams.length != 0) {
    final Object args[];
    if (arguments instanceof ParameterArray) {
      Object paramObj=((ParameterArray)arguments).get();
      if (paramObj instanceof Object[])       args=(Object[])paramObj;
 else       args=new Object[]{paramObj};
    }
 else {
      args=new Object[]{arguments};
    }
    params=new Object[this.curriedParams.length + args.length];
    System.arraycopy(this.curriedParams,0,params,0,this.curriedParams.length);
    System.arraycopy(args,0,params,this.curriedParams.length,args.length);
  }
 else {
    if (arguments instanceof ParameterArray) {
      Object paramObj=((ParameterArray)arguments).get();
      if (paramObj instanceof Object[])       params=(Object[])paramObj;
 else       params=new Object[]{paramObj};
    }
 else {
      params=new Object[]{arguments};
    }
  }
  final int lastParam=this.numberOfParameters - 1;
  if (this.supportsVarargs && !(this.numberOfParameters == params.length && (params[lastParam] == null || params[lastParam].getClass() == Object[].class))) {
    final Object actualParameters[]=new Object[this.numberOfParameters];
    if (params.length < lastParam) {
      throw new IncorrectClosureArgumentsException(this,params,this.parameterTypes);
    }
 else {
      final Object rest[]=new Object[params.length - lastParam];
      System.arraycopy(params,0,actualParameters,0,lastParam);
      System.arraycopy(params,lastParam,rest,0,rest.length);
      actualParameters[lastParam]=rest;
      return callViaReflection(actualParameters);
    }
  }
  if (params.length == 0) {
    return doCall();
  }
 else {
    return callViaReflection(params);
  }
}
