{
  MetaMethod method=getDoCallMethod();
  try {
    Object[] parameters=null;
    if (arguments instanceof Object[]) {
      parameters=(Object[])arguments;
      if (parameters == null || parameters.length == 0) {
        parameters=noParameters;
      }
    }
 else {
      parameters=new Object[]{arguments};
    }
    Class[] paramtypes=method.getParameterTypes();
    if (parameters.length < paramtypes.length) {
      final Object[] curried_args=parameters;
      final Closure parent=this;
      return new Closure(this){
        public Object call(        Object args){
          Object[] new_args=null;
          if (args instanceof Object[]) {
            new_args=(Object[])args;
            if (new_args == null || new_args.length == 0) {
              new_args=noParameters;
            }
          }
 else {
            new_args=new Object[]{args};
          }
          Object[] all_args=new Object[new_args.length + curried_args.length];
          System.arraycopy(curried_args,0,all_args,0,curried_args.length);
          System.arraycopy(new_args,0,all_args,curried_args.length,new_args.length);
          return parent.call(all_args);
        }
      }
;
    }
    method.checkParameters(parameters);
    return method.invoke(this,parameters);
  }
 catch (  IllegalArgumentException e) {
    throw new IncorrectClosureArgumentsException(this,arguments,method.getParameterTypes());
  }
catch (  Exception e) {
    Throwable cause=e.getCause();
    if (cause == null) {
      cause=e;
    }
    return throwRuntimeException(cause);
  }
}
