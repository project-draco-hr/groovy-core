{
  this.delegate=delegate;
  this.owner=delegate;
  Class closureClass=this.getClass();
  Method tmpCallMethod=null;
  while (true) {
    final Method methods[]=closureClass.getDeclaredMethods();
    int tmpCounter=-1;
    for (int i=0; i < methods.length; i++) {
      if ("doCall".equals(methods[i].getName()) && methods[i].getParameterTypes().length > tmpCounter) {
        tmpCallMethod=methods[i];
        tmpCounter=methods[i].getParameterTypes().length;
      }
    }
    if (tmpCallMethod != null)     break;
    closureClass=closureClass.getSuperclass();
  }
  this.doCallMethod=tmpCallMethod;
  this.parameterTypes=this.doCallMethod.getParameterTypes();
  this.numberOfParameters=this.parameterTypes.length;
  AccessController.doPrivileged(new PrivilegedAction(){
    public Object run(){
      Closure.this.doCallMethod.setAccessible(true);
      return null;
    }
  }
);
  if (this.numberOfParameters > 0) {
    this.supportsVarargs=this.parameterTypes[this.numberOfParameters - 1].equals(Object[].class);
  }
 else {
    this.supportsVarargs=false;
  }
}
