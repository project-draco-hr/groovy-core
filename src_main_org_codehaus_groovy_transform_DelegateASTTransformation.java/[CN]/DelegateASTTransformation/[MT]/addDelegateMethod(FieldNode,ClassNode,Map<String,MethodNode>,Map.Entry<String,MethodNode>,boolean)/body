{
  MethodNode method=e.getValue();
  if (!method.isPublic() || method.isStatic() || 0 != (method.getModifiers() & Opcodes.ACC_SYNTHETIC))   return;
  if (!method.getAnnotations(DEPRECATED_TYPE).isEmpty() && !deprecated)   return;
  MethodNode existingNode=ownMethods.get(e.getKey());
  if (existingNode == null || existingNode.getCode() == null) {
    final ArgumentListExpression args=new ArgumentListExpression();
    final Parameter[] params=method.getParameters();
    final Parameter[] newParams=new Parameter[params.length];
    for (int i=0; i < newParams.length; i++) {
      Parameter newParam=new Parameter(nonGeneric(params[i].getType()),params[i].getName());
      newParams[i]=newParam;
      args.addExpression(new VariableExpression(newParam));
    }
    owner.addMethod(method.getName(),method.getModifiers() & (~ACC_ABSTRACT) & (~ACC_NATIVE),nonGeneric(method.getReturnType()),newParams,method.getExceptions(),new ExpressionStatement(new MethodCallExpression(new FieldExpression(fieldNode),method.getName(),args)));
  }
}
