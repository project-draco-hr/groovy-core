{
  List<MetaMethod> res=new ArrayList<MetaMethod>();
  if (closure instanceof MethodClosure) {
    MethodClosure methodClosure=(MethodClosure)closure;
    Object owner=closure.getOwner();
    Class ownerClass=(Class)(owner instanceof Class ? owner : owner.getClass());
    for (    CachedMethod method : ReflectionCache.getCachedClass(ownerClass).getMethods()) {
      if (method.getName().equals(methodClosure.getMethod())) {
        MetaMethod metaMethod=new MethodClosureMetaMethod(name,declaringClass,closure,method);
        res.add(adjustParamTypesForStdMethods(metaMethod,name));
      }
    }
  }
 else {
    if (closure instanceof GeneratedClosure) {
      for (      CachedMethod method : ReflectionCache.getCachedClass(closure.getClass()).getMethods()) {
        if (method.getName().equals("doCall")) {
          MetaMethod metaMethod=new ClosureMetaMethod(name,declaringClass,closure,method);
          res.add(adjustParamTypesForStdMethods(metaMethod,name));
        }
      }
    }
 else {
      MetaMethod metaMethod=new AnonymousMetaMethod(closure,name,declaringClass);
      res.add(adjustParamTypesForStdMethods(metaMethod,name));
    }
  }
  return res;
}
