{
  BlockStatement body=new BlockStatement();
  final FieldExpression fieldExpr=new FieldExpression(fieldNode);
  if ((fieldNode.getModifiers() & ACC_VOLATILE) == 0) {
    body.addStatement(new IfStatement(new BooleanExpression(new BinaryExpression(fieldExpr,Token.newSymbol("!=",-1,-1),ConstantExpression.NULL)),new ExpressionStatement(fieldExpr),new ExpressionStatement(new BinaryExpression(fieldExpr,Token.newSymbol("=",-1,-1),initExpr))));
  }
 else {
    body.addStatement(new IfStatement(new BooleanExpression(new BinaryExpression(fieldExpr,Token.newSymbol("!=",-1,-1),ConstantExpression.NULL)),new ReturnStatement(fieldExpr),new SynchronizedStatement(VariableExpression.THIS_EXPRESSION,new IfStatement(new BooleanExpression(new BinaryExpression(fieldExpr,Token.newSymbol("!=",-1,-1),ConstantExpression.NULL)),new ReturnStatement(fieldExpr),new ReturnStatement(new BinaryExpression(fieldExpr,Token.newSymbol("=",-1,-1),initExpr))))));
  }
  final String name="get" + fieldNode.getName().substring(1,2).toUpperCase() + fieldNode.getName().substring(2);
  fieldNode.getDeclaringClass().addMethod(name,ACC_PUBLIC,fieldNode.getType(),Parameter.EMPTY_ARRAY,ClassNode.EMPTY_ARRAY,body);
}
