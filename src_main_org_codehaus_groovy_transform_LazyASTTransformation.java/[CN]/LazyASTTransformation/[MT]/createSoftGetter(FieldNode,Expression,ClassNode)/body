{
  final BlockStatement body=new BlockStatement();
  final Expression fieldExpr=new VariableExpression(fieldNode);
  final Expression resExpr=new VariableExpression("res",type);
  final MethodCallExpression callExpression=new MethodCallExpression(fieldExpr,"get",new ArgumentListExpression());
  callExpression.setSafe(true);
  body.addStatement(declStatement(resExpr,callExpression));
  final BlockStatement elseBlock=new BlockStatement();
  elseBlock.addStatement(assignStatement(resExpr,initExpr));
  elseBlock.addStatement(assignStatement(fieldExpr,new ConstructorCallExpression(SOFT_REF,resExpr)));
  elseBlock.addStatement(new ExpressionStatement(resExpr));
  final Statement mainIf=new IfStatement(notNullExpr(resExpr),new ExpressionStatement(resExpr),elseBlock);
  if (fieldNode.isVolatile()) {
    body.addStatement(new IfStatement(notNullExpr(resExpr),new ExpressionStatement(resExpr),new SynchronizedStatement(syncTarget(fieldNode),mainIf)));
  }
 else {
    body.addStatement(mainIf);
  }
  addMethod(fieldNode,body,type);
}
