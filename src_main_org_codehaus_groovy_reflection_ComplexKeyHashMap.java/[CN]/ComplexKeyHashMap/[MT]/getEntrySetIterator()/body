{
  return new Iterator(){
    Entry next;
    int index;
    Entry current;
{
      Entry[] t=table;
      int i=t.length;
      Entry n=null;
      if (size != 0) {
        while (i > 0 && (n=t[--i]) == null) {
        }
      }
      next=n;
      index=i;
    }
    public boolean hasNext(){
      return next != null;
    }
    public Object next(){
      return nextEntry();
    }
    Entry nextEntry(){
      Entry e=next;
      if (e == null)       throw new NoSuchElementException();
      Entry n=e.next;
      Entry[] t=table;
      int i=index;
      while (n == null && i > 0)       n=t[--i];
      index=i;
      next=n;
      return current=e;
    }
    public void remove(){
      throw new UnsupportedOperationException();
    }
  }
;
}
