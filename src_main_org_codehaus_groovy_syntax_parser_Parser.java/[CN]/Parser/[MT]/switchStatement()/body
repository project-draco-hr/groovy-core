{
  Reduction statement=consume(Types.KEYWORD_SWITCH).asReduction();
  consume(Types.LEFT_PARENTHESIS);
  statement.add(expression());
  consume(Types.RIGHT_PARENTHESIS);
  consume(Types.LEFT_CURLY_BRACE);
  boolean defaultFound=false;
  while (lt() == Types.KEYWORD_CASE || lt() == Types.KEYWORD_DEFAULT) {
    Reduction caseBlock=null;
    if (lt() == Types.KEYWORD_CASE) {
      caseBlock=consume(Types.KEYWORD_CASE).asReduction(expression());
    }
 else     if (lt() == Types.KEYWORD_DEFAULT) {
      if (defaultFound) {
        controller.addError("duplicate default entry in switch",la());
      }
      caseBlock=consume(Types.KEYWORD_DEFAULT).asReduction();
      defaultFound=true;
    }
 else {
      error(new int[]{Types.KEYWORD_DEFAULT,Types.KEYWORD_CASE});
      recover(Types.SWITCH_ENTRIES);
    }
    consume(Types.COLON);
    boolean first=true;
    while (!la().isA(Types.SWITCH_BLOCK_TERMINATORS)) {
      caseBlock.add(statement(first));
      first=false;
    }
    statement.add(caseBlock);
  }
  consume(Types.RIGHT_CURLY_BRACE);
  return statement;
}
