{
  CSTNode statement=rootNode(Token.KEYWORD_SWITCH);
  consume(Token.LEFT_PARENTHESIS);
  statement.addChild(expression());
  consume(Token.RIGHT_PARENTHESIS);
  consume(Token.LEFT_CURLY_BRACE);
  boolean defaultFound=false;
  while (lt() == Token.KEYWORD_CASE || lt() == Token.KEYWORD_DEFAULT) {
    CSTNode caseBlock=null;
    if (lt() == Token.KEYWORD_CASE) {
      caseBlock=rootNode(Token.KEYWORD_CASE);
      caseBlock.addChild(expression());
    }
 else {
      if (defaultFound) {
        throw new ParserException("duplicate default entry in switch",la());
      }
      caseBlock=rootNode(Token.KEYWORD_DEFAULT);
      defaultFound=true;
    }
    consume(Token.COLON);
    boolean first=true;
    while (lt() != -1 && !la().isA(SWITCH_STATEMENT_BLOCK_TERMINATORS)) {
      caseBlock.addChild(statement(first));
      first=false;
    }
    statement.addChild(caseBlock);
  }
  consume(Token.RIGHT_CURLY_BRACE);
  return statement;
}
