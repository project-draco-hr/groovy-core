{
  Reduction typeList=null;
  if (lt() == declarator) {
    typeList=consume(declarator).asReduction();
    while (limit == 0 || typeList.children() < limit) {
      try {
        if (typeList.children() > 0) {
          consume(Types.COMMA);
        }
        typeList.add(datatype(false));
      }
 catch (      SyntaxException e) {
        collector.add(e);
        recover(Types.TYPE_LIST_TERMINATORS);
      }
      if (!la().isA(Types.COMMA)) {
        break;
      }
    }
  }
 else {
    if (optional) {
      typeList=Reduction.EMPTY;
    }
 else {
      error(declarator);
    }
  }
  return typeList;
}
