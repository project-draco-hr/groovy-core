{
  Reduction list=Reduction.newContainer();
  Reduction named=null;
  boolean done=false;
  do {
    if (la().canMean(Types.IDENTIFIER) && la(2).isA(Types.COLON)) {
      if (named == null) {
        named=Token.newPlaceholder(Types.SYNTH_MAP).asReduction();
        list.add(named);
      }
      Token name=nameReference(false);
      name.setMeaning(Types.STRING);
      named.add(consume(Types.COLON).asReduction(name,expression()));
    }
 else {
      list.add(expression());
    }
    if (lt() == Types.COMMA) {
      consume();
    }
 else {
      done=true;
    }
  }
 while (!done);
  return list;
}
