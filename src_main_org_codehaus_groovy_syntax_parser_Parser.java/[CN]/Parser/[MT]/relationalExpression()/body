{
  CSTNode expr=rangeExpression();
switch (lt_bare()) {
case (Token.COMPARE_LESS_THAN):
case (Token.COMPARE_LESS_THAN_EQUAL):
case (Token.COMPARE_GREATER_THAN):
case (Token.COMPARE_GREATER_THAN_EQUAL):
case (Token.FIND_REGEX):
case (Token.MATCH_REGEX):
case (Token.KEYWORD_INSTANCEOF):
{
      expr=rootNode(lt_bare(),expr);
      optionalNewlines();
      expr.addChild(rangeExpression());
      break;
    }
case (Token.LEFT_SQUARE_BRACKET):
{
    expr=rootNode(lt_bare(),expr);
    optionalNewlines();
    expr.addChild(rangeExpression());
    optionalNewlines();
    consume(Token.RIGHT_SQUARE_BRACKET);
    break;
  }
}
return expr;
}
