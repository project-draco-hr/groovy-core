{
  CSTNode expr=multiplicativeExpression();
  LOOP:   while (true) {
    SWITCH: switch (lt_bare()) {
case (Token.PLUS):
case (Token.MINUS):
{
        expr=rootNode(lt_bare(),expr);
        optionalNewlines();
        expr.addChild(multiplicativeExpression());
        break SWITCH;
      }
default :
{
      break LOOP;
    }
}
}
return expr;
}
