{
  CSTNode result=null;
  if (lt() == Types.KEYWORD_DEF) {
    consume();
    Reduction modifiers=modifierList(false,false);
    CSTNode type=optionalDatatype(false,true);
    Token identifier=nameDeclaration(false);
    result=methodDeclaration(modifiers,type,identifier,false);
  }
 else   if (lt() == Types.KEYWORD_SYNCHRONIZED && lt(2) == Types.LEFT_PARENTHESIS) {
    result=synchronizedStatement();
  }
 else   if (la().isA(Types.DECLARATION_MODIFIER) || la().isA(Types.TYPE_DECLARATION)) {
    Reduction modifiers=modifierList(true,true);
switch (lt()) {
case Types.KEYWORD_CLASS:
{
        result=classDeclaration(modifiers);
        break;
      }
case Types.KEYWORD_INTERFACE:
{
      result=interfaceDeclaration(modifiers);
      break;
    }
default :
{
    error(new int[]{Types.KEYWORD_CLASS,Types.KEYWORD_INTERFACE});
    break;
  }
}
}
 else {
result=statement();
}
return result;
}
