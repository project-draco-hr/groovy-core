{
  Reduction importStatement=consume(Types.KEYWORD_IMPORT).asReduction();
  CSTNode packageNode=null;
  if (lt(2) == Types.DOT) {
    packageNode=consume(Types.IDENTIFIER).asReduction();
    while (lt(3) == Types.DOT) {
      packageNode=consume(Types.DOT).asReduction(packageNode);
      packageNode.add(consume(Types.IDENTIFIER));
    }
    consume(Types.DOT);
  }
  if (packageNode == null) {
    packageNode=Reduction.EMPTY;
  }
  importStatement.add(packageNode);
  if (!packageNode.isEmpty() && lt() == Types.STAR) {
    importStatement.add(consume(Types.STAR));
  }
 else {
    boolean done=false;
    while (!done) {
      Reduction clause=consume(Types.IDENTIFIER).asReduction();
      if (lt() == Types.KEYWORD_AS) {
        consume(Types.KEYWORD_AS);
        clause.add(consume(Types.IDENTIFIER));
      }
      importStatement.add(clause);
      if (lt() == Types.COMMA) {
        consume(Types.COMMA);
      }
 else {
        done=true;
      }
    }
  }
  endOfStatement(false);
  return importStatement;
}
