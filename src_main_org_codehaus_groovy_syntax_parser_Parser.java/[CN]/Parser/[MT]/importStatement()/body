{
  CSTNode importStatement=rootNode(Token.KEYWORD_IMPORT);
  CSTNode packageNode=null;
  if (lt(2) == Token.DOT) {
    packageNode=rootNode(Token.IDENTIFIER);
    while (lt(3) == Token.DOT) {
      packageNode=rootNode(Token.DOT,packageNode);
      packageNode.addChild(rootNode(Token.IDENTIFIER));
    }
    ;
    consume(Token.DOT);
  }
  if (packageNode == null) {
    packageNode=new CSTNode();
  }
  importStatement.addChild(packageNode);
  if (!packageNode.isEmpty() && lt() == Token.MULTIPLY) {
    importStatement.addChild(rootNode(Token.MULTIPLY));
  }
 else {
    boolean done=false;
    while (!done) {
      CSTNode clause=rootNode(Token.IDENTIFIER);
      if (lt() == Token.KEYWORD_AS) {
        consume(Token.KEYWORD_AS);
        clause.addChild(rootNode(Token.IDENTIFIER));
      }
      importStatement.addChild(clause);
      if (lt() == Token.COMMA) {
        consume(Token.COMMA);
      }
 else {
        done=true;
      }
    }
  }
  endOfStatement(false);
  return importStatement;
}
