{
  Reduction expression=((Token)datatype.get(0)).dup().asReduction(datatype);
  expression.setMeaning(Types.SYNTH_VARIABLE_DECLARATION);
  boolean done=false;
  do {
    try {
      Reduction declaration=(Reduction)expression.add(nameDeclaration(false).asReduction());
      consume(Types.EQUAL);
      declaration.add(expression());
    }
 catch (    SyntaxException e) {
      collector.add(e);
      recover(Types.ANY_END_OF_STATEMENT);
    }
    if (lt() == Types.COMMA) {
      consume(Types.COMMA);
    }
 else {
      done=true;
    }
  }
 while (!done);
  return expression;
}
