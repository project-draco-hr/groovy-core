{
  Reduction method=identifier.asReduction(modifiers,type);
  method.setMeaning(Types.SYNTH_METHOD);
  consume(Types.LEFT_PARENTHESIS);
  method.add(parameterDeclarationList());
  consume(Types.RIGHT_PARENTHESIS);
  try {
    method.add(typeList(Types.KEYWORD_THROWS,true,0));
  }
 catch (  SyntaxException e) {
    collector.add(e);
    method.add(Reduction.EMPTY);
  }
  CSTNode body=null;
  if (emptyOnly) {
    if (lt() == Types.LEFT_CURLY_BRACE) {
      collector.add(new ParserException("abstract and interface methods cannot have a body",la()));
    }
 else {
      body=Reduction.EMPTY;
      endOfStatement();
    }
  }
  if (body == null) {
    body=statementBody(true);
  }
  method.add(body);
  return method;
}
