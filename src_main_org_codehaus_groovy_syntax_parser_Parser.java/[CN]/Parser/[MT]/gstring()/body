{
  Reduction data=Reduction.newContainer();
  consume(Types.GSTRING_START);
  while (lt() != Types.GSTRING_END && lt() != Types.EOF) {
switch (lt()) {
case Types.STRING:
      data.add(consume());
    break;
case Types.GSTRING_EXPRESSION_START:
  consume();
data.add(expression());
consume(Types.GSTRING_EXPRESSION_END);
break;
default :
throw new GroovyBugError("gstring found invalid token: " + la());
}
}
Reduction complete=consume(Types.GSTRING_END).asReduction();
complete.addChildrenOf(data);
complete.setMeaning(Types.SYNTH_GSTRING);
return complete;
}
