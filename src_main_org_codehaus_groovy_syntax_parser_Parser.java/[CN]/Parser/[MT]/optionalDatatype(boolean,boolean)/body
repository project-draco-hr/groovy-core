{
  CSTNode type=Reduction.EMPTY;
  Token next=la(significantNewlines);
  if (next.isA(Types.IDENTIFIER)) {
    if (lt(2,significantNewlines) == Types.IDENTIFIER) {
      type=datatype(allowVoid);
    }
 else {
      getTokenStream().checkpoint();
      try {
        type=datatype(allowVoid);
        if (lt(significantNewlines) != Types.IDENTIFIER) {
          throw new Exception();
        }
      }
 catch (      Exception e) {
        getTokenStream().restore();
        type=Reduction.EMPTY;
      }
    }
  }
 else   if (next.isA(Types.PRIMITIVE_TYPE)) {
    type=datatype(allowVoid);
  }
  return type;
}
