{
  Parameter[] origParams=consNode.getParameters();
  if (consNode.isPrivate())   return;
  Parameter[] params=new Parameter[origParams.length];
  Map<String,ClassNode> genericsSpec=createGenericsSpec(classNode);
  extractSuperClassGenerics(classNode,classNode.getSuperClass(),genericsSpec);
  List<Expression> theArgs=buildParams(origParams,params,genericsSpec,copyParameterAnnotations);
  if (isExisting(classNode,params))   return;
  ConstructorNode added=classNode.addConstructor(consNode.getModifiers(),params,consNode.getExceptions(),block(ctorSuperS(args(theArgs))));
  if (copyConstructorAnnotations) {
    added.addAnnotations(copyAnnotatedNodeAnnotations(consNode,MY_TYPE_NAME));
  }
}
