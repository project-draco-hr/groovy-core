{
  Script script;
  if (scriptClass == null) {
    script=new NullScript(context);
  }
 else {
    try {
      if (Script.class.isAssignableFrom(scriptClass)) {
        try {
          Constructor constructor=scriptClass.getConstructor(Binding.class);
          script=(Script)constructor.newInstance(context);
        }
 catch (        NoSuchMethodException e) {
          script=(Script)scriptClass.newInstance();
          script.setBinding(context);
        }
      }
 else {
        final GroovyObject object=(GroovyObject)scriptClass.newInstance();
        script=new Script(context){
          public Object run(){
            Object argsToPass=EMPTY_MAIN_ARGS;
            try {
              Object args=getProperty("args");
              if (args instanceof String[]) {
                argsToPass=args;
              }
            }
 catch (            MissingPropertyException e) {
            }
            object.invokeMethod("main",argsToPass);
            return null;
          }
        }
;
        Map variables=context.getVariables();
        MetaClass mc=getMetaClass(object);
        for (        Object o : variables.entrySet()) {
          Map.Entry entry=(Map.Entry)o;
          String key=entry.getKey().toString();
          setPropertySafe(key.startsWith("_") ? script : object,mc,key,entry.getValue());
        }
      }
    }
 catch (    Exception e) {
      throw new GroovyRuntimeException("Failed to create Script instance for class: " + scriptClass + ". Reason: "+ e,e);
    }
  }
  return script;
}
