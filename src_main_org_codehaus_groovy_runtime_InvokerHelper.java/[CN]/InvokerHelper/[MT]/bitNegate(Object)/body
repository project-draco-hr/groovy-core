{
  if (value instanceof Integer) {
    Integer number=(Integer)value;
    return integerValue(~number.intValue());
  }
 else   if (value instanceof Long) {
    Long number=(Long)value;
    return new Long(~number.longValue());
  }
 else   if (value instanceof BigInteger) {
    return ((BigInteger)value).not();
  }
 else   if (value instanceof String) {
    return getInstance().regexPattern(value);
  }
 else   if (value instanceof ArrayList) {
    ArrayList newlist=new ArrayList();
    Iterator it=((ArrayList)value).iterator();
    for (; it.hasNext(); ) {
      newlist.add(bitNegate(it.next()));
    }
    return newlist;
  }
 else {
    throw new BitwiseNegateEvaluatingException("Cannot bitwise negate type " + value.getClass().getName() + ", value "+ value);
  }
}
