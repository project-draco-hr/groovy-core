{
  if (!isEnum)   printConstructors(out,classNode);
  @SuppressWarnings("unchecked") List<MethodNode> methods=(List)propertyMethods.clone();
  methods.addAll(classNode.getMethods());
  for (  MethodNode method : methods) {
    if (isEnum && method.isSynthetic()) {
      String name=method.getName();
      Parameter[] params=method.getParameters();
      if (name.equals("values") && params.length == 0)       continue;
      if (name.equals("valueOf") && params.length == 1 && params[0].getType().equals(ClassHelper.STRING_TYPE)) {
        continue;
      }
    }
    printMethod(out,classNode,method);
  }
  for (  ClassNode node : classNode.getAllInterfaces()) {
    if (Traits.isTrait(node)) {
      List<MethodNode> traitMethods=node.getMethods();
      for (      MethodNode traitMethod : traitMethods) {
        MethodNode method=classNode.getMethod(traitMethod.getName(),traitMethod.getParameters());
        if (method == null) {
          for (          MethodNode methodNode : propertyMethods) {
            if (methodNode.getName().equals(traitMethod.getName())) {
              boolean sameParams=sameParameterTypes(methodNode);
              if (sameParams) {
                method=methodNode;
                break;
              }
            }
          }
          if (method == null) {
            printMethod(out,classNode,traitMethod);
          }
        }
      }
    }
  }
}
