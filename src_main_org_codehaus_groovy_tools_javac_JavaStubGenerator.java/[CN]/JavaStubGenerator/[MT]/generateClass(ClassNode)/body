{
  if (requireSuperResolved && !classNode.getSuperClass().isResolved()) {
    return;
  }
  if (classNode instanceof InnerClassNode)   return;
  if ((classNode.getModifiers() & Opcodes.ACC_PRIVATE) != 0)   return;
  String fileName=classNode.getName().replace('.','/');
  mkdirs(outputPath,fileName);
  toCompile.add(fileName);
  File file=new File(outputPath,fileName + ".java");
  FileOutputStream fos=new FileOutputStream(file);
  PrintWriter out=new PrintWriter(fos);
  try {
    String packageName=classNode.getPackageName();
    if (packageName != null) {
      out.println("package " + packageName + ";\n");
    }
    printImports(out,classNode);
    printClassContents(out,classNode);
  }
  finally {
    try {
      out.close();
    }
 catch (    Exception e) {
    }
    try {
      fos.close();
    }
 catch (    IOException e) {
    }
  }
}
