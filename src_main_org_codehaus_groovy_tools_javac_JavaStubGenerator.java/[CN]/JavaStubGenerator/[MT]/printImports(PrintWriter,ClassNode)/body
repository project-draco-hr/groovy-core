{
  List<String> imports=new ArrayList<String>();
  ModuleNode moduleNode=classNode.getModule();
  for (  ImportNode importNode : moduleNode.getStarImports()) {
    imports.add(importNode.getPackageName());
  }
  for (  ImportNode imp : moduleNode.getImports()) {
    if (imp.getAlias() == null)     imports.add(imp.getType().getName());
  }
  imports.addAll(Arrays.asList(ResolveVisitor.DEFAULT_IMPORTS));
  for (  Map.Entry<String,ImportNode> entry : moduleNode.getStaticImports().entrySet()) {
    imports.add("static " + entry.getValue().getType().getName() + "."+ entry.getKey());
  }
  for (  Map.Entry<String,ImportNode> entry : moduleNode.getStaticStarImports().entrySet()) {
    imports.add("static " + entry.getValue().getType().getName() + ".");
  }
  for (  String imp : imports) {
    String s=new StringBuilder().append("import ").append(imp).append((imp.charAt(imp.length() - 1) == '.') ? "*;" : ";").toString().replace('$','.');
    out.println(s);
  }
  out.println();
}
