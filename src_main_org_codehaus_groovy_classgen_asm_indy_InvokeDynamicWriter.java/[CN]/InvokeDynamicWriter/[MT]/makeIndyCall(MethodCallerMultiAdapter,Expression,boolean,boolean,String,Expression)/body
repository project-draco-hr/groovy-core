{
  OperandStack operandStack=controller.getOperandStack();
  String sig=prepareIndyCall(receiver,implicitThis);
  int numberOfArguments=1;
  ArgumentListExpression ae=makeArgumentList(arguments);
  boolean containsSpreadExpression=AsmClassGenerator.containsSpreadExpression(arguments);
  if (containsSpreadExpression) {
    controller.getAcg().despreadList(ae.getExpressions(),true);
    sig+=getTypeDescription(Object[].class);
  }
 else {
    for (    Expression arg : ae.getExpressions()) {
      arg.visit(controller.getAcg());
      if (arg instanceof CastExpression) {
        operandStack.box();
        controller.getAcg().loadWrapper(arg);
        sig+=getTypeDescription(Wrapper.class);
      }
 else {
        sig+=getTypeDescription(operandStack.getTopOperand());
      }
      numberOfArguments++;
    }
  }
  sig+=")Ljava/lang/Object;";
  String callSiteName=METHOD.getCallSiteName();
  if (adapter == null)   callSiteName=INIT.getCallSiteName();
  int flags=getMethodCallFlags(adapter,safe,containsSpreadExpression);
  finishIndyCall(BSM,callSiteName,sig,numberOfArguments,methodName,flags);
}
